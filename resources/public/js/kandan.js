/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Curry                   = __webpack_require__(1);
	var Utils                   = __webpack_require__(4);
	var Kandan                  = __webpack_require__(39);
	var ReactDom                = __webpack_require__(77);
	var Caml_builtin_exceptions = __webpack_require__(3);

	Utils.setPageTitle("Loading...");

	var match = document.getElementById("index");

	if (match !== null) {
	  ReactDom.render(Curry._4(Kandan.createElement("Hello!", match), /* [] */0, /* None */0, /* None */0, /* () */0), match);
	} else {
	  throw [
	        Caml_builtin_exceptions.invalid_argument,
	        "Unable to find root 'index' element, cannot start app"
	      ];
	}

	/*  Not a pure module */


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_array = __webpack_require__(2);

	function app(_f, _args) {
	  while(true) {
	    var args = _args;
	    var f = _f;
	    var arity = f.length;
	    var arity$1 = arity ? arity : 1;
	    var len = args.length;
	    var d = arity$1 - len | 0;
	    if (d) {
	      if (d < 0) {
	        _args = Caml_array.caml_array_sub(args, arity$1, -d | 0);
	        _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity$1));
	        continue ;
	        
	      } else {
	        return (function(f,args){
	        return function (x) {
	          return app(f, args.concat(/* array */[x]));
	        }
	        }(f,args));
	      }
	    } else {
	      return f.apply(null, args);
	    }
	  };
	}

	function curry_1(o, a0, arity) {
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[a0]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          return o(a0);
	      case 2 : 
	          return function (param) {
	            return o(a0, param);
	          };
	      case 3 : 
	          return function (param, param$1) {
	            return o(a0, param, param$1);
	          };
	      case 4 : 
	          return function (param, param$1, param$2) {
	            return o(a0, param, param$1, param$2);
	          };
	      case 5 : 
	          return function (param, param$1, param$2, param$3) {
	            return o(a0, param, param$1, param$2, param$3);
	          };
	      case 6 : 
	          return function (param, param$1, param$2, param$3, param$4) {
	            return o(a0, param, param$1, param$2, param$3, param$4);
	          };
	      case 7 : 
	          return function (param, param$1, param$2, param$3, param$4, param$5) {
	            return o(a0, param, param$1, param$2, param$3, param$4, param$5);
	          };
	      
	    }
	  }
	}

	function _1(o, a0) {
	  var arity = o.length;
	  if (arity === 1) {
	    return o(a0);
	  } else {
	    return curry_1(o, a0, arity);
	  }
	}

	function __1(o) {
	  var arity = o.length;
	  if (arity === 1) {
	    return o;
	  } else {
	    return function (a0) {
	      return _1(o, a0);
	    };
	  }
	}

	function curry_2(o, a0, a1, arity) {
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          return app(o(a0), /* array */[a1]);
	      case 2 : 
	          return o(a0, a1);
	      case 3 : 
	          return function (param) {
	            return o(a0, a1, param);
	          };
	      case 4 : 
	          return function (param, param$1) {
	            return o(a0, a1, param, param$1);
	          };
	      case 5 : 
	          return function (param, param$1, param$2) {
	            return o(a0, a1, param, param$1, param$2);
	          };
	      case 6 : 
	          return function (param, param$1, param$2, param$3) {
	            return o(a0, a1, param, param$1, param$2, param$3);
	          };
	      case 7 : 
	          return function (param, param$1, param$2, param$3, param$4) {
	            return o(a0, a1, param, param$1, param$2, param$3, param$4);
	          };
	      
	    }
	  }
	}

	function _2(o, a0, a1) {
	  var arity = o.length;
	  if (arity === 2) {
	    return o(a0, a1);
	  } else {
	    return curry_2(o, a0, a1, arity);
	  }
	}

	function __2(o) {
	  var arity = o.length;
	  if (arity === 2) {
	    return o;
	  } else {
	    return function (a0, a1) {
	      return _2(o, a0, a1);
	    };
	  }
	}

	function curry_3(o, a0, a1, a2, arity) {
	  var exit = 0;
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1,
	                a2
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          exit = 1;
	          break;
	      case 2 : 
	          return app(o(a0, a1), /* array */[a2]);
	      case 3 : 
	          return o(a0, a1, a2);
	      case 4 : 
	          return function (param) {
	            return o(a0, a1, a2, param);
	          };
	      case 5 : 
	          return function (param, param$1) {
	            return o(a0, a1, a2, param, param$1);
	          };
	      case 6 : 
	          return function (param, param$1, param$2) {
	            return o(a0, a1, a2, param, param$1, param$2);
	          };
	      case 7 : 
	          return function (param, param$1, param$2, param$3) {
	            return o(a0, a1, a2, param, param$1, param$2, param$3);
	          };
	      
	    }
	  }
	  if (exit === 1) {
	    return app(o(a0), /* array */[
	                a1,
	                a2
	              ]);
	  }
	  
	}

	function _3(o, a0, a1, a2) {
	  var arity = o.length;
	  if (arity === 3) {
	    return o(a0, a1, a2);
	  } else {
	    return curry_3(o, a0, a1, a2, arity);
	  }
	}

	function __3(o) {
	  var arity = o.length;
	  if (arity === 3) {
	    return o;
	  } else {
	    return function (a0, a1, a2) {
	      return _3(o, a0, a1, a2);
	    };
	  }
	}

	function curry_4(o, a0, a1, a2, a3, arity) {
	  var exit = 0;
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1,
	                a2,
	                a3
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          exit = 1;
	          break;
	      case 2 : 
	          return app(o(a0, a1), /* array */[
	                      a2,
	                      a3
	                    ]);
	      case 3 : 
	          return app(o(a0, a1, a2), /* array */[a3]);
	      case 4 : 
	          return o(a0, a1, a2, a3);
	      case 5 : 
	          return function (param) {
	            return o(a0, a1, a2, a3, param);
	          };
	      case 6 : 
	          return function (param, param$1) {
	            return o(a0, a1, a2, a3, param, param$1);
	          };
	      case 7 : 
	          return function (param, param$1, param$2) {
	            return o(a0, a1, a2, a3, param, param$1, param$2);
	          };
	      
	    }
	  }
	  if (exit === 1) {
	    return app(o(a0), /* array */[
	                a1,
	                a2,
	                a3
	              ]);
	  }
	  
	}

	function _4(o, a0, a1, a2, a3) {
	  var arity = o.length;
	  if (arity === 4) {
	    return o(a0, a1, a2, a3);
	  } else {
	    return curry_4(o, a0, a1, a2, a3, arity);
	  }
	}

	function __4(o) {
	  var arity = o.length;
	  if (arity === 4) {
	    return o;
	  } else {
	    return function (a0, a1, a2, a3) {
	      return _4(o, a0, a1, a2, a3);
	    };
	  }
	}

	function curry_5(o, a0, a1, a2, a3, a4, arity) {
	  var exit = 0;
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1,
	                a2,
	                a3,
	                a4
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          exit = 1;
	          break;
	      case 2 : 
	          return app(o(a0, a1), /* array */[
	                      a2,
	                      a3,
	                      a4
	                    ]);
	      case 3 : 
	          return app(o(a0, a1, a2), /* array */[
	                      a3,
	                      a4
	                    ]);
	      case 4 : 
	          return app(o(a0, a1, a2, a3), /* array */[a4]);
	      case 5 : 
	          return o(a0, a1, a2, a3, a4);
	      case 6 : 
	          return function (param) {
	            return o(a0, a1, a2, a3, a4, param);
	          };
	      case 7 : 
	          return function (param, param$1) {
	            return o(a0, a1, a2, a3, a4, param, param$1);
	          };
	      
	    }
	  }
	  if (exit === 1) {
	    return app(o(a0), /* array */[
	                a1,
	                a2,
	                a3,
	                a4
	              ]);
	  }
	  
	}

	function _5(o, a0, a1, a2, a3, a4) {
	  var arity = o.length;
	  if (arity === 5) {
	    return o(a0, a1, a2, a3, a4);
	  } else {
	    return curry_5(o, a0, a1, a2, a3, a4, arity);
	  }
	}

	function __5(o) {
	  var arity = o.length;
	  if (arity === 5) {
	    return o;
	  } else {
	    return function (a0, a1, a2, a3, a4) {
	      return _5(o, a0, a1, a2, a3, a4);
	    };
	  }
	}

	function curry_6(o, a0, a1, a2, a3, a4, a5, arity) {
	  var exit = 0;
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1,
	                a2,
	                a3,
	                a4,
	                a5
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          exit = 1;
	          break;
	      case 2 : 
	          return app(o(a0, a1), /* array */[
	                      a2,
	                      a3,
	                      a4,
	                      a5
	                    ]);
	      case 3 : 
	          return app(o(a0, a1, a2), /* array */[
	                      a3,
	                      a4,
	                      a5
	                    ]);
	      case 4 : 
	          return app(o(a0, a1, a2, a3), /* array */[
	                      a4,
	                      a5
	                    ]);
	      case 5 : 
	          return app(o(a0, a1, a2, a3, a4), /* array */[a5]);
	      case 6 : 
	          return o(a0, a1, a2, a3, a4, a5);
	      case 7 : 
	          return function (param) {
	            return o(a0, a1, a2, a3, a4, a5, param);
	          };
	      
	    }
	  }
	  if (exit === 1) {
	    return app(o(a0), /* array */[
	                a1,
	                a2,
	                a3,
	                a4,
	                a5
	              ]);
	  }
	  
	}

	function _6(o, a0, a1, a2, a3, a4, a5) {
	  var arity = o.length;
	  if (arity === 6) {
	    return o(a0, a1, a2, a3, a4, a5);
	  } else {
	    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);
	  }
	}

	function __6(o) {
	  var arity = o.length;
	  if (arity === 6) {
	    return o;
	  } else {
	    return function (a0, a1, a2, a3, a4, a5) {
	      return _6(o, a0, a1, a2, a3, a4, a5);
	    };
	  }
	}

	function curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {
	  var exit = 0;
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1,
	                a2,
	                a3,
	                a4,
	                a5,
	                a6
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          exit = 1;
	          break;
	      case 2 : 
	          return app(o(a0, a1), /* array */[
	                      a2,
	                      a3,
	                      a4,
	                      a5,
	                      a6
	                    ]);
	      case 3 : 
	          return app(o(a0, a1, a2), /* array */[
	                      a3,
	                      a4,
	                      a5,
	                      a6
	                    ]);
	      case 4 : 
	          return app(o(a0, a1, a2, a3), /* array */[
	                      a4,
	                      a5,
	                      a6
	                    ]);
	      case 5 : 
	          return app(o(a0, a1, a2, a3, a4), /* array */[
	                      a5,
	                      a6
	                    ]);
	      case 6 : 
	          return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);
	      case 7 : 
	          return o(a0, a1, a2, a3, a4, a5, a6);
	      
	    }
	  }
	  if (exit === 1) {
	    return app(o(a0), /* array */[
	                a1,
	                a2,
	                a3,
	                a4,
	                a5,
	                a6
	              ]);
	  }
	  
	}

	function _7(o, a0, a1, a2, a3, a4, a5, a6) {
	  var arity = o.length;
	  if (arity === 7) {
	    return o(a0, a1, a2, a3, a4, a5, a6);
	  } else {
	    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);
	  }
	}

	function __7(o) {
	  var arity = o.length;
	  if (arity === 7) {
	    return o;
	  } else {
	    return function (a0, a1, a2, a3, a4, a5, a6) {
	      return _7(o, a0, a1, a2, a3, a4, a5, a6);
	    };
	  }
	}

	function curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {
	  var exit = 0;
	  if (arity > 7 || arity < 0) {
	    return app(o, /* array */[
	                a0,
	                a1,
	                a2,
	                a3,
	                a4,
	                a5,
	                a6,
	                a7
	              ]);
	  } else {
	    switch (arity) {
	      case 0 : 
	      case 1 : 
	          exit = 1;
	          break;
	      case 2 : 
	          return app(o(a0, a1), /* array */[
	                      a2,
	                      a3,
	                      a4,
	                      a5,
	                      a6,
	                      a7
	                    ]);
	      case 3 : 
	          return app(o(a0, a1, a2), /* array */[
	                      a3,
	                      a4,
	                      a5,
	                      a6,
	                      a7
	                    ]);
	      case 4 : 
	          return app(o(a0, a1, a2, a3), /* array */[
	                      a4,
	                      a5,
	                      a6,
	                      a7
	                    ]);
	      case 5 : 
	          return app(o(a0, a1, a2, a3, a4), /* array */[
	                      a5,
	                      a6,
	                      a7
	                    ]);
	      case 6 : 
	          return app(o(a0, a1, a2, a3, a4, a5), /* array */[
	                      a6,
	                      a7
	                    ]);
	      case 7 : 
	          return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);
	      
	    }
	  }
	  if (exit === 1) {
	    return app(o(a0), /* array */[
	                a1,
	                a2,
	                a3,
	                a4,
	                a5,
	                a6,
	                a7
	              ]);
	  }
	  
	}

	function _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {
	  var arity = o.length;
	  if (arity === 8) {
	    return o(a0, a1, a2, a3, a4, a5, a6, a7);
	  } else {
	    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);
	  }
	}

	function __8(o) {
	  var arity = o.length;
	  if (arity === 8) {
	    return o;
	  } else {
	    return function (a0, a1, a2, a3, a4, a5, a6, a7) {
	      return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);
	    };
	  }
	}

	exports.app     = app;
	exports.curry_1 = curry_1;
	exports._1      = _1;
	exports.__1     = __1;
	exports.curry_2 = curry_2;
	exports._2      = _2;
	exports.__2     = __2;
	exports.curry_3 = curry_3;
	exports._3      = _3;
	exports.__3     = __3;
	exports.curry_4 = curry_4;
	exports._4      = _4;
	exports.__4     = __4;
	exports.curry_5 = curry_5;
	exports._5      = _5;
	exports.__5     = __5;
	exports.curry_6 = curry_6;
	exports._6      = _6;
	exports.__6     = __6;
	exports.curry_7 = curry_7;
	exports._7      = _7;
	exports.__7     = __7;
	exports.curry_8 = curry_8;
	exports._8      = _8;
	exports.__8     = __8;
	/* No side effect */


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_builtin_exceptions = __webpack_require__(3);

	function caml_array_sub(x, offset, len) {
	  var result = new Array(len);
	  var j = 0;
	  var i = offset;
	  while(j < len) {
	    result[j] = x[i];
	    j = j + 1 | 0;
	    i = i + 1 | 0;
	  };
	  return result;
	}

	function len(_acc, _l) {
	  while(true) {
	    var l = _l;
	    var acc = _acc;
	    if (l) {
	      _l = l[1];
	      _acc = l[0].length + acc | 0;
	      continue ;
	      
	    } else {
	      return acc;
	    }
	  };
	}

	function fill(arr, _i, _l) {
	  while(true) {
	    var l = _l;
	    var i = _i;
	    if (l) {
	      var x = l[0];
	      var l$1 = x.length;
	      var k = i;
	      var j = 0;
	      while(j < l$1) {
	        arr[k] = x[j];
	        k = k + 1 | 0;
	        j = j + 1 | 0;
	      };
	      _l = l[1];
	      _i = k;
	      continue ;
	      
	    } else {
	      return /* () */0;
	    }
	  };
	}

	function caml_array_concat(l) {
	  var v = len(0, l);
	  var result = new Array(v);
	  fill(result, 0, l);
	  return result;
	}

	function caml_array_set(xs, index, newval) {
	  if (index < 0 || index >= xs.length) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "index out of bounds"
	        ];
	  } else {
	    xs[index] = newval;
	    return /* () */0;
	  }
	}

	function caml_array_get(xs, index) {
	  if (index < 0 || index >= xs.length) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "index out of bounds"
	        ];
	  } else {
	    return xs[index];
	  }
	}

	function caml_make_vect(len, init) {
	  var b = new Array(len);
	  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	    b[i] = init;
	  }
	  return b;
	}

	function caml_array_blit(a1, i1, a2, i2, len) {
	  if (i2 <= i1) {
	    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){
	      a2[j + i2 | 0] = a1[j + i1 | 0];
	    }
	    return /* () */0;
	  } else {
	    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){
	      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];
	    }
	    return /* () */0;
	  }
	}

	exports.caml_array_sub    = caml_array_sub;
	exports.caml_array_concat = caml_array_concat;
	exports.caml_make_vect    = caml_make_vect;
	exports.caml_array_blit   = caml_array_blit;
	exports.caml_array_get    = caml_array_get;
	exports.caml_array_set    = caml_array_set;
	/* No side effect */


/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';


	var out_of_memory = /* tuple */[
	  "Out_of_memory",
	  0
	];

	var sys_error = /* tuple */[
	  "Sys_error",
	  -1
	];

	var failure = /* tuple */[
	  "Failure",
	  -2
	];

	var invalid_argument = /* tuple */[
	  "Invalid_argument",
	  -3
	];

	var end_of_file = /* tuple */[
	  "End_of_file",
	  -4
	];

	var division_by_zero = /* tuple */[
	  "Division_by_zero",
	  -5
	];

	var not_found = /* tuple */[
	  "Not_found",
	  -6
	];

	var match_failure = /* tuple */[
	  "Match_failure",
	  -7
	];

	var stack_overflow = /* tuple */[
	  "Stack_overflow",
	  -8
	];

	var sys_blocked_io = /* tuple */[
	  "Sys_blocked_io",
	  -9
	];

	var assert_failure = /* tuple */[
	  "Assert_failure",
	  -10
	];

	var undefined_recursive_module = /* tuple */[
	  "Undefined_recursive_module",
	  -11
	];

	exports.out_of_memory              = out_of_memory;
	exports.sys_error                  = sys_error;
	exports.failure                    = failure;
	exports.invalid_argument           = invalid_argument;
	exports.end_of_file                = end_of_file;
	exports.division_by_zero           = division_by_zero;
	exports.not_found                  = not_found;
	exports.match_failure              = match_failure;
	exports.stack_overflow             = stack_overflow;
	exports.sys_blocked_io             = sys_blocked_io;
	exports.assert_failure             = assert_failure;
	exports.undefined_recursive_module = undefined_recursive_module;
	/* No side effect */


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var List         = __webpack_require__(5);
	var Digest       = __webpack_require__(18);
	var Random       = __webpack_require__(23);
	var Caml_array   = __webpack_require__(2);
	var DocumentRe   = __webpack_require__(30);
	var Pervasives   = __webpack_require__(8);
	var Js_primitive = __webpack_require__(35);

	function querySelector(selector, self) {
	  return Js_primitive.null_to_opt(self.querySelector(selector));
	}

	function findMeOpt(state) {
	  var match = state[/* userId */3];
	  if (match) {
	    var id = match[0];
	    return /* Some */[List.find(function (user) {
	                  return +(id === user[/* id */0]);
	                }, state[/* users */4])];
	  } else {
	    return /* None */0;
	  }
	}

	function nameOfUser(user) {
	  var match = user[/* name */2];
	  if (match) {
	    return match[0];
	  } else {
	    return user[/* email */1];
	  }
	}

	function md5(str) {
	  return Digest.to_hex(Digest.string(str));
	}

	function gravatarUrl($staropt$star, $staropt$star$1, email) {
	  var size = $staropt$star ? $staropt$star[0] : 30;
	  var $$default = $staropt$star$1 ? $staropt$star$1[0] : "identicon";
	  return "http://gravatar.com/avatar/" + (Digest.to_hex(Digest.string(email)) + ("?s=" + (Pervasives.string_of_int(size) + ("&amp;d=" + $$default))));
	}

	var hour = 60.0 * 60.0;

	var day = hour * 24.0;

	var month = day * 30.0;

	var year = month * 12.0;

	function timeAgo(time) {
	  var now = Date.now();
	  var agoMs = now - time;
	  var ago = agoMs / 1000.0;
	  var match = ago < 60.0 ? /* tuple */[
	      60.0,
	      "minute"
	    ] : (
	      ago < hour ? /* tuple */[
	          hour,
	          "hour"
	        ] : (
	          ago < day ? /* tuple */[
	              day,
	              "day"
	            ] : (
	              ago < month ? /* tuple */[
	                  month,
	                  "month"
	                ] : /* tuple */[
	                  year,
	                  "year"
	                ]
	            )
	        )
	    );
	  var count = ago / match[0];
	  var match$1 = +(count === 1.0);
	  return Pervasives.string_of_int(count | 0) + (" " + (match[1] + (
	              match$1 !== 0 ? "" : "s"
	            )));
	}

	function randomRgb() {
	  return /* tuple */[
	          Random.int32(255),
	          Random.int32(255),
	          Random.int32(255)
	        ];
	}

	function randomRgbString() {
	  var match = randomRgb(/* () */0);
	  return "rgb(" + (Pervasives.string_of_int(match[0]) + ("," + (Pervasives.string_of_int(match[1]) + ("," + (Pervasives.string_of_int(match[2]) + ")")))));
	}

	function setPageTitle(title) {
	  var match = DocumentRe.asHtmlDocument(document);
	  if (match) {
	    match[0].title = title;
	    return /* () */0;
	  } else {
	    return /* () */0;
	  }
	}

	function findNextMedia(channel, offset) {
	  var idx = Pervasives.max(0, Pervasives.min(channel[/* media */5][/* order */0] + offset | 0, List.length(channel[/* playlist */8])));
	  return List.nth(channel[/* playlist */8], idx);
	}

	function mediaSrcToTitle(media) {
	  var match = media[/* src */1];
	  if (match) {
	    var split = match[0].split((/\//));
	    return window.decodeURI(Caml_array.caml_array_get(split, split.length - 1 | 0));
	  } else {
	    return "Unknown";
	  }
	}

	function channelMediaProgress(channel, media) {
	  var match = media[/* duration */2];
	  if (match) {
	    return channel[/* mediaProgress */7] / match[0] * 100.0;
	  } else {
	    return 0;
	  }
	}

	var minute = 60.0;

	exports.querySelector        = querySelector;
	exports.findMeOpt            = findMeOpt;
	exports.nameOfUser           = nameOfUser;
	exports.md5                  = md5;
	exports.gravatarUrl          = gravatarUrl;
	exports.minute               = minute;
	exports.hour                 = hour;
	exports.day                  = day;
	exports.month                = month;
	exports.year                 = year;
	exports.timeAgo              = timeAgo;
	exports.randomRgb            = randomRgb;
	exports.randomRgbString      = randomRgbString;
	exports.setPageTitle         = setPageTitle;
	exports.findNextMedia        = findNextMedia;
	exports.mediaSrcToTitle      = mediaSrcToTitle;
	exports.channelMediaProgress = channelMediaProgress;
	/* DocumentRe Not a pure module */


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Curry                   = __webpack_require__(1);
	var Caml_obj                = __webpack_require__(6);
	var Pervasives              = __webpack_require__(8);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function length(l) {
	  var _len = 0;
	  var _param = l;
	  while(true) {
	    var param = _param;
	    var len = _len;
	    if (param) {
	      _param = param[1];
	      _len = len + 1 | 0;
	      continue ;
	      
	    } else {
	      return len;
	    }
	  };
	}

	function hd(param) {
	  if (param) {
	    return param[0];
	  } else {
	    throw [
	          Caml_builtin_exceptions.failure,
	          "hd"
	        ];
	  }
	}

	function tl(param) {
	  if (param) {
	    return param[1];
	  } else {
	    throw [
	          Caml_builtin_exceptions.failure,
	          "tl"
	        ];
	  }
	}

	function nth(l, n) {
	  if (n < 0) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "List.nth"
	        ];
	  } else {
	    var _l = l;
	    var _n = n;
	    while(true) {
	      var n$1 = _n;
	      var l$1 = _l;
	      if (l$1) {
	        if (n$1) {
	          _n = n$1 - 1 | 0;
	          _l = l$1[1];
	          continue ;
	          
	        } else {
	          return l$1[0];
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.failure,
	              "nth"
	            ];
	      }
	    };
	  }
	}

	function rev_append(_l1, _l2) {
	  while(true) {
	    var l2 = _l2;
	    var l1 = _l1;
	    if (l1) {
	      _l2 = /* :: */[
	        l1[0],
	        l2
	      ];
	      _l1 = l1[1];
	      continue ;
	      
	    } else {
	      return l2;
	    }
	  };
	}

	function rev(l) {
	  return rev_append(l, /* [] */0);
	}

	function flatten(param) {
	  if (param) {
	    return Pervasives.$at(param[0], flatten(param[1]));
	  } else {
	    return /* [] */0;
	  }
	}

	function map(f, param) {
	  if (param) {
	    var r = Curry._1(f, param[0]);
	    return /* :: */[
	            r,
	            map(f, param[1])
	          ];
	  } else {
	    return /* [] */0;
	  }
	}

	function mapi(i, f, param) {
	  if (param) {
	    var r = Curry._2(f, i, param[0]);
	    return /* :: */[
	            r,
	            mapi(i + 1 | 0, f, param[1])
	          ];
	  } else {
	    return /* [] */0;
	  }
	}

	function mapi$1(f, l) {
	  return mapi(0, f, l);
	}

	function rev_map(f, l) {
	  var _accu = /* [] */0;
	  var _param = l;
	  while(true) {
	    var param = _param;
	    var accu = _accu;
	    if (param) {
	      _param = param[1];
	      _accu = /* :: */[
	        Curry._1(f, param[0]),
	        accu
	      ];
	      continue ;
	      
	    } else {
	      return accu;
	    }
	  };
	}

	function iter(f, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      Curry._1(f, param[0]);
	      _param = param[1];
	      continue ;
	      
	    } else {
	      return /* () */0;
	    }
	  };
	}

	function iteri(f, l) {
	  var _i = 0;
	  var f$1 = f;
	  var _param = l;
	  while(true) {
	    var param = _param;
	    var i = _i;
	    if (param) {
	      Curry._2(f$1, i, param[0]);
	      _param = param[1];
	      _i = i + 1 | 0;
	      continue ;
	      
	    } else {
	      return /* () */0;
	    }
	  };
	}

	function fold_left(f, _accu, _l) {
	  while(true) {
	    var l = _l;
	    var accu = _accu;
	    if (l) {
	      _l = l[1];
	      _accu = Curry._2(f, accu, l[0]);
	      continue ;
	      
	    } else {
	      return accu;
	    }
	  };
	}

	function fold_right(f, l, accu) {
	  if (l) {
	    return Curry._2(f, l[0], fold_right(f, l[1], accu));
	  } else {
	    return accu;
	  }
	}

	function map2(f, l1, l2) {
	  if (l1) {
	    if (l2) {
	      var r = Curry._2(f, l1[0], l2[0]);
	      return /* :: */[
	              r,
	              map2(f, l1[1], l2[1])
	            ];
	    } else {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.map2"
	          ];
	    }
	  } else if (l2) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "List.map2"
	        ];
	  } else {
	    return /* [] */0;
	  }
	}

	function rev_map2(f, l1, l2) {
	  var _accu = /* [] */0;
	  var _l1 = l1;
	  var _l2 = l2;
	  while(true) {
	    var l2$1 = _l2;
	    var l1$1 = _l1;
	    var accu = _accu;
	    if (l1$1) {
	      if (l2$1) {
	        _l2 = l2$1[1];
	        _l1 = l1$1[1];
	        _accu = /* :: */[
	          Curry._2(f, l1$1[0], l2$1[0]),
	          accu
	        ];
	        continue ;
	        
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "List.rev_map2"
	            ];
	      }
	    } else if (l2$1) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.rev_map2"
	          ];
	    } else {
	      return accu;
	    }
	  };
	}

	function iter2(f, _l1, _l2) {
	  while(true) {
	    var l2 = _l2;
	    var l1 = _l1;
	    if (l1) {
	      if (l2) {
	        Curry._2(f, l1[0], l2[0]);
	        _l2 = l2[1];
	        _l1 = l1[1];
	        continue ;
	        
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "List.iter2"
	            ];
	      }
	    } else if (l2) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.iter2"
	          ];
	    } else {
	      return /* () */0;
	    }
	  };
	}

	function fold_left2(f, _accu, _l1, _l2) {
	  while(true) {
	    var l2 = _l2;
	    var l1 = _l1;
	    var accu = _accu;
	    if (l1) {
	      if (l2) {
	        _l2 = l2[1];
	        _l1 = l1[1];
	        _accu = Curry._3(f, accu, l1[0], l2[0]);
	        continue ;
	        
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "List.fold_left2"
	            ];
	      }
	    } else if (l2) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.fold_left2"
	          ];
	    } else {
	      return accu;
	    }
	  };
	}

	function fold_right2(f, l1, l2, accu) {
	  if (l1) {
	    if (l2) {
	      return Curry._3(f, l1[0], l2[0], fold_right2(f, l1[1], l2[1], accu));
	    } else {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.fold_right2"
	          ];
	    }
	  } else if (l2) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "List.fold_right2"
	        ];
	  } else {
	    return accu;
	  }
	}

	function for_all(p, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      if (Curry._1(p, param[0])) {
	        _param = param[1];
	        continue ;
	        
	      } else {
	        return /* false */0;
	      }
	    } else {
	      return /* true */1;
	    }
	  };
	}

	function exists(p, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      if (Curry._1(p, param[0])) {
	        return /* true */1;
	      } else {
	        _param = param[1];
	        continue ;
	        
	      }
	    } else {
	      return /* false */0;
	    }
	  };
	}

	function for_all2(p, _l1, _l2) {
	  while(true) {
	    var l2 = _l2;
	    var l1 = _l1;
	    if (l1) {
	      if (l2) {
	        if (Curry._2(p, l1[0], l2[0])) {
	          _l2 = l2[1];
	          _l1 = l1[1];
	          continue ;
	          
	        } else {
	          return /* false */0;
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "List.for_all2"
	            ];
	      }
	    } else if (l2) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.for_all2"
	          ];
	    } else {
	      return /* true */1;
	    }
	  };
	}

	function exists2(p, _l1, _l2) {
	  while(true) {
	    var l2 = _l2;
	    var l1 = _l1;
	    if (l1) {
	      if (l2) {
	        if (Curry._2(p, l1[0], l2[0])) {
	          return /* true */1;
	        } else {
	          _l2 = l2[1];
	          _l1 = l1[1];
	          continue ;
	          
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "List.exists2"
	            ];
	      }
	    } else if (l2) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.exists2"
	          ];
	    } else {
	      return /* false */0;
	    }
	  };
	}

	function mem(x, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      if (Caml_obj.caml_compare(param[0], x)) {
	        _param = param[1];
	        continue ;
	        
	      } else {
	        return /* true */1;
	      }
	    } else {
	      return /* false */0;
	    }
	  };
	}

	function memq(x, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      if (param[0] === x) {
	        return /* true */1;
	      } else {
	        _param = param[1];
	        continue ;
	        
	      }
	    } else {
	      return /* false */0;
	    }
	  };
	}

	function assoc(x, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      var match = param[0];
	      if (Caml_obj.caml_compare(match[0], x)) {
	        _param = param[1];
	        continue ;
	        
	      } else {
	        return match[1];
	      }
	    } else {
	      throw Caml_builtin_exceptions.not_found;
	    }
	  };
	}

	function assq(x, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      var match = param[0];
	      if (match[0] === x) {
	        return match[1];
	      } else {
	        _param = param[1];
	        continue ;
	        
	      }
	    } else {
	      throw Caml_builtin_exceptions.not_found;
	    }
	  };
	}

	function mem_assoc(x, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      if (Caml_obj.caml_compare(param[0][0], x)) {
	        _param = param[1];
	        continue ;
	        
	      } else {
	        return /* true */1;
	      }
	    } else {
	      return /* false */0;
	    }
	  };
	}

	function mem_assq(x, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      if (param[0][0] === x) {
	        return /* true */1;
	      } else {
	        _param = param[1];
	        continue ;
	        
	      }
	    } else {
	      return /* false */0;
	    }
	  };
	}

	function remove_assoc(x, param) {
	  if (param) {
	    var l = param[1];
	    var pair = param[0];
	    if (Caml_obj.caml_compare(pair[0], x)) {
	      return /* :: */[
	              pair,
	              remove_assoc(x, l)
	            ];
	    } else {
	      return l;
	    }
	  } else {
	    return /* [] */0;
	  }
	}

	function remove_assq(x, param) {
	  if (param) {
	    var l = param[1];
	    var pair = param[0];
	    if (pair[0] === x) {
	      return l;
	    } else {
	      return /* :: */[
	              pair,
	              remove_assq(x, l)
	            ];
	    }
	  } else {
	    return /* [] */0;
	  }
	}

	function find(p, _param) {
	  while(true) {
	    var param = _param;
	    if (param) {
	      var x = param[0];
	      if (Curry._1(p, x)) {
	        return x;
	      } else {
	        _param = param[1];
	        continue ;
	        
	      }
	    } else {
	      throw Caml_builtin_exceptions.not_found;
	    }
	  };
	}

	function find_all(p) {
	  return function (param) {
	    var _accu = /* [] */0;
	    var _param = param;
	    while(true) {
	      var param$1 = _param;
	      var accu = _accu;
	      if (param$1) {
	        var l = param$1[1];
	        var x = param$1[0];
	        if (Curry._1(p, x)) {
	          _param = l;
	          _accu = /* :: */[
	            x,
	            accu
	          ];
	          continue ;
	          
	        } else {
	          _param = l;
	          continue ;
	          
	        }
	      } else {
	        return rev_append(accu, /* [] */0);
	      }
	    };
	  };
	}

	function partition(p, l) {
	  var _yes = /* [] */0;
	  var _no = /* [] */0;
	  var _param = l;
	  while(true) {
	    var param = _param;
	    var no = _no;
	    var yes = _yes;
	    if (param) {
	      var l$1 = param[1];
	      var x = param[0];
	      if (Curry._1(p, x)) {
	        _param = l$1;
	        _yes = /* :: */[
	          x,
	          yes
	        ];
	        continue ;
	        
	      } else {
	        _param = l$1;
	        _no = /* :: */[
	          x,
	          no
	        ];
	        continue ;
	        
	      }
	    } else {
	      return /* tuple */[
	              rev_append(yes, /* [] */0),
	              rev_append(no, /* [] */0)
	            ];
	    }
	  };
	}

	function split(param) {
	  if (param) {
	    var match = param[0];
	    var match$1 = split(param[1]);
	    return /* tuple */[
	            /* :: */[
	              match[0],
	              match$1[0]
	            ],
	            /* :: */[
	              match[1],
	              match$1[1]
	            ]
	          ];
	  } else {
	    return /* tuple */[
	            /* [] */0,
	            /* [] */0
	          ];
	  }
	}

	function combine(l1, l2) {
	  if (l1) {
	    if (l2) {
	      return /* :: */[
	              /* tuple */[
	                l1[0],
	                l2[0]
	              ],
	              combine(l1[1], l2[1])
	            ];
	    } else {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "List.combine"
	          ];
	    }
	  } else if (l2) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "List.combine"
	        ];
	  } else {
	    return /* [] */0;
	  }
	}

	function merge(cmp, l1, l2) {
	  if (l1) {
	    if (l2) {
	      var h2 = l2[0];
	      var h1 = l1[0];
	      if (Curry._2(cmp, h1, h2) <= 0) {
	        return /* :: */[
	                h1,
	                merge(cmp, l1[1], l2)
	              ];
	      } else {
	        return /* :: */[
	                h2,
	                merge(cmp, l1, l2[1])
	              ];
	      }
	    } else {
	      return l1;
	    }
	  } else {
	    return l2;
	  }
	}

	function chop(_k, _l) {
	  while(true) {
	    var l = _l;
	    var k = _k;
	    if (k) {
	      if (l) {
	        _l = l[1];
	        _k = k - 1 | 0;
	        continue ;
	        
	      } else {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "list.ml",
	                223,
	                11
	              ]
	            ];
	      }
	    } else {
	      return l;
	    }
	  };
	}

	function stable_sort(cmp, l) {
	  var sort = function (n, l) {
	    var exit = 0;
	    if (n !== 2) {
	      if (n !== 3) {
	        exit = 1;
	      } else if (l) {
	        var match = l[1];
	        if (match) {
	          var match$1 = match[1];
	          if (match$1) {
	            var x3 = match$1[0];
	            var x2 = match[0];
	            var x1 = l[0];
	            if (Curry._2(cmp, x1, x2) <= 0) {
	              if (Curry._2(cmp, x2, x3) <= 0) {
	                return /* :: */[
	                        x1,
	                        /* :: */[
	                          x2,
	                          /* :: */[
	                            x3,
	                            /* [] */0
	                          ]
	                        ]
	                      ];
	              } else if (Curry._2(cmp, x1, x3) <= 0) {
	                return /* :: */[
	                        x1,
	                        /* :: */[
	                          x3,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ]
	                      ];
	              } else {
	                return /* :: */[
	                        x3,
	                        /* :: */[
	                          x1,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ]
	                      ];
	              }
	            } else if (Curry._2(cmp, x1, x3) <= 0) {
	              return /* :: */[
	                      x2,
	                      /* :: */[
	                        x1,
	                        /* :: */[
	                          x3,
	                          /* [] */0
	                        ]
	                      ]
	                    ];
	            } else if (Curry._2(cmp, x2, x3) <= 0) {
	              return /* :: */[
	                      x2,
	                      /* :: */[
	                        x3,
	                        /* :: */[
	                          x1,
	                          /* [] */0
	                        ]
	                      ]
	                    ];
	            } else {
	              return /* :: */[
	                      x3,
	                      /* :: */[
	                        x2,
	                        /* :: */[
	                          x1,
	                          /* [] */0
	                        ]
	                      ]
	                    ];
	            }
	          } else {
	            exit = 1;
	          }
	        } else {
	          exit = 1;
	        }
	      } else {
	        exit = 1;
	      }
	    } else if (l) {
	      var match$2 = l[1];
	      if (match$2) {
	        var x2$1 = match$2[0];
	        var x1$1 = l[0];
	        if (Curry._2(cmp, x1$1, x2$1) <= 0) {
	          return /* :: */[
	                  x1$1,
	                  /* :: */[
	                    x2$1,
	                    /* [] */0
	                  ]
	                ];
	        } else {
	          return /* :: */[
	                  x2$1,
	                  /* :: */[
	                    x1$1,
	                    /* [] */0
	                  ]
	                ];
	        }
	      } else {
	        exit = 1;
	      }
	    } else {
	      exit = 1;
	    }
	    if (exit === 1) {
	      var n1 = (n >> 1);
	      var n2 = n - n1 | 0;
	      var l2 = chop(n1, l);
	      var s1 = rev_sort(n1, l);
	      var s2 = rev_sort(n2, l2);
	      var _l1 = s1;
	      var _l2 = s2;
	      var _accu = /* [] */0;
	      while(true) {
	        var accu = _accu;
	        var l2$1 = _l2;
	        var l1 = _l1;
	        if (l1) {
	          if (l2$1) {
	            var h2 = l2$1[0];
	            var h1 = l1[0];
	            if (Curry._2(cmp, h1, h2) > 0) {
	              _accu = /* :: */[
	                h1,
	                accu
	              ];
	              _l1 = l1[1];
	              continue ;
	              
	            } else {
	              _accu = /* :: */[
	                h2,
	                accu
	              ];
	              _l2 = l2$1[1];
	              continue ;
	              
	            }
	          } else {
	            return rev_append(l1, accu);
	          }
	        } else {
	          return rev_append(l2$1, accu);
	        }
	      };
	    }
	    
	  };
	  var rev_sort = function (n, l) {
	    var exit = 0;
	    if (n !== 2) {
	      if (n !== 3) {
	        exit = 1;
	      } else if (l) {
	        var match = l[1];
	        if (match) {
	          var match$1 = match[1];
	          if (match$1) {
	            var x3 = match$1[0];
	            var x2 = match[0];
	            var x1 = l[0];
	            if (Curry._2(cmp, x1, x2) > 0) {
	              if (Curry._2(cmp, x2, x3) > 0) {
	                return /* :: */[
	                        x1,
	                        /* :: */[
	                          x2,
	                          /* :: */[
	                            x3,
	                            /* [] */0
	                          ]
	                        ]
	                      ];
	              } else if (Curry._2(cmp, x1, x3) > 0) {
	                return /* :: */[
	                        x1,
	                        /* :: */[
	                          x3,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ]
	                      ];
	              } else {
	                return /* :: */[
	                        x3,
	                        /* :: */[
	                          x1,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ]
	                      ];
	              }
	            } else if (Curry._2(cmp, x1, x3) > 0) {
	              return /* :: */[
	                      x2,
	                      /* :: */[
	                        x1,
	                        /* :: */[
	                          x3,
	                          /* [] */0
	                        ]
	                      ]
	                    ];
	            } else if (Curry._2(cmp, x2, x3) > 0) {
	              return /* :: */[
	                      x2,
	                      /* :: */[
	                        x3,
	                        /* :: */[
	                          x1,
	                          /* [] */0
	                        ]
	                      ]
	                    ];
	            } else {
	              return /* :: */[
	                      x3,
	                      /* :: */[
	                        x2,
	                        /* :: */[
	                          x1,
	                          /* [] */0
	                        ]
	                      ]
	                    ];
	            }
	          } else {
	            exit = 1;
	          }
	        } else {
	          exit = 1;
	        }
	      } else {
	        exit = 1;
	      }
	    } else if (l) {
	      var match$2 = l[1];
	      if (match$2) {
	        var x2$1 = match$2[0];
	        var x1$1 = l[0];
	        if (Curry._2(cmp, x1$1, x2$1) > 0) {
	          return /* :: */[
	                  x1$1,
	                  /* :: */[
	                    x2$1,
	                    /* [] */0
	                  ]
	                ];
	        } else {
	          return /* :: */[
	                  x2$1,
	                  /* :: */[
	                    x1$1,
	                    /* [] */0
	                  ]
	                ];
	        }
	      } else {
	        exit = 1;
	      }
	    } else {
	      exit = 1;
	    }
	    if (exit === 1) {
	      var n1 = (n >> 1);
	      var n2 = n - n1 | 0;
	      var l2 = chop(n1, l);
	      var s1 = sort(n1, l);
	      var s2 = sort(n2, l2);
	      var _l1 = s1;
	      var _l2 = s2;
	      var _accu = /* [] */0;
	      while(true) {
	        var accu = _accu;
	        var l2$1 = _l2;
	        var l1 = _l1;
	        if (l1) {
	          if (l2$1) {
	            var h2 = l2$1[0];
	            var h1 = l1[0];
	            if (Curry._2(cmp, h1, h2) <= 0) {
	              _accu = /* :: */[
	                h1,
	                accu
	              ];
	              _l1 = l1[1];
	              continue ;
	              
	            } else {
	              _accu = /* :: */[
	                h2,
	                accu
	              ];
	              _l2 = l2$1[1];
	              continue ;
	              
	            }
	          } else {
	            return rev_append(l1, accu);
	          }
	        } else {
	          return rev_append(l2$1, accu);
	        }
	      };
	    }
	    
	  };
	  var len = length(l);
	  if (len < 2) {
	    return l;
	  } else {
	    return sort(len, l);
	  }
	}

	function sort_uniq(cmp, l) {
	  var sort = function (n, l) {
	    var exit = 0;
	    if (n !== 2) {
	      if (n !== 3) {
	        exit = 1;
	      } else if (l) {
	        var match = l[1];
	        if (match) {
	          var match$1 = match[1];
	          if (match$1) {
	            var x3 = match$1[0];
	            var x2 = match[0];
	            var x1 = l[0];
	            var c = Curry._2(cmp, x1, x2);
	            if (c) {
	              if (c < 0) {
	                var c$1 = Curry._2(cmp, x2, x3);
	                if (c$1) {
	                  if (c$1 < 0) {
	                    return /* :: */[
	                            x1,
	                            /* :: */[
	                              x2,
	                              /* :: */[
	                                x3,
	                                /* [] */0
	                              ]
	                            ]
	                          ];
	                  } else {
	                    var c$2 = Curry._2(cmp, x1, x3);
	                    if (c$2) {
	                      if (c$2 < 0) {
	                        return /* :: */[
	                                x1,
	                                /* :: */[
	                                  x3,
	                                  /* :: */[
	                                    x2,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      } else {
	                        return /* :: */[
	                                x3,
	                                /* :: */[
	                                  x1,
	                                  /* :: */[
	                                    x2,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      }
	                    } else {
	                      return /* :: */[
	                              x1,
	                              /* :: */[
	                                x2,
	                                /* [] */0
	                              ]
	                            ];
	                    }
	                  }
	                } else {
	                  return /* :: */[
	                          x1,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ];
	                }
	              } else {
	                var c$3 = Curry._2(cmp, x1, x3);
	                if (c$3) {
	                  if (c$3 < 0) {
	                    return /* :: */[
	                            x2,
	                            /* :: */[
	                              x1,
	                              /* :: */[
	                                x3,
	                                /* [] */0
	                              ]
	                            ]
	                          ];
	                  } else {
	                    var c$4 = Curry._2(cmp, x2, x3);
	                    if (c$4) {
	                      if (c$4 < 0) {
	                        return /* :: */[
	                                x2,
	                                /* :: */[
	                                  x3,
	                                  /* :: */[
	                                    x1,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      } else {
	                        return /* :: */[
	                                x3,
	                                /* :: */[
	                                  x2,
	                                  /* :: */[
	                                    x1,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      }
	                    } else {
	                      return /* :: */[
	                              x2,
	                              /* :: */[
	                                x1,
	                                /* [] */0
	                              ]
	                            ];
	                    }
	                  }
	                } else {
	                  return /* :: */[
	                          x2,
	                          /* :: */[
	                            x1,
	                            /* [] */0
	                          ]
	                        ];
	                }
	              }
	            } else {
	              var c$5 = Curry._2(cmp, x2, x3);
	              if (c$5) {
	                if (c$5 < 0) {
	                  return /* :: */[
	                          x2,
	                          /* :: */[
	                            x3,
	                            /* [] */0
	                          ]
	                        ];
	                } else {
	                  return /* :: */[
	                          x3,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ];
	                }
	              } else {
	                return /* :: */[
	                        x2,
	                        /* [] */0
	                      ];
	              }
	            }
	          } else {
	            exit = 1;
	          }
	        } else {
	          exit = 1;
	        }
	      } else {
	        exit = 1;
	      }
	    } else if (l) {
	      var match$2 = l[1];
	      if (match$2) {
	        var x2$1 = match$2[0];
	        var x1$1 = l[0];
	        var c$6 = Curry._2(cmp, x1$1, x2$1);
	        if (c$6) {
	          if (c$6 < 0) {
	            return /* :: */[
	                    x1$1,
	                    /* :: */[
	                      x2$1,
	                      /* [] */0
	                    ]
	                  ];
	          } else {
	            return /* :: */[
	                    x2$1,
	                    /* :: */[
	                      x1$1,
	                      /* [] */0
	                    ]
	                  ];
	          }
	        } else {
	          return /* :: */[
	                  x1$1,
	                  /* [] */0
	                ];
	        }
	      } else {
	        exit = 1;
	      }
	    } else {
	      exit = 1;
	    }
	    if (exit === 1) {
	      var n1 = (n >> 1);
	      var n2 = n - n1 | 0;
	      var l2 = chop(n1, l);
	      var s1 = rev_sort(n1, l);
	      var s2 = rev_sort(n2, l2);
	      var _l1 = s1;
	      var _l2 = s2;
	      var _accu = /* [] */0;
	      while(true) {
	        var accu = _accu;
	        var l2$1 = _l2;
	        var l1 = _l1;
	        if (l1) {
	          if (l2$1) {
	            var t2 = l2$1[1];
	            var h2 = l2$1[0];
	            var t1 = l1[1];
	            var h1 = l1[0];
	            var c$7 = Curry._2(cmp, h1, h2);
	            if (c$7) {
	              if (c$7 > 0) {
	                _accu = /* :: */[
	                  h1,
	                  accu
	                ];
	                _l1 = t1;
	                continue ;
	                
	              } else {
	                _accu = /* :: */[
	                  h2,
	                  accu
	                ];
	                _l2 = t2;
	                continue ;
	                
	              }
	            } else {
	              _accu = /* :: */[
	                h1,
	                accu
	              ];
	              _l2 = t2;
	              _l1 = t1;
	              continue ;
	              
	            }
	          } else {
	            return rev_append(l1, accu);
	          }
	        } else {
	          return rev_append(l2$1, accu);
	        }
	      };
	    }
	    
	  };
	  var rev_sort = function (n, l) {
	    var exit = 0;
	    if (n !== 2) {
	      if (n !== 3) {
	        exit = 1;
	      } else if (l) {
	        var match = l[1];
	        if (match) {
	          var match$1 = match[1];
	          if (match$1) {
	            var x3 = match$1[0];
	            var x2 = match[0];
	            var x1 = l[0];
	            var c = Curry._2(cmp, x1, x2);
	            if (c) {
	              if (c > 0) {
	                var c$1 = Curry._2(cmp, x2, x3);
	                if (c$1) {
	                  if (c$1 > 0) {
	                    return /* :: */[
	                            x1,
	                            /* :: */[
	                              x2,
	                              /* :: */[
	                                x3,
	                                /* [] */0
	                              ]
	                            ]
	                          ];
	                  } else {
	                    var c$2 = Curry._2(cmp, x1, x3);
	                    if (c$2) {
	                      if (c$2 > 0) {
	                        return /* :: */[
	                                x1,
	                                /* :: */[
	                                  x3,
	                                  /* :: */[
	                                    x2,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      } else {
	                        return /* :: */[
	                                x3,
	                                /* :: */[
	                                  x1,
	                                  /* :: */[
	                                    x2,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      }
	                    } else {
	                      return /* :: */[
	                              x1,
	                              /* :: */[
	                                x2,
	                                /* [] */0
	                              ]
	                            ];
	                    }
	                  }
	                } else {
	                  return /* :: */[
	                          x1,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ];
	                }
	              } else {
	                var c$3 = Curry._2(cmp, x1, x3);
	                if (c$3) {
	                  if (c$3 > 0) {
	                    return /* :: */[
	                            x2,
	                            /* :: */[
	                              x1,
	                              /* :: */[
	                                x3,
	                                /* [] */0
	                              ]
	                            ]
	                          ];
	                  } else {
	                    var c$4 = Curry._2(cmp, x2, x3);
	                    if (c$4) {
	                      if (c$4 > 0) {
	                        return /* :: */[
	                                x2,
	                                /* :: */[
	                                  x3,
	                                  /* :: */[
	                                    x1,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      } else {
	                        return /* :: */[
	                                x3,
	                                /* :: */[
	                                  x2,
	                                  /* :: */[
	                                    x1,
	                                    /* [] */0
	                                  ]
	                                ]
	                              ];
	                      }
	                    } else {
	                      return /* :: */[
	                              x2,
	                              /* :: */[
	                                x1,
	                                /* [] */0
	                              ]
	                            ];
	                    }
	                  }
	                } else {
	                  return /* :: */[
	                          x2,
	                          /* :: */[
	                            x1,
	                            /* [] */0
	                          ]
	                        ];
	                }
	              }
	            } else {
	              var c$5 = Curry._2(cmp, x2, x3);
	              if (c$5) {
	                if (c$5 > 0) {
	                  return /* :: */[
	                          x2,
	                          /* :: */[
	                            x3,
	                            /* [] */0
	                          ]
	                        ];
	                } else {
	                  return /* :: */[
	                          x3,
	                          /* :: */[
	                            x2,
	                            /* [] */0
	                          ]
	                        ];
	                }
	              } else {
	                return /* :: */[
	                        x2,
	                        /* [] */0
	                      ];
	              }
	            }
	          } else {
	            exit = 1;
	          }
	        } else {
	          exit = 1;
	        }
	      } else {
	        exit = 1;
	      }
	    } else if (l) {
	      var match$2 = l[1];
	      if (match$2) {
	        var x2$1 = match$2[0];
	        var x1$1 = l[0];
	        var c$6 = Curry._2(cmp, x1$1, x2$1);
	        if (c$6) {
	          if (c$6 > 0) {
	            return /* :: */[
	                    x1$1,
	                    /* :: */[
	                      x2$1,
	                      /* [] */0
	                    ]
	                  ];
	          } else {
	            return /* :: */[
	                    x2$1,
	                    /* :: */[
	                      x1$1,
	                      /* [] */0
	                    ]
	                  ];
	          }
	        } else {
	          return /* :: */[
	                  x1$1,
	                  /* [] */0
	                ];
	        }
	      } else {
	        exit = 1;
	      }
	    } else {
	      exit = 1;
	    }
	    if (exit === 1) {
	      var n1 = (n >> 1);
	      var n2 = n - n1 | 0;
	      var l2 = chop(n1, l);
	      var s1 = sort(n1, l);
	      var s2 = sort(n2, l2);
	      var _l1 = s1;
	      var _l2 = s2;
	      var _accu = /* [] */0;
	      while(true) {
	        var accu = _accu;
	        var l2$1 = _l2;
	        var l1 = _l1;
	        if (l1) {
	          if (l2$1) {
	            var t2 = l2$1[1];
	            var h2 = l2$1[0];
	            var t1 = l1[1];
	            var h1 = l1[0];
	            var c$7 = Curry._2(cmp, h1, h2);
	            if (c$7) {
	              if (c$7 < 0) {
	                _accu = /* :: */[
	                  h1,
	                  accu
	                ];
	                _l1 = t1;
	                continue ;
	                
	              } else {
	                _accu = /* :: */[
	                  h2,
	                  accu
	                ];
	                _l2 = t2;
	                continue ;
	                
	              }
	            } else {
	              _accu = /* :: */[
	                h1,
	                accu
	              ];
	              _l2 = t2;
	              _l1 = t1;
	              continue ;
	              
	            }
	          } else {
	            return rev_append(l1, accu);
	          }
	        } else {
	          return rev_append(l2$1, accu);
	        }
	      };
	    }
	    
	  };
	  var len = length(l);
	  if (len < 2) {
	    return l;
	  } else {
	    return sort(len, l);
	  }
	}

	var append = Pervasives.$at;

	var concat = flatten;

	var filter = find_all;

	var sort = stable_sort;

	var fast_sort = stable_sort;

	exports.length       = length;
	exports.hd           = hd;
	exports.tl           = tl;
	exports.nth          = nth;
	exports.rev          = rev;
	exports.append       = append;
	exports.rev_append   = rev_append;
	exports.concat       = concat;
	exports.flatten      = flatten;
	exports.iter         = iter;
	exports.iteri        = iteri;
	exports.map          = map;
	exports.mapi         = mapi$1;
	exports.rev_map      = rev_map;
	exports.fold_left    = fold_left;
	exports.fold_right   = fold_right;
	exports.iter2        = iter2;
	exports.map2         = map2;
	exports.rev_map2     = rev_map2;
	exports.fold_left2   = fold_left2;
	exports.fold_right2  = fold_right2;
	exports.for_all      = for_all;
	exports.exists       = exists;
	exports.for_all2     = for_all2;
	exports.exists2      = exists2;
	exports.mem          = mem;
	exports.memq         = memq;
	exports.find         = find;
	exports.filter       = filter;
	exports.find_all     = find_all;
	exports.partition    = partition;
	exports.assoc        = assoc;
	exports.assq         = assq;
	exports.mem_assoc    = mem_assoc;
	exports.mem_assq     = mem_assq;
	exports.remove_assoc = remove_assoc;
	exports.remove_assq  = remove_assq;
	exports.split        = split;
	exports.combine      = combine;
	exports.sort         = sort;
	exports.stable_sort  = stable_sort;
	exports.fast_sort    = fast_sort;
	exports.sort_uniq    = sort_uniq;
	exports.merge        = merge;
	/* No side effect */


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Block                   = __webpack_require__(7);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function caml_obj_dup(x) {
	  var len = x.length;
	  var v = new Array(len);
	  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	    v[i] = x[i];
	  }
	  v.tag = x.tag | 0;
	  return v;
	}

	function caml_obj_truncate(x, new_size) {
	  var len = x.length;
	  if (new_size <= 0 || new_size > len) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Obj.truncate"
	        ];
	  } else if (len !== new_size) {
	    for(var i = new_size ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	      x[i] = 0;
	    }
	    x.length = new_size;
	    return /* () */0;
	  } else {
	    return 0;
	  }
	}

	function caml_lazy_make_forward(x) {
	  return Block.__(250, [x]);
	}

	function caml_update_dummy(x, y) {
	  var len = y.length;
	  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	    x[i] = y[i];
	  }
	  var y_tag = y.tag | 0;
	  if (y_tag !== 0) {
	    x.tag = y_tag;
	    return /* () */0;
	  } else {
	    return 0;
	  }
	}

	function caml_int_compare(x, y) {
	  if (x < y) {
	    return -1;
	  } else if (x === y) {
	    return 0;
	  } else {
	    return 1;
	  }
	}

	function caml_compare(_a, _b) {
	  while(true) {
	    var b = _b;
	    var a = _a;
	    var a_type = typeof a;
	    var b_type = typeof b;
	    if (a_type === "string") {
	      var x = a;
	      var y = b;
	      if (x < y) {
	        return -1;
	      } else if (x === y) {
	        return 0;
	      } else {
	        return 1;
	      }
	    } else {
	      var is_a_number = +(a_type === "number");
	      var is_b_number = +(b_type === "number");
	      if (is_a_number !== 0) {
	        if (is_b_number !== 0) {
	          return caml_int_compare(a, b);
	        } else {
	          return -1;
	        }
	      } else if (is_b_number !== 0) {
	        return 1;
	      } else if (a_type === "boolean" || a_type === "null" || a_type === "undefined") {
	        var x$1 = a;
	        var y$1 = b;
	        if (x$1 === y$1) {
	          return 0;
	        } else if (x$1 < y$1) {
	          return -1;
	        } else {
	          return 1;
	        }
	      } else if (a_type === "function" || b_type === "function") {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "compare: functional value"
	            ];
	      } else {
	        var tag_a = a.tag | 0;
	        var tag_b = b.tag | 0;
	        if (tag_a === 250) {
	          _a = a[0];
	          continue ;
	          
	        } else if (tag_b === 250) {
	          _b = b[0];
	          continue ;
	          
	        } else if (tag_a === 248) {
	          return caml_int_compare(a[1], b[1]);
	        } else if (tag_a === 251) {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "equal: abstract value"
	              ];
	        } else if (tag_a !== tag_b) {
	          if (tag_a < tag_b) {
	            return -1;
	          } else {
	            return 1;
	          }
	        } else {
	          var len_a = a.length;
	          var len_b = b.length;
	          if (len_a === len_b) {
	            var a$1 = a;
	            var b$1 = b;
	            var _i = 0;
	            var same_length = len_a;
	            while(true) {
	              var i = _i;
	              if (i === same_length) {
	                return 0;
	              } else {
	                var res = caml_compare(a$1[i], b$1[i]);
	                if (res !== 0) {
	                  return res;
	                } else {
	                  _i = i + 1 | 0;
	                  continue ;
	                  
	                }
	              }
	            };
	          } else if (len_a < len_b) {
	            var a$2 = a;
	            var b$2 = b;
	            var _i$1 = 0;
	            var short_length = len_a;
	            while(true) {
	              var i$1 = _i$1;
	              if (i$1 === short_length) {
	                return -1;
	              } else {
	                var res$1 = caml_compare(a$2[i$1], b$2[i$1]);
	                if (res$1 !== 0) {
	                  return res$1;
	                } else {
	                  _i$1 = i$1 + 1 | 0;
	                  continue ;
	                  
	                }
	              }
	            };
	          } else {
	            var a$3 = a;
	            var b$3 = b;
	            var _i$2 = 0;
	            var short_length$1 = len_b;
	            while(true) {
	              var i$2 = _i$2;
	              if (i$2 === short_length$1) {
	                return 1;
	              } else {
	                var res$2 = caml_compare(a$3[i$2], b$3[i$2]);
	                if (res$2 !== 0) {
	                  return res$2;
	                } else {
	                  _i$2 = i$2 + 1 | 0;
	                  continue ;
	                  
	                }
	              }
	            };
	          }
	        }
	      }
	    }
	  };
	}

	function caml_equal(_a, _b) {
	  while(true) {
	    var b = _b;
	    var a = _a;
	    if (a === b) {
	      return /* true */1;
	    } else {
	      var a_type = typeof a;
	      if (a_type === "string" || a_type === "number" || a_type === "boolean" || a_type === "undefined" || a_type === "null") {
	        return /* false */0;
	      } else {
	        var b_type = typeof b;
	        if (a_type === "function" || b_type === "function") {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "equal: functional value"
	              ];
	        } else if (b_type === "number" || b_type === "null" || b_type === "undefined") {
	          return /* false */0;
	        } else {
	          var tag_a = a.tag | 0;
	          var tag_b = b.tag | 0;
	          if (tag_a === 250) {
	            _a = a[0];
	            continue ;
	            
	          } else if (tag_b === 250) {
	            _b = b[0];
	            continue ;
	            
	          } else if (tag_a === 248) {
	            return +(a[1] === b[1]);
	          } else if (tag_a === 251) {
	            throw [
	                  Caml_builtin_exceptions.invalid_argument,
	                  "equal: abstract value"
	                ];
	          } else if (tag_a !== tag_b) {
	            return /* false */0;
	          } else {
	            var len_a = a.length;
	            var len_b = b.length;
	            if (len_a === len_b) {
	              var a$1 = a;
	              var b$1 = b;
	              var _i = 0;
	              var same_length = len_a;
	              while(true) {
	                var i = _i;
	                if (i === same_length) {
	                  return /* true */1;
	                } else if (caml_equal(a$1[i], b$1[i])) {
	                  _i = i + 1 | 0;
	                  continue ;
	                  
	                } else {
	                  return /* false */0;
	                }
	              };
	            } else {
	              return /* false */0;
	            }
	          }
	        }
	      }
	    }
	  };
	}

	function caml_notequal(a, b) {
	  return 1 - caml_equal(a, b);
	}

	function caml_greaterequal(a, b) {
	  return +(caml_compare(a, b) >= 0);
	}

	function caml_greaterthan(a, b) {
	  return +(caml_compare(a, b) > 0);
	}

	function caml_lessequal(a, b) {
	  return +(caml_compare(a, b) <= 0);
	}

	function caml_lessthan(a, b) {
	  return +(caml_compare(a, b) < 0);
	}

	var caml_int32_compare = caml_int_compare;

	var caml_nativeint_compare = caml_int_compare;

	exports.caml_obj_dup           = caml_obj_dup;
	exports.caml_obj_truncate      = caml_obj_truncate;
	exports.caml_lazy_make_forward = caml_lazy_make_forward;
	exports.caml_update_dummy      = caml_update_dummy;
	exports.caml_int_compare       = caml_int_compare;
	exports.caml_int32_compare     = caml_int32_compare;
	exports.caml_nativeint_compare = caml_nativeint_compare;
	exports.caml_compare           = caml_compare;
	exports.caml_equal             = caml_equal;
	exports.caml_notequal          = caml_notequal;
	exports.caml_greaterequal      = caml_greaterequal;
	exports.caml_greaterthan       = caml_greaterthan;
	exports.caml_lessthan          = caml_lessthan;
	exports.caml_lessequal         = caml_lessequal;
	/* No side effect */


/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';


	function __(tag, block) {
	  block.tag = tag;
	  return block;
	}

	exports.__ = __;
	/* No side effect */


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Curry                    = __webpack_require__(1);
	var Caml_io                  = __webpack_require__(9);
	var Caml_obj                 = __webpack_require__(6);
	var Caml_format              = __webpack_require__(11);
	var Caml_string              = __webpack_require__(15);
	var Caml_exceptions          = __webpack_require__(16);
	var Caml_builtin_exceptions  = __webpack_require__(3);
	var CamlinternalFormatBasics = __webpack_require__(17);

	function failwith(s) {
	  throw [
	        Caml_builtin_exceptions.failure,
	        s
	      ];
	}

	function invalid_arg(s) {
	  throw [
	        Caml_builtin_exceptions.invalid_argument,
	        s
	      ];
	}

	var Exit = Caml_exceptions.create("Pervasives.Exit");

	function min(x, y) {
	  if (Caml_obj.caml_lessequal(x, y)) {
	    return x;
	  } else {
	    return y;
	  }
	}

	function max(x, y) {
	  if (Caml_obj.caml_greaterequal(x, y)) {
	    return x;
	  } else {
	    return y;
	  }
	}

	function abs(x) {
	  if (x >= 0) {
	    return x;
	  } else {
	    return -x | 0;
	  }
	}

	function lnot(x) {
	  return x ^ -1;
	}

	var min_int = -2147483648;

	function $caret(a, b) {
	  return a + b;
	}

	function char_of_int(n) {
	  if (n < 0 || n > 255) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "char_of_int"
	        ];
	  } else {
	    return n;
	  }
	}

	function string_of_bool(b) {
	  if (b) {
	    return "true";
	  } else {
	    return "false";
	  }
	}

	function bool_of_string(param) {
	  switch (param) {
	    case "false" : 
	        return /* false */0;
	    case "true" : 
	        return /* true */1;
	    default:
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "bool_of_string"
	          ];
	  }
	}

	function string_of_int(param) {
	  return "" + param;
	}

	function valid_float_lexem(s) {
	  var l = s.length;
	  var _i = 0;
	  while(true) {
	    var i = _i;
	    if (i >= l) {
	      return $caret(s, ".");
	    } else {
	      var match = Caml_string.get(s, i);
	      if (match >= 48) {
	        if (match >= 58) {
	          return s;
	        } else {
	          _i = i + 1 | 0;
	          continue ;
	          
	        }
	      } else if (match !== 45) {
	        return s;
	      } else {
	        _i = i + 1 | 0;
	        continue ;
	        
	      }
	    }
	  };
	}

	function string_of_float(f) {
	  return valid_float_lexem(Caml_format.caml_format_float("%.12g", f));
	}

	function $at(l1, l2) {
	  if (l1) {
	    return /* :: */[
	            l1[0],
	            $at(l1[1], l2)
	          ];
	  } else {
	    return l2;
	  }
	}

	var stdin = Caml_io.stdin;

	var stdout = Caml_io.stdout;

	var stderr = Caml_io.stderr;

	function open_out_gen(_, _$1, _$2) {
	  return Caml_io.caml_ml_open_descriptor_out(function () {
	                throw "caml_sys_open not implemented by bucklescript yet\n";
	              }());
	}

	function open_out(name) {
	  return open_out_gen(/* :: */[
	              /* Open_wronly */1,
	              /* :: */[
	                /* Open_creat */3,
	                /* :: */[
	                  /* Open_trunc */4,
	                  /* :: */[
	                    /* Open_text */7,
	                    /* [] */0
	                  ]
	                ]
	              ]
	            ], 438, name);
	}

	function open_out_bin(name) {
	  return open_out_gen(/* :: */[
	              /* Open_wronly */1,
	              /* :: */[
	                /* Open_creat */3,
	                /* :: */[
	                  /* Open_trunc */4,
	                  /* :: */[
	                    /* Open_binary */6,
	                    /* [] */0
	                  ]
	                ]
	              ]
	            ], 438, name);
	}

	function flush_all() {
	  var _param = Caml_io.caml_ml_out_channels_list(/* () */0);
	  while(true) {
	    var param = _param;
	    if (param) {
	      try {
	        Caml_io.caml_ml_flush(param[0]);
	      }
	      catch (exn){
	        
	      }
	      _param = param[1];
	      continue ;
	      
	    } else {
	      return /* () */0;
	    }
	  };
	}

	function output_bytes(oc, s) {
	  return Caml_io.caml_ml_output(oc, s, 0, s.length);
	}

	function output_string(oc, s) {
	  return Caml_io.caml_ml_output(oc, s, 0, s.length);
	}

	function output(oc, s, ofs, len) {
	  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "output"
	        ];
	  } else {
	    return Caml_io.caml_ml_output(oc, s, ofs, len);
	  }
	}

	function output_substring(oc, s, ofs, len) {
	  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "output_substring"
	        ];
	  } else {
	    return Caml_io.caml_ml_output(oc, s, ofs, len);
	  }
	}

	function output_value(_, _$1) {
	  return function () {
	            throw "caml_output_value not implemented by bucklescript yet\n";
	          }();
	}

	function close_out(oc) {
	  Caml_io.caml_ml_flush(oc);
	  return function () {
	            throw "caml_ml_close_channel not implemented by bucklescript yet\n";
	          }();
	}

	function close_out_noerr(oc) {
	  try {
	    Caml_io.caml_ml_flush(oc);
	  }
	  catch (exn){
	    
	  }
	  try {
	    return function () {
	              throw "caml_ml_close_channel not implemented by bucklescript yet\n";
	            }();
	  }
	  catch (exn$1){
	    return /* () */0;
	  }
	}

	function open_in_gen(_, _$1, _$2) {
	  return Caml_io.caml_ml_open_descriptor_in(function () {
	                throw "caml_sys_open not implemented by bucklescript yet\n";
	              }());
	}

	function open_in(name) {
	  return open_in_gen(/* :: */[
	              /* Open_rdonly */0,
	              /* :: */[
	                /* Open_text */7,
	                /* [] */0
	              ]
	            ], 0, name);
	}

	function open_in_bin(name) {
	  return open_in_gen(/* :: */[
	              /* Open_rdonly */0,
	              /* :: */[
	                /* Open_binary */6,
	                /* [] */0
	              ]
	            ], 0, name);
	}

	function input(_, s, ofs, len) {
	  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "input"
	        ];
	  } else {
	    return function () {
	              throw "caml_ml_input not implemented by bucklescript yet\n";
	            }();
	  }
	}

	function unsafe_really_input(_, _$1, _ofs, _len) {
	  while(true) {
	    var len = _len;
	    var ofs = _ofs;
	    if (len <= 0) {
	      return /* () */0;
	    } else {
	      var r = function () {
	          throw "caml_ml_input not implemented by bucklescript yet\n";
	        }();
	      if (r) {
	        _len = len - r | 0;
	        _ofs = ofs + r | 0;
	        continue ;
	        
	      } else {
	        throw Caml_builtin_exceptions.end_of_file;
	      }
	    }
	  };
	}

	function really_input(ic, s, ofs, len) {
	  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "really_input"
	        ];
	  } else {
	    return unsafe_really_input(ic, s, ofs, len);
	  }
	}

	function really_input_string(ic, len) {
	  var s = Caml_string.caml_create_string(len);
	  really_input(ic, s, 0, len);
	  return Caml_string.bytes_to_string(s);
	}

	function input_line(chan) {
	  var build_result = function (buf, _pos, _param) {
	    while(true) {
	      var param = _param;
	      var pos = _pos;
	      if (param) {
	        var hd = param[0];
	        var len = hd.length;
	        Caml_string.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);
	        _param = param[1];
	        _pos = pos - len | 0;
	        continue ;
	        
	      } else {
	        return buf;
	      }
	    };
	  };
	  var scan = function (_accu, _len) {
	    while(true) {
	      var len = _len;
	      var accu = _accu;
	      var n = function () {
	          throw "caml_ml_input_scan_line not implemented by bucklescript yet\n";
	        }();
	      if (n) {
	        if (n > 0) {
	          var res = Caml_string.caml_create_string(n - 1 | 0);
	          (function () {
	                throw "caml_ml_input not implemented by bucklescript yet\n";
	              }());
	          Caml_io.caml_ml_input_char(chan);
	          if (accu) {
	            var len$1 = (len + n | 0) - 1 | 0;
	            return build_result(Caml_string.caml_create_string(len$1), len$1, /* :: */[
	                        res,
	                        accu
	                      ]);
	          } else {
	            return res;
	          }
	        } else {
	          var beg = Caml_string.caml_create_string(-n | 0);
	          (function () {
	                throw "caml_ml_input not implemented by bucklescript yet\n";
	              }());
	          _len = len - n | 0;
	          _accu = /* :: */[
	            beg,
	            accu
	          ];
	          continue ;
	          
	        }
	      } else if (accu) {
	        return build_result(Caml_string.caml_create_string(len), len, accu);
	      } else {
	        throw Caml_builtin_exceptions.end_of_file;
	      }
	    };
	  };
	  return Caml_string.bytes_to_string(scan(/* [] */0, 0));
	}

	function close_in_noerr() {
	  try {
	    return function () {
	              throw "caml_ml_close_channel not implemented by bucklescript yet\n";
	            }();
	  }
	  catch (exn){
	    return /* () */0;
	  }
	}

	function print_char(c) {
	  return Caml_io.caml_ml_output_char(stdout, c);
	}

	function print_string(s) {
	  return output_string(stdout, s);
	}

	function print_bytes(s) {
	  return output_bytes(stdout, s);
	}

	function print_int(i) {
	  return output_string(stdout, "" + i);
	}

	function print_float(f) {
	  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float("%.12g", f)));
	}

	function print_endline(param) {
	  console.log(param);
	  return 0;
	}

	function print_newline() {
	  Caml_io.caml_ml_output_char(stdout, /* "\n" */10);
	  return Caml_io.caml_ml_flush(stdout);
	}

	function prerr_char(c) {
	  return Caml_io.caml_ml_output_char(stderr, c);
	}

	function prerr_string(s) {
	  return output_string(stderr, s);
	}

	function prerr_bytes(s) {
	  return output_bytes(stderr, s);
	}

	function prerr_int(i) {
	  return output_string(stderr, "" + i);
	}

	function prerr_float(f) {
	  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float("%.12g", f)));
	}

	function prerr_endline(param) {
	  console.error(param);
	  return 0;
	}

	function prerr_newline() {
	  Caml_io.caml_ml_output_char(stderr, /* "\n" */10);
	  return Caml_io.caml_ml_flush(stderr);
	}

	function read_line() {
	  Caml_io.caml_ml_flush(stdout);
	  return input_line(stdin);
	}

	function read_int() {
	  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));
	}

	function read_float() {
	  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));
	}

	function string_of_format(param) {
	  return param[1];
	}

	function $caret$caret(param, param$1) {
	  return /* Format */[
	          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),
	          $caret(param[1], $caret("%,", param$1[1]))
	        ];
	}

	var exit_function = [flush_all];

	function at_exit(f) {
	  var g = exit_function[0];
	  exit_function[0] = function () {
	    Curry._1(f, /* () */0);
	    return Curry._1(g, /* () */0);
	  };
	  return /* () */0;
	}

	function do_at_exit() {
	  return Curry._1(exit_function[0], /* () */0);
	}

	function exit() {
	  do_at_exit(/* () */0);
	  return function () {
	            throw "caml_sys_exit not implemented by bucklescript yet\n";
	          }();
	}

	var max_int = 2147483647;

	var infinity = Infinity;

	var neg_infinity = -Infinity;

	var nan = NaN;

	var max_float = Number.MAX_VALUE;

	var min_float = Number.MIN_VALUE;

	var epsilon_float = 2.220446049250313e-16;

	var flush = Caml_io.caml_ml_flush;

	var output_char = Caml_io.caml_ml_output_char;

	var output_byte = Caml_io.caml_ml_output_char;

	function output_binary_int(_, _$1) {
	  return function () {
	            throw "caml_ml_output_int not implemented by bucklescript yet\n";
	          }();
	}

	function seek_out(_, _$1) {
	  return function () {
	            throw "caml_ml_seek_out not implemented by bucklescript yet\n";
	          }();
	}

	function pos_out() {
	  return function () {
	            throw "caml_ml_pos_out not implemented by bucklescript yet\n";
	          }();
	}

	function out_channel_length() {
	  return function () {
	            throw "caml_ml_channel_size not implemented by bucklescript yet\n";
	          }();
	}

	function set_binary_mode_out(_, _$1) {
	  return function () {
	            throw "caml_ml_set_binary_mode not implemented by bucklescript yet\n";
	          }();
	}

	var input_char = Caml_io.caml_ml_input_char;

	var input_byte = Caml_io.caml_ml_input_char;

	function input_binary_int() {
	  return function () {
	            throw "caml_ml_input_int not implemented by bucklescript yet\n";
	          }();
	}

	function input_value() {
	  return function () {
	            throw "caml_input_value not implemented by bucklescript yet\n";
	          }();
	}

	function seek_in(_, _$1) {
	  return function () {
	            throw "caml_ml_seek_in not implemented by bucklescript yet\n";
	          }();
	}

	function pos_in() {
	  return function () {
	            throw "caml_ml_pos_in not implemented by bucklescript yet\n";
	          }();
	}

	function in_channel_length() {
	  return function () {
	            throw "caml_ml_channel_size not implemented by bucklescript yet\n";
	          }();
	}

	function close_in() {
	  return function () {
	            throw "caml_ml_close_channel not implemented by bucklescript yet\n";
	          }();
	}

	function set_binary_mode_in(_, _$1) {
	  return function () {
	            throw "caml_ml_set_binary_mode not implemented by bucklescript yet\n";
	          }();
	}

	function LargeFile_000(_, _$1) {
	  return function () {
	            throw "caml_ml_seek_out_64 not implemented by bucklescript yet\n";
	          }();
	}

	function LargeFile_001() {
	  return function () {
	            throw "caml_ml_pos_out_64 not implemented by bucklescript yet\n";
	          }();
	}

	function LargeFile_002() {
	  return function () {
	            throw "caml_ml_channel_size_64 not implemented by bucklescript yet\n";
	          }();
	}

	function LargeFile_003(_, _$1) {
	  return function () {
	            throw "caml_ml_seek_in_64 not implemented by bucklescript yet\n";
	          }();
	}

	function LargeFile_004() {
	  return function () {
	            throw "caml_ml_pos_in_64 not implemented by bucklescript yet\n";
	          }();
	}

	function LargeFile_005() {
	  return function () {
	            throw "caml_ml_channel_size_64 not implemented by bucklescript yet\n";
	          }();
	}

	var LargeFile = [
	  LargeFile_000,
	  LargeFile_001,
	  LargeFile_002,
	  LargeFile_003,
	  LargeFile_004,
	  LargeFile_005
	];

	exports.invalid_arg         = invalid_arg;
	exports.failwith            = failwith;
	exports.Exit                = Exit;
	exports.min                 = min;
	exports.max                 = max;
	exports.abs                 = abs;
	exports.max_int             = max_int;
	exports.min_int             = min_int;
	exports.lnot                = lnot;
	exports.infinity            = infinity;
	exports.neg_infinity        = neg_infinity;
	exports.nan                 = nan;
	exports.max_float           = max_float;
	exports.min_float           = min_float;
	exports.epsilon_float       = epsilon_float;
	exports.$caret              = $caret;
	exports.char_of_int         = char_of_int;
	exports.string_of_bool      = string_of_bool;
	exports.bool_of_string      = bool_of_string;
	exports.string_of_int       = string_of_int;
	exports.string_of_float     = string_of_float;
	exports.$at                 = $at;
	exports.stdin               = stdin;
	exports.stdout              = stdout;
	exports.stderr              = stderr;
	exports.print_char          = print_char;
	exports.print_string        = print_string;
	exports.print_bytes         = print_bytes;
	exports.print_int           = print_int;
	exports.print_float         = print_float;
	exports.print_endline       = print_endline;
	exports.print_newline       = print_newline;
	exports.prerr_char          = prerr_char;
	exports.prerr_string        = prerr_string;
	exports.prerr_bytes         = prerr_bytes;
	exports.prerr_int           = prerr_int;
	exports.prerr_float         = prerr_float;
	exports.prerr_endline       = prerr_endline;
	exports.prerr_newline       = prerr_newline;
	exports.read_line           = read_line;
	exports.read_int            = read_int;
	exports.read_float          = read_float;
	exports.open_out            = open_out;
	exports.open_out_bin        = open_out_bin;
	exports.open_out_gen        = open_out_gen;
	exports.flush               = flush;
	exports.flush_all           = flush_all;
	exports.output_char         = output_char;
	exports.output_string       = output_string;
	exports.output_bytes        = output_bytes;
	exports.output              = output;
	exports.output_substring    = output_substring;
	exports.output_byte         = output_byte;
	exports.output_binary_int   = output_binary_int;
	exports.output_value        = output_value;
	exports.seek_out            = seek_out;
	exports.pos_out             = pos_out;
	exports.out_channel_length  = out_channel_length;
	exports.close_out           = close_out;
	exports.close_out_noerr     = close_out_noerr;
	exports.set_binary_mode_out = set_binary_mode_out;
	exports.open_in             = open_in;
	exports.open_in_bin         = open_in_bin;
	exports.open_in_gen         = open_in_gen;
	exports.input_char          = input_char;
	exports.input_line          = input_line;
	exports.input               = input;
	exports.really_input        = really_input;
	exports.really_input_string = really_input_string;
	exports.input_byte          = input_byte;
	exports.input_binary_int    = input_binary_int;
	exports.input_value         = input_value;
	exports.seek_in             = seek_in;
	exports.pos_in              = pos_in;
	exports.in_channel_length   = in_channel_length;
	exports.close_in            = close_in;
	exports.close_in_noerr      = close_in_noerr;
	exports.set_binary_mode_in  = set_binary_mode_in;
	exports.LargeFile           = LargeFile;
	exports.string_of_format    = string_of_format;
	exports.$caret$caret        = $caret$caret;
	exports.exit                = exit;
	exports.at_exit             = at_exit;
	exports.valid_float_lexem   = valid_float_lexem;
	exports.unsafe_really_input = unsafe_really_input;
	exports.do_at_exit          = do_at_exit;
	/* No side effect */


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var Curry                   = __webpack_require__(1);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function $caret(prim, prim$1) {
	  return prim + prim$1;
	}

	var stdin = undefined;

	var stdout = /* record */[
	  /* buffer */"",
	  /* output */function (_, s) {
	    var v = s.length - 1 | 0;
	    if (( (typeof process !== "undefined") && process.stdout && process.stdout.write)) {
	      return ( process.stdout.write )(s);
	    } else if (s[v] === "\n") {
	      console.log(s.slice(0, v));
	      return /* () */0;
	    } else {
	      console.log(s);
	      return /* () */0;
	    }
	  }
	];

	var stderr = /* record */[
	  /* buffer */"",
	  /* output */function (_, s) {
	    var v = s.length - 1 | 0;
	    if (s[v] === "\n") {
	      console.log(s.slice(0, v));
	      return /* () */0;
	    } else {
	      console.log(s);
	      return /* () */0;
	    }
	  }
	];

	function caml_ml_open_descriptor_in() {
	  throw [
	        Caml_builtin_exceptions.failure,
	        "caml_ml_open_descriptor_in not implemented"
	      ];
	}

	function caml_ml_open_descriptor_out() {
	  throw [
	        Caml_builtin_exceptions.failure,
	        "caml_ml_open_descriptor_out not implemented"
	      ];
	}

	function caml_ml_flush(oc) {
	  if (oc[/* buffer */0] !== "") {
	    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);
	    oc[/* buffer */0] = "";
	    return /* () */0;
	  } else {
	    return 0;
	  }
	}

	var node_std_output = (function (s){
	   return (typeof process !== "undefined") && process.stdout && (process.stdout.write(s), true);
	   }
	);

	function caml_ml_output(oc, str, offset, len) {
	  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);
	  if (( (typeof process !== "undefined") && process.stdout && process.stdout.write ) && oc === stdout) {
	    return ( process.stdout.write )(str$1);
	  } else {
	    var id = str$1.lastIndexOf("\n");
	    if (id < 0) {
	      oc[/* buffer */0] = oc[/* buffer */0] + str$1;
	      return /* () */0;
	    } else {
	      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);
	      caml_ml_flush(oc);
	      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);
	      return /* () */0;
	    }
	  }
	}

	function caml_ml_output_char(oc, $$char) {
	  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);
	}

	function caml_ml_input(_, _$1, _$2, _$3) {
	  throw [
	        Caml_builtin_exceptions.failure,
	        "caml_ml_input ic not implemented"
	      ];
	}

	function caml_ml_input_char() {
	  throw [
	        Caml_builtin_exceptions.failure,
	        "caml_ml_input_char not implemnted"
	      ];
	}

	function caml_ml_out_channels_list() {
	  return /* :: */[
	          stdout,
	          /* :: */[
	            stderr,
	            /* [] */0
	          ]
	        ];
	}

	exports.$caret                      = $caret;
	exports.stdin                       = stdin;
	exports.stdout                      = stdout;
	exports.stderr                      = stderr;
	exports.caml_ml_open_descriptor_in  = caml_ml_open_descriptor_in;
	exports.caml_ml_open_descriptor_out = caml_ml_open_descriptor_out;
	exports.caml_ml_flush               = caml_ml_flush;
	exports.node_std_output             = node_std_output;
	exports.caml_ml_output              = caml_ml_output;
	exports.caml_ml_output_char         = caml_ml_output_char;
	exports.caml_ml_input               = caml_ml_input;
	exports.caml_ml_input_char          = caml_ml_input_char;
	exports.caml_ml_out_channels_list   = caml_ml_out_channels_list;
	/* stdin Not a pure module */

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 10 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Curry                   = __webpack_require__(1);
	var Caml_int32              = __webpack_require__(12);
	var Caml_int64              = __webpack_require__(13);
	var Caml_utils              = __webpack_require__(14);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function caml_failwith(s) {
	  throw [
	        Caml_builtin_exceptions.failure,
	        s
	      ];
	}

	function parse_digit(c) {
	  if (c >= 65) {
	    if (c >= 97) {
	      if (c >= 123) {
	        return -1;
	      } else {
	        return c - 87 | 0;
	      }
	    } else if (c >= 91) {
	      return -1;
	    } else {
	      return c - 55 | 0;
	    }
	  } else if (c > 57 || c < 48) {
	    return -1;
	  } else {
	    return c - /* "0" */48 | 0;
	  }
	}

	function int_of_string_base(param) {
	  switch (param) {
	    case 0 : 
	        return 8;
	    case 1 : 
	        return 16;
	    case 2 : 
	        return 10;
	    case 3 : 
	        return 2;
	    
	  }
	}

	function parse_sign_and_base(s) {
	  var sign = 1;
	  var base = /* Dec */2;
	  var i = 0;
	  if (s[i] === "-") {
	    sign = -1;
	    i = i + 1 | 0;
	  }
	  var match = s.charCodeAt(i);
	  var match$1 = s.charCodeAt(i + 1 | 0);
	  if (match === 48) {
	    if (match$1 >= 89) {
	      if (match$1 !== 98) {
	        if (match$1 !== 111) {
	          if (match$1 === 120) {
	            base = /* Hex */1;
	            i = i + 2 | 0;
	          }
	          
	        } else {
	          base = /* Oct */0;
	          i = i + 2 | 0;
	        }
	      } else {
	        base = /* Bin */3;
	        i = i + 2 | 0;
	      }
	    } else if (match$1 !== 66) {
	      if (match$1 !== 79) {
	        if (match$1 >= 88) {
	          base = /* Hex */1;
	          i = i + 2 | 0;
	        }
	        
	      } else {
	        base = /* Oct */0;
	        i = i + 2 | 0;
	      }
	    } else {
	      base = /* Bin */3;
	      i = i + 2 | 0;
	    }
	  }
	  return /* tuple */[
	          i,
	          sign,
	          base
	        ];
	}

	function caml_int_of_string(s) {
	  var match = parse_sign_and_base(s);
	  var i = match[0];
	  var base = int_of_string_base(match[2]);
	  var threshold = 4294967295;
	  var len = s.length;
	  var c = i < len ? s.charCodeAt(i) : /* "\000" */0;
	  var d = parse_digit(c);
	  if (d < 0 || d >= base) {
	    throw [
	          Caml_builtin_exceptions.failure,
	          "int_of_string"
	        ];
	  }
	  var aux = function (_acc, _k) {
	    while(true) {
	      var k = _k;
	      var acc = _acc;
	      if (k === len) {
	        return acc;
	      } else {
	        var a = s.charCodeAt(k);
	        if (a === /* "_" */95) {
	          _k = k + 1 | 0;
	          continue ;
	          
	        } else {
	          var v = parse_digit(a);
	          if (v < 0 || v >= base) {
	            throw [
	                  Caml_builtin_exceptions.failure,
	                  "int_of_string"
	                ];
	          } else {
	            var acc$1 = base * acc + v;
	            if (acc$1 > threshold) {
	              throw [
	                    Caml_builtin_exceptions.failure,
	                    "int_of_string"
	                  ];
	            } else {
	              _k = k + 1 | 0;
	              _acc = acc$1;
	              continue ;
	              
	            }
	          }
	        }
	      }
	    };
	  };
	  var res = match[1] * aux(d, i + 1 | 0);
	  var or_res = res | 0;
	  if (base === 10 && res !== or_res) {
	    throw [
	          Caml_builtin_exceptions.failure,
	          "int_of_string"
	        ];
	  }
	  return or_res;
	}

	function caml_int64_of_string(s) {
	  var match = parse_sign_and_base(s);
	  var hbase = match[2];
	  var i = match[0];
	  var base = Caml_int64.of_int32(int_of_string_base(hbase));
	  var sign = Caml_int64.of_int32(match[1]);
	  var threshold;
	  switch (hbase) {
	    case 0 : 
	        threshold = /* int64 */[
	          /* hi */536870911,
	          /* lo */4294967295
	        ];
	        break;
	    case 1 : 
	        threshold = /* int64 */[
	          /* hi */268435455,
	          /* lo */4294967295
	        ];
	        break;
	    case 2 : 
	        threshold = /* int64 */[
	          /* hi */429496729,
	          /* lo */2576980377
	        ];
	        break;
	    case 3 : 
	        threshold = /* int64 */[
	          /* hi */2147483647,
	          /* lo */4294967295
	        ];
	        break;
	    
	  }
	  var len = s.length;
	  var c = i < len ? s.charCodeAt(i) : /* "\000" */0;
	  var d = Caml_int64.of_int32(parse_digit(c));
	  if (Caml_int64.lt(d, /* int64 */[
	          /* hi */0,
	          /* lo */0
	        ]) || Caml_int64.ge(d, base)) {
	    throw [
	          Caml_builtin_exceptions.failure,
	          "int64_of_string"
	        ];
	  }
	  var aux = function (_acc, _k) {
	    while(true) {
	      var k = _k;
	      var acc = _acc;
	      if (k === len) {
	        return acc;
	      } else {
	        var a = s.charCodeAt(k);
	        if (a === /* "_" */95) {
	          _k = k + 1 | 0;
	          continue ;
	          
	        } else {
	          var v = Caml_int64.of_int32(parse_digit(a));
	          if (Caml_int64.lt(v, /* int64 */[
	                  /* hi */0,
	                  /* lo */0
	                ]) || Caml_int64.ge(v, base)) {
	            throw [
	                  Caml_builtin_exceptions.failure,
	                  "int64_of_string"
	                ];
	          } else {
	            var acc$1 = Caml_int64.add(Caml_int64.mul(base, acc), v);
	            if (Caml_int64.gt(acc$1, threshold)) {
	              throw [
	                    Caml_builtin_exceptions.failure,
	                    "int64_of_string"
	                  ];
	            } else {
	              _k = k + 1 | 0;
	              _acc = acc$1;
	              continue ;
	              
	            }
	          }
	        }
	      }
	    };
	  };
	  var res = Caml_int64.mul(sign, aux(d, i + 1 | 0));
	  var or_res = Caml_int64.or_(res, /* int64 */[
	        /* hi */0,
	        /* lo */0
	      ]);
	  if (Caml_int64.eq(base, /* int64 */[
	          /* hi */0,
	          /* lo */10
	        ]) && Caml_int64.neq(res, or_res)) {
	    throw [
	          Caml_builtin_exceptions.failure,
	          "int64_of_string"
	        ];
	  }
	  return or_res;
	}

	function int_of_base(param) {
	  switch (param) {
	    case 0 : 
	        return 8;
	    case 1 : 
	        return 16;
	    case 2 : 
	        return 10;
	    
	  }
	}

	function lowercase(c) {
	  if (c >= /* "A" */65 && c <= /* "Z" */90 || c >= /* "\192" */192 && c <= /* "\214" */214 || c >= /* "\216" */216 && c <= /* "\222" */222) {
	    return c + 32 | 0;
	  } else {
	    return c;
	  }
	}

	function parse_format(fmt) {
	  var len = fmt.length;
	  if (len > 31) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "format_int: format too long"
	        ];
	  }
	  var f = /* record */[
	    /* justify */"+",
	    /* signstyle */"-",
	    /* filter */" ",
	    /* alternate : false */0,
	    /* base : Dec */2,
	    /* signedconv : false */0,
	    /* width */0,
	    /* uppercase : false */0,
	    /* sign */1,
	    /* prec */-1,
	    /* conv */"f"
	  ];
	  var _i = 0;
	  while(true) {
	    var i = _i;
	    if (i >= len) {
	      return f;
	    } else {
	      var c = fmt.charCodeAt(i);
	      var exit = 0;
	      if (c >= 69) {
	        if (c >= 88) {
	          if (c >= 121) {
	            exit = 1;
	          } else {
	            switch (c - 88 | 0) {
	              case 0 : 
	                  f[/* base */4] = /* Hex */1;
	                  f[/* uppercase */7] = /* true */1;
	                  _i = i + 1 | 0;
	                  continue ;
	                  case 13 : 
	              case 14 : 
	              case 15 : 
	                  exit = 5;
	                  break;
	              case 12 : 
	              case 17 : 
	                  exit = 4;
	                  break;
	              case 23 : 
	                  f[/* base */4] = /* Oct */0;
	                  _i = i + 1 | 0;
	                  continue ;
	                  case 29 : 
	                  f[/* base */4] = /* Dec */2;
	                  _i = i + 1 | 0;
	                  continue ;
	                  case 1 : 
	              case 2 : 
	              case 3 : 
	              case 4 : 
	              case 5 : 
	              case 6 : 
	              case 7 : 
	              case 8 : 
	              case 9 : 
	              case 10 : 
	              case 11 : 
	              case 16 : 
	              case 18 : 
	              case 19 : 
	              case 20 : 
	              case 21 : 
	              case 22 : 
	              case 24 : 
	              case 25 : 
	              case 26 : 
	              case 27 : 
	              case 28 : 
	              case 30 : 
	              case 31 : 
	                  exit = 1;
	                  break;
	              case 32 : 
	                  f[/* base */4] = /* Hex */1;
	                  _i = i + 1 | 0;
	                  continue ;
	                  
	            }
	          }
	        } else if (c >= 72) {
	          exit = 1;
	        } else {
	          f[/* signedconv */5] = /* true */1;
	          f[/* uppercase */7] = /* true */1;
	          f[/* conv */10] = String.fromCharCode(lowercase(c));
	          _i = i + 1 | 0;
	          continue ;
	          
	        }
	      } else {
	        var switcher = c - 32 | 0;
	        if (switcher > 25 || switcher < 0) {
	          exit = 1;
	        } else {
	          switch (switcher) {
	            case 3 : 
	                f[/* alternate */3] = /* true */1;
	                _i = i + 1 | 0;
	                continue ;
	                case 0 : 
	            case 11 : 
	                exit = 2;
	                break;
	            case 13 : 
	                f[/* justify */0] = "-";
	                _i = i + 1 | 0;
	                continue ;
	                case 14 : 
	                f[/* prec */9] = 0;
	                var j = i + 1 | 0;
	                while((function(j){
	                    return function () {
	                      var w = fmt.charCodeAt(j) - /* "0" */48 | 0;
	                      return +(w >= 0 && w <= 9);
	                    }
	                    }(j))()) {
	                  f[/* prec */9] = (Caml_int32.imul(f[/* prec */9], 10) + fmt.charCodeAt(j) | 0) - /* "0" */48 | 0;
	                  j = j + 1 | 0;
	                };
	                _i = j;
	                continue ;
	                case 1 : 
	            case 2 : 
	            case 4 : 
	            case 5 : 
	            case 6 : 
	            case 7 : 
	            case 8 : 
	            case 9 : 
	            case 10 : 
	            case 12 : 
	            case 15 : 
	                exit = 1;
	                break;
	            case 16 : 
	                f[/* filter */2] = "0";
	                _i = i + 1 | 0;
	                continue ;
	                case 17 : 
	            case 18 : 
	            case 19 : 
	            case 20 : 
	            case 21 : 
	            case 22 : 
	            case 23 : 
	            case 24 : 
	            case 25 : 
	                exit = 3;
	                break;
	            
	          }
	        }
	      }
	      switch (exit) {
	        case 1 : 
	            _i = i + 1 | 0;
	            continue ;
	            case 2 : 
	            f[/* signstyle */1] = String.fromCharCode(c);
	            _i = i + 1 | 0;
	            continue ;
	            case 3 : 
	            f[/* width */6] = 0;
	            var j$1 = i;
	            while((function(j$1){
	                return function () {
	                  var w = fmt.charCodeAt(j$1) - /* "0" */48 | 0;
	                  return +(w >= 0 && w <= 9);
	                }
	                }(j$1))()) {
	              f[/* width */6] = (Caml_int32.imul(f[/* width */6], 10) + fmt.charCodeAt(j$1) | 0) - /* "0" */48 | 0;
	              j$1 = j$1 + 1 | 0;
	            };
	            _i = j$1;
	            continue ;
	            case 4 : 
	            f[/* signedconv */5] = /* true */1;
	            f[/* base */4] = /* Dec */2;
	            _i = i + 1 | 0;
	            continue ;
	            case 5 : 
	            f[/* signedconv */5] = /* true */1;
	            f[/* conv */10] = String.fromCharCode(c);
	            _i = i + 1 | 0;
	            continue ;
	            
	      }
	    }
	  };
	}

	function finish_formatting(param, rawbuffer) {
	  var justify = param[/* justify */0];
	  var signstyle = param[/* signstyle */1];
	  var filter = param[/* filter */2];
	  var alternate = param[/* alternate */3];
	  var base = param[/* base */4];
	  var signedconv = param[/* signedconv */5];
	  var width = param[/* width */6];
	  var uppercase = param[/* uppercase */7];
	  var sign = param[/* sign */8];
	  var len = rawbuffer.length;
	  if (signedconv && (sign < 0 || signstyle !== "-")) {
	    len = len + 1 | 0;
	  }
	  if (alternate) {
	    if (base) {
	      if (base === /* Hex */1) {
	        len = len + 2 | 0;
	      }
	      
	    } else {
	      len = len + 1 | 0;
	    }
	  }
	  var buffer = "";
	  if (justify === "+" && filter === " ") {
	    for(var i = len ,i_finish = width - 1 | 0; i <= i_finish; ++i){
	      buffer = buffer + filter;
	    }
	  }
	  if (signedconv) {
	    if (sign < 0) {
	      buffer = buffer + "-";
	    } else if (signstyle !== "-") {
	      buffer = buffer + signstyle;
	    }
	    
	  }
	  if (alternate && base === /* Oct */0) {
	    buffer = buffer + "0";
	  }
	  if (alternate && base === /* Hex */1) {
	    buffer = buffer + "0x";
	  }
	  if (justify === "+" && filter === "0") {
	    for(var i$1 = len ,i_finish$1 = width - 1 | 0; i$1 <= i_finish$1; ++i$1){
	      buffer = buffer + filter;
	    }
	  }
	  buffer = uppercase ? buffer + rawbuffer.toUpperCase() : buffer + rawbuffer;
	  if (justify === "-") {
	    for(var i$2 = len ,i_finish$2 = width - 1 | 0; i$2 <= i_finish$2; ++i$2){
	      buffer = buffer + " ";
	    }
	  }
	  return buffer;
	}

	function caml_format_int(fmt, i) {
	  if (fmt === "%d") {
	    return String(i);
	  } else {
	    var f = parse_format(fmt);
	    var f$1 = f;
	    var i$1 = i;
	    var i$2 = i$1 < 0 ? (
	        f$1[/* signedconv */5] ? (f$1[/* sign */8] = -1, -i$1) : (i$1 >>> 0)
	      ) : i$1;
	    var s = i$2.toString(int_of_base(f$1[/* base */4]));
	    if (f$1[/* prec */9] >= 0) {
	      f$1[/* filter */2] = " ";
	      var n = f$1[/* prec */9] - s.length | 0;
	      if (n > 0) {
	        s = Caml_utils.repeat(n, "0") + s;
	      }
	      
	    }
	    return finish_formatting(f$1, s);
	  }
	}

	function caml_int64_format(fmt, x) {
	  var f = parse_format(fmt);
	  var x$1 = f[/* signedconv */5] && Caml_int64.lt(x, /* int64 */[
	        /* hi */0,
	        /* lo */0
	      ]) ? (f[/* sign */8] = -1, Caml_int64.neg(x)) : x;
	  var s = "";
	  var match = f[/* base */4];
	  switch (match) {
	    case 0 : 
	        var wbase = /* int64 */[
	          /* hi */0,
	          /* lo */8
	        ];
	        var cvtbl = "01234567";
	        if (Caml_int64.lt(x$1, /* int64 */[
	                /* hi */0,
	                /* lo */0
	              ])) {
	          var y = Caml_int64.discard_sign(x$1);
	          var match$1 = Caml_int64.div_mod(y, wbase);
	          var quotient = Caml_int64.add(/* int64 */[
	                /* hi */268435456,
	                /* lo */0
	              ], match$1[0]);
	          var modulus = match$1[1];
	          s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;
	          while(Caml_int64.neq(quotient, /* int64 */[
	                  /* hi */0,
	                  /* lo */0
	                ])) {
	            var match$2 = Caml_int64.div_mod(quotient, wbase);
	            quotient = match$2[0];
	            modulus = match$2[1];
	            s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;
	          };
	        } else {
	          var match$3 = Caml_int64.div_mod(x$1, wbase);
	          var quotient$1 = match$3[0];
	          var modulus$1 = match$3[1];
	          s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;
	          while(Caml_int64.neq(quotient$1, /* int64 */[
	                  /* hi */0,
	                  /* lo */0
	                ])) {
	            var match$4 = Caml_int64.div_mod(quotient$1, wbase);
	            quotient$1 = match$4[0];
	            modulus$1 = match$4[1];
	            s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;
	          };
	        }
	        break;
	    case 1 : 
	        s = Caml_int64.to_hex(x$1) + s;
	        break;
	    case 2 : 
	        var wbase$1 = /* int64 */[
	          /* hi */0,
	          /* lo */10
	        ];
	        var cvtbl$1 = "0123456789";
	        if (Caml_int64.lt(x$1, /* int64 */[
	                /* hi */0,
	                /* lo */0
	              ])) {
	          var y$1 = Caml_int64.discard_sign(x$1);
	          var match$5 = Caml_int64.div_mod(y$1, wbase$1);
	          var match$6 = Caml_int64.div_mod(Caml_int64.add(/* int64 */[
	                    /* hi */0,
	                    /* lo */8
	                  ], match$5[1]), wbase$1);
	          var quotient$2 = Caml_int64.add(Caml_int64.add(/* int64 */[
	                    /* hi */214748364,
	                    /* lo */3435973836
	                  ], match$5[0]), match$6[0]);
	          var modulus$2 = match$6[1];
	          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;
	          while(Caml_int64.neq(quotient$2, /* int64 */[
	                  /* hi */0,
	                  /* lo */0
	                ])) {
	            var match$7 = Caml_int64.div_mod(quotient$2, wbase$1);
	            quotient$2 = match$7[0];
	            modulus$2 = match$7[1];
	            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;
	          };
	        } else {
	          var match$8 = Caml_int64.div_mod(x$1, wbase$1);
	          var quotient$3 = match$8[0];
	          var modulus$3 = match$8[1];
	          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;
	          while(Caml_int64.neq(quotient$3, /* int64 */[
	                  /* hi */0,
	                  /* lo */0
	                ])) {
	            var match$9 = Caml_int64.div_mod(quotient$3, wbase$1);
	            quotient$3 = match$9[0];
	            modulus$3 = match$9[1];
	            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;
	          };
	        }
	        break;
	    
	  }
	  if (f[/* prec */9] >= 0) {
	    f[/* filter */2] = " ";
	    var n = f[/* prec */9] - s.length | 0;
	    if (n > 0) {
	      s = Caml_utils.repeat(n, "0") + s;
	    }
	    
	  }
	  return finish_formatting(f, s);
	}

	function caml_format_float(fmt, x) {
	  var f = parse_format(fmt);
	  var prec = f[/* prec */9] < 0 ? 6 : f[/* prec */9];
	  var x$1 = x < 0 ? (f[/* sign */8] = -1, -x) : x;
	  var s = "";
	  if (isNaN(x$1)) {
	    s = "nan";
	    f[/* filter */2] = " ";
	  } else if (isFinite(x$1)) {
	    var match = f[/* conv */10];
	    switch (match) {
	      case "e" : 
	          s = x$1.toExponential(prec);
	          var i = s.length;
	          if (s[i - 3 | 0] === "e") {
	            s = s.slice(0, i - 1 | 0) + ("0" + s.slice(i - 1 | 0));
	          }
	          break;
	      case "f" : 
	          s = x$1.toFixed(prec);
	          break;
	      case "g" : 
	          var prec$1 = prec !== 0 ? prec : 1;
	          s = x$1.toExponential(prec$1 - 1 | 0);
	          var j = s.indexOf("e");
	          var exp = Number(s.slice(j + 1 | 0)) | 0;
	          if (exp < -4 || x$1 >= 1e21 || x$1.toFixed().length > prec$1) {
	            var i$1 = j - 1 | 0;
	            while(s[i$1] === "0") {
	              i$1 = i$1 - 1 | 0;
	            };
	            if (s[i$1] === ".") {
	              i$1 = i$1 - 1 | 0;
	            }
	            s = s.slice(0, i$1 + 1 | 0) + s.slice(j);
	            var i$2 = s.length;
	            if (s[i$2 - 3 | 0] === "e") {
	              s = s.slice(0, i$2 - 1 | 0) + ("0" + s.slice(i$2 - 1 | 0));
	            }
	            
	          } else {
	            var p = prec$1;
	            if (exp < 0) {
	              p = p - (exp + 1 | 0) | 0;
	              s = x$1.toFixed(p);
	            } else {
	              while(function () {
	                    s = x$1.toFixed(p);
	                    return +(s.length > (prec$1 + 1 | 0));
	                  }()) {
	                p = p - 1 | 0;
	              };
	            }
	            if (p !== 0) {
	              var k = s.length - 1 | 0;
	              while(s[k] === "0") {
	                k = k - 1 | 0;
	              };
	              if (s[k] === ".") {
	                k = k - 1 | 0;
	              }
	              s = s.slice(0, k + 1 | 0);
	            }
	            
	          }
	          break;
	      default:
	        
	    }
	  } else {
	    s = "inf";
	    f[/* filter */2] = " ";
	  }
	  return finish_formatting(f, s);
	}

	var float_of_string = (
	  function (s, caml_failwith) {
	    var res = +s;
	    if ((s.length > 0) && (res === res))
	        return res;
	    s = s.replace(/_/g, "");
	    res = +s;
	    if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) {
	        return res;
	    }
	    ;
	    if (/^ *0x[0-9a-f_]+p[+-]?[0-9_]+/i.test(s)) {
	        var pidx = s.indexOf('p');
	        pidx = (pidx == -1) ? s.indexOf('P') : pidx;
	        var exp = +s.substring(pidx + 1);
	        res = +s.substring(0, pidx);
	        return res * Math.pow(2, exp);
	    }
	    if (/^\+?inf(inity)?$/i.test(s))
	        return Infinity;
	    if (/^-inf(inity)?$/i.test(s))
	        return -Infinity;
	    caml_failwith("float_of_string");
	}

	);

	function caml_float_of_string(s) {
	  return Curry._2(float_of_string, s, caml_failwith);
	}

	var caml_nativeint_format = caml_format_int;

	var caml_int32_format = caml_format_int;

	var caml_int32_of_string = caml_int_of_string;

	var caml_nativeint_of_string = caml_int_of_string;

	exports.caml_format_float        = caml_format_float;
	exports.caml_format_int          = caml_format_int;
	exports.caml_nativeint_format    = caml_nativeint_format;
	exports.caml_int32_format        = caml_int32_format;
	exports.caml_float_of_string     = caml_float_of_string;
	exports.caml_int64_format        = caml_int64_format;
	exports.caml_int_of_string       = caml_int_of_string;
	exports.caml_int32_of_string     = caml_int32_of_string;
	exports.caml_int64_of_string     = caml_int64_of_string;
	exports.caml_nativeint_of_string = caml_nativeint_of_string;
	/* float_of_string Not a pure module */


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_builtin_exceptions = __webpack_require__(3);

	function div(x, y) {
	  if (y === 0) {
	    throw Caml_builtin_exceptions.division_by_zero;
	  } else {
	    return x / y | 0;
	  }
	}

	function mod_(x, y) {
	  if (y === 0) {
	    throw Caml_builtin_exceptions.division_by_zero;
	  } else {
	    return x % y;
	  }
	}

	function caml_bswap16(x) {
	  return ((x & 255) << 8) | ((x & 65280) >>> 8);
	}

	function caml_int32_bswap(x) {
	  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);
	}

	var imul = ( Math.imul || function (x,y) {
	  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; 
	}
	);

	var caml_nativeint_bswap = caml_int32_bswap;

	exports.div                  = div;
	exports.mod_                 = mod_;
	exports.caml_bswap16         = caml_bswap16;
	exports.caml_int32_bswap     = caml_int32_bswap;
	exports.caml_nativeint_bswap = caml_nativeint_bswap;
	exports.imul                 = imul;
	/* imul Not a pure module */


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_obj                = __webpack_require__(6);
	var Caml_int32              = __webpack_require__(12);
	var Caml_utils              = __webpack_require__(14);
	var Caml_builtin_exceptions = __webpack_require__(3);

	var min_int = /* record */[
	  /* hi */-2147483648,
	  /* lo */0
	];

	var max_int = /* record */[
	  /* hi */134217727,
	  /* lo */1
	];

	var one = /* record */[
	  /* hi */0,
	  /* lo */1
	];

	var zero = /* record */[
	  /* hi */0,
	  /* lo */0
	];

	var neg_one = /* record */[
	  /* hi */-1,
	  /* lo */4294967295
	];

	function neg_signed(x) {
	  return +((x & 2147483648) !== 0);
	}

	function add(param, param$1) {
	  var other_low_ = param$1[/* lo */1];
	  var this_low_ = param[/* lo */1];
	  var lo = this_low_ + other_low_ & 4294967295;
	  var overflow = neg_signed(this_low_) && (neg_signed(other_low_) || !neg_signed(lo)) || neg_signed(other_low_) && !neg_signed(lo) ? 1 : 0;
	  var hi = param[/* hi */0] + param$1[/* hi */0] + overflow & 4294967295;
	  return /* record */[
	          /* hi */hi,
	          /* lo */(lo >>> 0)
	        ];
	}

	function not(param) {
	  var hi = param[/* hi */0] ^ -1;
	  var lo = param[/* lo */1] ^ -1;
	  return /* record */[
	          /* hi */hi,
	          /* lo */(lo >>> 0)
	        ];
	}

	function eq(x, y) {
	  if (x[/* hi */0] === y[/* hi */0]) {
	    return +(x[/* lo */1] === y[/* lo */1]);
	  } else {
	    return /* false */0;
	  }
	}

	function neg(x) {
	  if (eq(x, min_int)) {
	    return min_int;
	  } else {
	    return add(not(x), one);
	  }
	}

	function sub(x, y) {
	  return add(x, neg(y));
	}

	function lsl_(x, numBits) {
	  if (numBits) {
	    var lo = x[/* lo */1];
	    if (numBits >= 32) {
	      return /* record */[
	              /* hi */(lo << (numBits - 32 | 0)),
	              /* lo */0
	            ];
	    } else {
	      var hi = (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits);
	      return /* record */[
	              /* hi */hi,
	              /* lo */((lo << numBits) >>> 0)
	            ];
	    }
	  } else {
	    return x;
	  }
	}

	function lsr_(x, numBits) {
	  if (numBits) {
	    var hi = x[/* hi */0];
	    var offset = numBits - 32 | 0;
	    if (offset) {
	      if (offset > 0) {
	        var lo = (hi >>> offset);
	        return /* record */[
	                /* hi */0,
	                /* lo */(lo >>> 0)
	              ];
	      } else {
	        var hi$1 = (hi >>> numBits);
	        var lo$1 = (hi << (-offset | 0)) | (x[/* lo */1] >>> numBits);
	        return /* record */[
	                /* hi */hi$1,
	                /* lo */(lo$1 >>> 0)
	              ];
	      }
	    } else {
	      return /* record */[
	              /* hi */0,
	              /* lo */(hi >>> 0)
	            ];
	    }
	  } else {
	    return x;
	  }
	}

	function asr_(x, numBits) {
	  if (numBits) {
	    var hi = x[/* hi */0];
	    if (numBits < 32) {
	      var hi$1 = (hi >> numBits);
	      var lo = (hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits);
	      return /* record */[
	              /* hi */hi$1,
	              /* lo */(lo >>> 0)
	            ];
	    } else {
	      var lo$1 = (hi >> (numBits - 32 | 0));
	      return /* record */[
	              /* hi */hi >= 0 ? 0 : -1,
	              /* lo */(lo$1 >>> 0)
	            ];
	    }
	  } else {
	    return x;
	  }
	}

	function is_zero(param) {
	  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {
	    return /* false */0;
	  } else {
	    return /* true */1;
	  }
	}

	function mul(_this, _other) {
	  while(true) {
	    var other = _other;
	    var $$this = _this;
	    var exit = 0;
	    var lo;
	    var this_hi = $$this[/* hi */0];
	    var exit$1 = 0;
	    var exit$2 = 0;
	    var exit$3 = 0;
	    if (this_hi !== 0) {
	      exit$3 = 4;
	    } else if ($$this[/* lo */1] !== 0) {
	      exit$3 = 4;
	    } else {
	      return zero;
	    }
	    if (exit$3 === 4) {
	      if (other[/* hi */0] !== 0) {
	        exit$2 = 3;
	      } else if (other[/* lo */1] !== 0) {
	        exit$2 = 3;
	      } else {
	        return zero;
	      }
	    }
	    if (exit$2 === 3) {
	      if (this_hi !== -2147483648) {
	        exit$1 = 2;
	      } else if ($$this[/* lo */1] !== 0) {
	        exit$1 = 2;
	      } else {
	        lo = other[/* lo */1];
	        exit = 1;
	      }
	    }
	    if (exit$1 === 2) {
	      var other_hi = other[/* hi */0];
	      var lo$1 = $$this[/* lo */1];
	      var exit$4 = 0;
	      if (other_hi !== -2147483648) {
	        exit$4 = 3;
	      } else if (other[/* lo */1] !== 0) {
	        exit$4 = 3;
	      } else {
	        lo = lo$1;
	        exit = 1;
	      }
	      if (exit$4 === 3) {
	        var other_lo = other[/* lo */1];
	        if (this_hi < 0) {
	          if (other_hi < 0) {
	            _other = neg(other);
	            _this = neg($$this);
	            continue ;
	            
	          } else {
	            return neg(mul(neg($$this), other));
	          }
	        } else if (other_hi < 0) {
	          return neg(mul($$this, neg(other)));
	        } else {
	          var a48 = (this_hi >>> 16);
	          var a32 = this_hi & 65535;
	          var a16 = (lo$1 >>> 16);
	          var a00 = lo$1 & 65535;
	          var b48 = (other_hi >>> 16);
	          var b32 = other_hi & 65535;
	          var b16 = (other_lo >>> 16);
	          var b00 = other_lo & 65535;
	          var c48 = 0;
	          var c32 = 0;
	          var c16 = 0;
	          var c00 = a00 * b00;
	          c16 = (c00 >>> 16) + a16 * b00;
	          c32 = (c16 >>> 16);
	          c16 = (c16 & 65535) + a00 * b16;
	          c32 = c32 + (c16 >>> 16) + a32 * b00;
	          c48 = (c32 >>> 16);
	          c32 = (c32 & 65535) + a16 * b16;
	          c48 += (c32 >>> 16);
	          c32 = (c32 & 65535) + a00 * b32;
	          c48 += (c32 >>> 16);
	          c32 = c32 & 65535;
	          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;
	          var hi = c32 | (c48 << 16);
	          var lo$2 = c00 & 65535 | ((c16 & 65535) << 16);
	          return /* record */[
	                  /* hi */hi,
	                  /* lo */(lo$2 >>> 0)
	                ];
	        }
	      }
	      
	    }
	    if (exit === 1) {
	      if ((lo & 1) === 0) {
	        return zero;
	      } else {
	        return min_int;
	      }
	    }
	    
	  };
	}

	function swap(param) {
	  var hi = Caml_int32.caml_int32_bswap(param[/* lo */1]);
	  var lo = Caml_int32.caml_int32_bswap(param[/* hi */0]);
	  return /* record */[
	          /* hi */hi,
	          /* lo */(lo >>> 0)
	        ];
	}

	function xor(param, param$1) {
	  return /* record */[
	          /* hi */param[/* hi */0] ^ param$1[/* hi */0],
	          /* lo */((param[/* lo */1] ^ param$1[/* lo */1]) >>> 0)
	        ];
	}

	function or_(param, param$1) {
	  return /* record */[
	          /* hi */param[/* hi */0] | param$1[/* hi */0],
	          /* lo */((param[/* lo */1] | param$1[/* lo */1]) >>> 0)
	        ];
	}

	function and_(param, param$1) {
	  return /* record */[
	          /* hi */param[/* hi */0] & param$1[/* hi */0],
	          /* lo */((param[/* lo */1] & param$1[/* lo */1]) >>> 0)
	        ];
	}

	function ge(param, param$1) {
	  var other_hi = param$1[/* hi */0];
	  var hi = param[/* hi */0];
	  if (hi > other_hi) {
	    return /* true */1;
	  } else if (hi < other_hi) {
	    return /* false */0;
	  } else {
	    return +(param[/* lo */1] >= param$1[/* lo */1]);
	  }
	}

	function neq(x, y) {
	  return 1 - eq(x, y);
	}

	function lt(x, y) {
	  return 1 - ge(x, y);
	}

	function gt(x, y) {
	  if (x[/* hi */0] > y[/* hi */0]) {
	    return /* true */1;
	  } else if (x[/* hi */0] < y[/* hi */0]) {
	    return /* false */0;
	  } else {
	    return +(x[/* lo */1] > y[/* lo */1]);
	  }
	}

	function le(x, y) {
	  return 1 - gt(x, y);
	}

	function to_float(param) {
	  return param[/* hi */0] * (0x100000000) + param[/* lo */1];
	}

	var two_ptr_32_dbl = Math.pow(2, 32);

	var two_ptr_63_dbl = Math.pow(2, 63);

	var neg_two_ptr_63 = -Math.pow(2, 63);

	function of_float(x) {
	  if (isNaN(x) || !isFinite(x)) {
	    return zero;
	  } else if (x <= neg_two_ptr_63) {
	    return min_int;
	  } else if (x + 1 >= two_ptr_63_dbl) {
	    return max_int;
	  } else if (x < 0) {
	    return neg(of_float(-x));
	  } else {
	    var hi = x / two_ptr_32_dbl | 0;
	    var lo = x % two_ptr_32_dbl | 0;
	    return /* record */[
	            /* hi */hi,
	            /* lo */(lo >>> 0)
	          ];
	  }
	}

	function div(_self, _other) {
	  while(true) {
	    var other = _other;
	    var self = _self;
	    var self_hi = self[/* hi */0];
	    var exit = 0;
	    var exit$1 = 0;
	    if (other[/* hi */0] !== 0) {
	      exit$1 = 2;
	    } else if (other[/* lo */1] !== 0) {
	      exit$1 = 2;
	    } else {
	      throw Caml_builtin_exceptions.division_by_zero;
	    }
	    if (exit$1 === 2) {
	      if (self_hi !== -2147483648) {
	        if (self_hi !== 0) {
	          exit = 1;
	        } else if (self[/* lo */1] !== 0) {
	          exit = 1;
	        } else {
	          return zero;
	        }
	      } else if (self[/* lo */1] !== 0) {
	        exit = 1;
	      } else if (eq(other, one) || eq(other, neg_one)) {
	        return self;
	      } else if (eq(other, min_int)) {
	        return one;
	      } else {
	        var other_hi = other[/* hi */0];
	        var half_this = asr_(self, 1);
	        var approx = lsl_(div(half_this, other), 1);
	        var exit$2 = 0;
	        if (approx[/* hi */0] !== 0) {
	          exit$2 = 3;
	        } else if (approx[/* lo */1] !== 0) {
	          exit$2 = 3;
	        } else if (other_hi < 0) {
	          return one;
	        } else {
	          return neg(one);
	        }
	        if (exit$2 === 3) {
	          var y = mul(other, approx);
	          var rem = add(self, neg(y));
	          return add(approx, div(rem, other));
	        }
	        
	      }
	    }
	    if (exit === 1) {
	      var other_hi$1 = other[/* hi */0];
	      var exit$3 = 0;
	      if (other_hi$1 !== -2147483648) {
	        exit$3 = 2;
	      } else if (other[/* lo */1] !== 0) {
	        exit$3 = 2;
	      } else {
	        return zero;
	      }
	      if (exit$3 === 2) {
	        if (self_hi < 0) {
	          if (other_hi$1 < 0) {
	            _other = neg(other);
	            _self = neg(self);
	            continue ;
	            
	          } else {
	            return neg(div(neg(self), other));
	          }
	        } else if (other_hi$1 < 0) {
	          return neg(div(self, neg(other)));
	        } else {
	          var res = zero;
	          var rem$1 = self;
	          while(ge(rem$1, other)) {
	            var approx$1 = Math.max(1, Math.floor(to_float(rem$1) / to_float(other)));
	            var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);
	            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
	            var approxRes = of_float(approx$1);
	            var approxRem = mul(approxRes, other);
	            while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {
	              approx$1 -= delta;
	              approxRes = of_float(approx$1);
	              approxRem = mul(approxRes, other);
	            };
	            if (is_zero(approxRes)) {
	              approxRes = one;
	            }
	            res = add(res, approxRes);
	            rem$1 = add(rem$1, neg(approxRem));
	          };
	          return res;
	        }
	      }
	      
	    }
	    
	  };
	}

	function mod_(self, other) {
	  var y = mul(div(self, other), other);
	  return add(self, neg(y));
	}

	function div_mod(self, other) {
	  var quotient = div(self, other);
	  var y = mul(quotient, other);
	  return /* tuple */[
	          quotient,
	          add(self, neg(y))
	        ];
	}

	function compare(self, other) {
	  var v = Caml_obj.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);
	  if (v) {
	    return v;
	  } else {
	    return Caml_obj.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);
	  }
	}

	function of_int32(lo) {
	  return /* record */[
	          /* hi */lo < 0 ? -1 : 0,
	          /* lo */(lo >>> 0)
	        ];
	}

	function to_int32(x) {
	  return x[/* lo */1] | 0;
	}

	function to_hex(x) {
	  var aux = function (v) {
	    return (v >>> 0).toString(16);
	  };
	  var match = x[/* hi */0];
	  var match$1 = x[/* lo */1];
	  var exit = 0;
	  if (match !== 0) {
	    exit = 1;
	  } else if (match$1 !== 0) {
	    exit = 1;
	  } else {
	    return "0";
	  }
	  if (exit === 1) {
	    if (match$1 !== 0) {
	      if (match !== 0) {
	        var lo = aux(x[/* lo */1]);
	        var pad = 8 - lo.length | 0;
	        if (pad <= 0) {
	          return aux(x[/* hi */0]) + lo;
	        } else {
	          return aux(x[/* hi */0]) + (Caml_utils.repeat(pad, "0") + lo);
	        }
	      } else {
	        return aux(x[/* lo */1]);
	      }
	    } else {
	      return aux(x[/* hi */0]) + "00000000";
	    }
	  }
	  
	}

	function discard_sign(x) {
	  return /* record */[
	          /* hi */2147483647 & x[/* hi */0],
	          /* lo */x[/* lo */1]
	        ];
	}

	function float_of_bits(x) {
	  var int32 = new Int32Array(/* array */[
	        x[/* lo */1],
	        x[/* hi */0]
	      ]);
	  return new Float64Array(int32.buffer)[0];
	}

	function bits_of_float(x) {
	  var u = new Float64Array(/* float array */[x]);
	  var int32 = new Int32Array(u.buffer);
	  var x$1 = int32[1];
	  var hi = x$1;
	  var x$2 = int32[0];
	  var lo = x$2;
	  return /* record */[
	          /* hi */hi,
	          /* lo */(lo >>> 0)
	        ];
	}

	function get64(s, i) {
	  var hi = (s.charCodeAt(i + 4 | 0) << 32) | (s.charCodeAt(i + 5 | 0) << 40) | (s.charCodeAt(i + 6 | 0) << 48) | (s.charCodeAt(i + 7 | 0) << 56);
	  var lo = s.charCodeAt(i) | (s.charCodeAt(i + 1 | 0) << 8) | (s.charCodeAt(i + 2 | 0) << 16) | (s.charCodeAt(i + 3 | 0) << 24);
	  return /* record */[
	          /* hi */hi,
	          /* lo */(lo >>> 0)
	        ];
	}

	exports.min_int       = min_int;
	exports.max_int       = max_int;
	exports.one           = one;
	exports.zero          = zero;
	exports.not           = not;
	exports.of_int32      = of_int32;
	exports.to_int32      = to_int32;
	exports.add           = add;
	exports.neg           = neg;
	exports.sub           = sub;
	exports.lsl_          = lsl_;
	exports.lsr_          = lsr_;
	exports.asr_          = asr_;
	exports.is_zero       = is_zero;
	exports.mul           = mul;
	exports.xor           = xor;
	exports.or_           = or_;
	exports.and_          = and_;
	exports.swap          = swap;
	exports.ge            = ge;
	exports.eq            = eq;
	exports.neq           = neq;
	exports.lt            = lt;
	exports.gt            = gt;
	exports.le            = le;
	exports.to_float      = to_float;
	exports.of_float      = of_float;
	exports.div           = div;
	exports.mod_          = mod_;
	exports.div_mod       = div_mod;
	exports.compare       = compare;
	exports.to_hex        = to_hex;
	exports.discard_sign  = discard_sign;
	exports.float_of_bits = float_of_bits;
	exports.bits_of_float = bits_of_float;
	exports.get64         = get64;
	/* two_ptr_32_dbl Not a pure module */


/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';


	var repeat = ( (String.prototype.repeat && function (count,self){return self.repeat(count)}) ||
	                                                  function(count , self) {
	        if (self.length == 0 || count == 0) {
	            return '';
	        }
	        // Ensuring count is a 31-bit integer allows us to heavily optimize the
	        // main part. But anyway, most current (August 2014) browsers can't handle
	        // strings 1 << 28 chars or longer, so:
	        if (self.length * count >= 1 << 28) {
	            throw new RangeError('repeat count must not overflow maximum string size');
	        }
	        var rpt = '';
	        for (;;) {
	            if ((count & 1) == 1) {
	                rpt += self;
	            }
	            count >>>= 1;
	            if (count == 0) {
	                break;
	            }
	            self += self;
	        }
	        return rpt;
	    }
	);

	exports.repeat = repeat;
	/* repeat Not a pure module */


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_builtin_exceptions = __webpack_require__(3);

	function string_of_char(prim) {
	  return String.fromCharCode(prim);
	}

	function caml_string_get(s, i) {
	  if (i >= s.length || i < 0) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "index out of bounds"
	        ];
	  } else {
	    return s.charCodeAt(i);
	  }
	}

	function caml_create_string(len) {
	  if (len < 0) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.create"
	        ];
	  } else {
	    return new Array(len);
	  }
	}

	function caml_string_compare(s1, s2) {
	  if (s1 === s2) {
	    return 0;
	  } else if (s1 < s2) {
	    return -1;
	  } else {
	    return 1;
	  }
	}

	function caml_fill_string(s, i, l, c) {
	  if (l > 0) {
	    for(var k = i ,k_finish = (l + i | 0) - 1 | 0; k <= k_finish; ++k){
	      s[k] = c;
	    }
	    return /* () */0;
	  } else {
	    return 0;
	  }
	}

	function caml_blit_string(s1, i1, s2, i2, len) {
	  if (len > 0) {
	    var off1 = s1.length - i1 | 0;
	    if (len <= off1) {
	      for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	        s2[i2 + i | 0] = s1.charCodeAt(i1 + i | 0);
	      }
	      return /* () */0;
	    } else {
	      for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){
	        s2[i2 + i$1 | 0] = s1.charCodeAt(i1 + i$1 | 0);
	      }
	      for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){
	        s2[i2 + i$2 | 0] = /* "\000" */0;
	      }
	      return /* () */0;
	    }
	  } else {
	    return 0;
	  }
	}

	function caml_blit_bytes(s1, i1, s2, i2, len) {
	  if (len > 0) {
	    if (s1 === s2) {
	      var s1$1 = s1;
	      var i1$1 = i1;
	      var i2$1 = i2;
	      var len$1 = len;
	      if (i1$1 < i2$1) {
	        var range_a = (s1$1.length - i2$1 | 0) - 1 | 0;
	        var range_b = len$1 - 1 | 0;
	        var range = range_a > range_b ? range_b : range_a;
	        for(var j = range; j >= 0; --j){
	          s1$1[i2$1 + j | 0] = s1$1[i1$1 + j | 0];
	        }
	        return /* () */0;
	      } else if (i1$1 > i2$1) {
	        var range_a$1 = (s1$1.length - i1$1 | 0) - 1 | 0;
	        var range_b$1 = len$1 - 1 | 0;
	        var range$1 = range_a$1 > range_b$1 ? range_b$1 : range_a$1;
	        for(var k = 0; k <= range$1; ++k){
	          s1$1[i2$1 + k | 0] = s1$1[i1$1 + k | 0];
	        }
	        return /* () */0;
	      } else {
	        return 0;
	      }
	    } else {
	      var off1 = s1.length - i1 | 0;
	      if (len <= off1) {
	        for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	          s2[i2 + i | 0] = s1[i1 + i | 0];
	        }
	        return /* () */0;
	      } else {
	        for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){
	          s2[i2 + i$1 | 0] = s1[i1 + i$1 | 0];
	        }
	        for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){
	          s2[i2 + i$2 | 0] = /* "\000" */0;
	        }
	        return /* () */0;
	      }
	    }
	  } else {
	    return 0;
	  }
	}

	function bytes_of_string(s) {
	  var len = s.length;
	  var res = new Array(len);
	  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	    res[i] = s.charCodeAt(i);
	  }
	  return res;
	}

	function bytes_to_string(a) {
	  var bytes = a;
	  var i = 0;
	  var len = a.length;
	  var s = "";
	  var s_len = len;
	  if (i === 0 && len <= 4096 && len === bytes.length) {
	    return String.fromCharCode.apply(null,bytes);
	  } else {
	    var offset = 0;
	    while(s_len > 0) {
	      var next = s_len < 1024 ? s_len : 1024;
	      var tmp_bytes = new Array(next);
	      caml_blit_bytes(bytes, offset, tmp_bytes, 0, next);
	      s = s + String.fromCharCode.apply(null,tmp_bytes);
	      s_len = s_len - next | 0;
	      offset = offset + next | 0;
	    };
	    return s;
	  }
	}

	function caml_string_of_char_array(chars) {
	  var len = chars.length;
	  var bytes = new Array(len);
	  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	    bytes[i] = chars[i];
	  }
	  return bytes_to_string(bytes);
	}

	function caml_is_printable(c) {
	  if (c > 31) {
	    return +(c < 127);
	  } else {
	    return /* false */0;
	  }
	}

	function caml_string_get16(s, i) {
	  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;
	}

	function caml_string_get32(s, i) {
	  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;
	}

	function get(s, i) {
	  if (i < 0 || i >= s.length) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "index out of bounds"
	        ];
	  } else {
	    return s.charCodeAt(i);
	  }
	}

	exports.bytes_of_string           = bytes_of_string;
	exports.bytes_to_string           = bytes_to_string;
	exports.caml_is_printable         = caml_is_printable;
	exports.caml_string_of_char_array = caml_string_of_char_array;
	exports.caml_string_get           = caml_string_get;
	exports.caml_string_compare       = caml_string_compare;
	exports.caml_create_string        = caml_create_string;
	exports.caml_fill_string          = caml_fill_string;
	exports.caml_blit_string          = caml_blit_string;
	exports.caml_blit_bytes           = caml_blit_bytes;
	exports.caml_string_get16         = caml_string_get16;
	exports.caml_string_get32         = caml_string_get32;
	exports.string_of_char            = string_of_char;
	exports.get                       = get;
	/* No side effect */


/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';


	var id = [0];

	function caml_set_oo_id(b) {
	  b[1] = id[0];
	  id[0] += 1;
	  return b;
	}

	function get_id() {
	  id[0] += 1;
	  return id[0];
	}

	function create(str) {
	  var v_001 = get_id(/* () */0);
	  var v = /* tuple */[
	    str,
	    v_001
	  ];
	  v.tag = 248;
	  return v;
	}

	exports.caml_set_oo_id = caml_set_oo_id;
	exports.get_id         = get_id;
	exports.create         = create;
	/* No side effect */


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Block = __webpack_require__(7);

	function erase_rel(param) {
	  if (typeof param === "number") {
	    return /* End_of_fmtty */0;
	  } else {
	    switch (param.tag | 0) {
	      case 0 : 
	          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);
	      case 1 : 
	          return /* String_ty */Block.__(1, [erase_rel(param[0])]);
	      case 2 : 
	          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);
	      case 3 : 
	          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);
	      case 4 : 
	          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);
	      case 5 : 
	          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);
	      case 6 : 
	          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);
	      case 7 : 
	          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);
	      case 8 : 
	          return /* Format_arg_ty */Block.__(8, [
	                    param[0],
	                    erase_rel(param[1])
	                  ]);
	      case 9 : 
	          var ty1 = param[0];
	          return /* Format_subst_ty */Block.__(9, [
	                    ty1,
	                    ty1,
	                    erase_rel(param[2])
	                  ]);
	      case 10 : 
	          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);
	      case 11 : 
	          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);
	      case 12 : 
	          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);
	      case 13 : 
	          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);
	      case 14 : 
	          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);
	      
	    }
	  }
	}

	function concat_fmtty(fmtty1, fmtty2) {
	  if (typeof fmtty1 === "number") {
	    return fmtty2;
	  } else {
	    switch (fmtty1.tag | 0) {
	      case 0 : 
	          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 1 : 
	          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 2 : 
	          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 3 : 
	          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 4 : 
	          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 5 : 
	          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 6 : 
	          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 7 : 
	          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 8 : 
	          return /* Format_arg_ty */Block.__(8, [
	                    fmtty1[0],
	                    concat_fmtty(fmtty1[1], fmtty2)
	                  ]);
	      case 9 : 
	          return /* Format_subst_ty */Block.__(9, [
	                    fmtty1[0],
	                    fmtty1[1],
	                    concat_fmtty(fmtty1[2], fmtty2)
	                  ]);
	      case 10 : 
	          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 11 : 
	          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 12 : 
	          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 13 : 
	          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);
	      case 14 : 
	          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);
	      
	    }
	  }
	}

	function concat_fmt(fmt1, fmt2) {
	  if (typeof fmt1 === "number") {
	    return fmt2;
	  } else {
	    switch (fmt1.tag | 0) {
	      case 0 : 
	          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);
	      case 1 : 
	          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);
	      case 2 : 
	          return /* String */Block.__(2, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 3 : 
	          return /* Caml_string */Block.__(3, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 4 : 
	          return /* Int */Block.__(4, [
	                    fmt1[0],
	                    fmt1[1],
	                    fmt1[2],
	                    concat_fmt(fmt1[3], fmt2)
	                  ]);
	      case 5 : 
	          return /* Int32 */Block.__(5, [
	                    fmt1[0],
	                    fmt1[1],
	                    fmt1[2],
	                    concat_fmt(fmt1[3], fmt2)
	                  ]);
	      case 6 : 
	          return /* Nativeint */Block.__(6, [
	                    fmt1[0],
	                    fmt1[1],
	                    fmt1[2],
	                    concat_fmt(fmt1[3], fmt2)
	                  ]);
	      case 7 : 
	          return /* Int64 */Block.__(7, [
	                    fmt1[0],
	                    fmt1[1],
	                    fmt1[2],
	                    concat_fmt(fmt1[3], fmt2)
	                  ]);
	      case 8 : 
	          return /* Float */Block.__(8, [
	                    fmt1[0],
	                    fmt1[1],
	                    fmt1[2],
	                    concat_fmt(fmt1[3], fmt2)
	                  ]);
	      case 9 : 
	          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);
	      case 10 : 
	          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);
	      case 11 : 
	          return /* String_literal */Block.__(11, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 12 : 
	          return /* Char_literal */Block.__(12, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 13 : 
	          return /* Format_arg */Block.__(13, [
	                    fmt1[0],
	                    fmt1[1],
	                    concat_fmt(fmt1[2], fmt2)
	                  ]);
	      case 14 : 
	          return /* Format_subst */Block.__(14, [
	                    fmt1[0],
	                    fmt1[1],
	                    concat_fmt(fmt1[2], fmt2)
	                  ]);
	      case 15 : 
	          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);
	      case 16 : 
	          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);
	      case 17 : 
	          return /* Formatting_lit */Block.__(17, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 18 : 
	          return /* Formatting_gen */Block.__(18, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 19 : 
	          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);
	      case 20 : 
	          return /* Scan_char_set */Block.__(20, [
	                    fmt1[0],
	                    fmt1[1],
	                    concat_fmt(fmt1[2], fmt2)
	                  ]);
	      case 21 : 
	          return /* Scan_get_counter */Block.__(21, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 22 : 
	          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);
	      case 23 : 
	          return /* Ignored_param */Block.__(23, [
	                    fmt1[0],
	                    concat_fmt(fmt1[1], fmt2)
	                  ]);
	      case 24 : 
	          return /* Custom */Block.__(24, [
	                    fmt1[0],
	                    fmt1[1],
	                    concat_fmt(fmt1[2], fmt2)
	                  ]);
	      
	    }
	  }
	}

	exports.concat_fmtty = concat_fmtty;
	exports.erase_rel    = erase_rel;
	exports.concat_fmt   = concat_fmt;
	/* No side effect */


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Char                    = __webpack_require__(19);
	var $$String                = __webpack_require__(20);
	var Caml_md5                = __webpack_require__(22);
	var Pervasives              = __webpack_require__(8);
	var Caml_string             = __webpack_require__(15);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function string(str) {
	  return Caml_md5.caml_md5_string(str, 0, str.length);
	}

	function bytes(b) {
	  return string(Caml_string.bytes_to_string(b));
	}

	function substring(str, ofs, len) {
	  if (ofs < 0 || len < 0 || ofs > (str.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Digest.substring"
	        ];
	  } else {
	    return Caml_md5.caml_md5_string(str, ofs, len);
	  }
	}

	function subbytes(b, ofs, len) {
	  return substring(Caml_string.bytes_to_string(b), ofs, len);
	}

	function file(filename) {
	  Pervasives.open_in_bin(filename);
	  var exit = 0;
	  var d;
	  try {
	    d = function () {
	        throw "caml_md5_chan not implemented by bucklescript yet\n";
	      }();
	    exit = 1;
	  }
	  catch (e){
	    (function () {
	          throw "caml_ml_close_channel not implemented by bucklescript yet\n";
	        }());
	    throw e;
	  }
	  if (exit === 1) {
	    (function () {
	          throw "caml_ml_close_channel not implemented by bucklescript yet\n";
	        }());
	    return d;
	  }
	  
	}

	var output = Pervasives.output_string;

	function input(chan) {
	  return Pervasives.really_input_string(chan, 16);
	}

	function char_hex(n) {
	  return n + (
	          n < 10 ? /* "0" */48 : 87
	        ) | 0;
	}

	function to_hex(d) {
	  var result = new Array(32);
	  for(var i = 0; i <= 15; ++i){
	    var x = Caml_string.get(d, i);
	    result[(i << 1)] = char_hex((x >>> 4));
	    result[(i << 1) + 1 | 0] = char_hex(x & 15);
	  }
	  return Caml_string.bytes_to_string(result);
	}

	function from_hex(s) {
	  if (s.length !== 32) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Digest.from_hex"
	        ];
	  }
	  var digit = function (c) {
	    if (c >= 65) {
	      if (c >= 97) {
	        if (c >= 103) {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "Digest.from_hex"
	              ];
	        } else {
	          return (c - /* "a" */97 | 0) + 10 | 0;
	        }
	      } else if (c >= 71) {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "Digest.from_hex"
	            ];
	      } else {
	        return (c - /* "A" */65 | 0) + 10 | 0;
	      }
	    } else if (c > 57 || c < 48) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "Digest.from_hex"
	          ];
	    } else {
	      return c - /* "0" */48 | 0;
	    }
	  };
	  var $$byte = function (i) {
	    return (digit(Caml_string.get(s, i)) << 4) + digit(Caml_string.get(s, i + 1 | 0)) | 0;
	  };
	  var result = new Array(16);
	  for(var i = 0; i <= 15; ++i){
	    result[i] = Char.chr($$byte((i << 1)));
	  }
	  return Caml_string.bytes_to_string(result);
	}

	var compare = $$String.compare;

	exports.compare   = compare;
	exports.string    = string;
	exports.bytes     = bytes;
	exports.substring = substring;
	exports.subbytes  = subbytes;
	exports.file      = file;
	exports.output    = output;
	exports.input     = input;
	exports.to_hex    = to_hex;
	exports.from_hex  = from_hex;
	/* No side effect */


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_string             = __webpack_require__(15);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function chr(n) {
	  if (n < 0 || n > 255) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Char.chr"
	        ];
	  } else {
	    return n;
	  }
	}

	function escaped(c) {
	  var exit = 0;
	  if (c >= 40) {
	    if (c !== 92) {
	      exit = c >= 127 ? 1 : 2;
	    } else {
	      return "\\\\";
	    }
	  } else if (c >= 32) {
	    if (c >= 39) {
	      return "\\'";
	    } else {
	      exit = 2;
	    }
	  } else if (c >= 14) {
	    exit = 1;
	  } else {
	    switch (c) {
	      case 8 : 
	          return "\\b";
	      case 9 : 
	          return "\\t";
	      case 10 : 
	          return "\\n";
	      case 0 : 
	      case 1 : 
	      case 2 : 
	      case 3 : 
	      case 4 : 
	      case 5 : 
	      case 6 : 
	      case 7 : 
	      case 11 : 
	      case 12 : 
	          exit = 1;
	          break;
	      case 13 : 
	          return "\\r";
	      
	    }
	  }
	  switch (exit) {
	    case 1 : 
	        var s = new Array(4);
	        s[0] = /* "\\" */92;
	        s[1] = 48 + (c / 100 | 0) | 0;
	        s[2] = 48 + (c / 10 | 0) % 10 | 0;
	        s[3] = 48 + c % 10 | 0;
	        return Caml_string.bytes_to_string(s);
	    case 2 : 
	        var s$1 = new Array(1);
	        s$1[0] = c;
	        return Caml_string.bytes_to_string(s$1);
	    
	  }
	}

	function lowercase(c) {
	  if (c >= /* "A" */65 && c <= /* "Z" */90 || c >= /* "\192" */192 && c <= /* "\214" */214 || c >= /* "\216" */216 && c <= /* "\222" */222) {
	    return c + 32 | 0;
	  } else {
	    return c;
	  }
	}

	function uppercase(c) {
	  if (c >= /* "a" */97 && c <= /* "z" */122 || c >= /* "\224" */224 && c <= /* "\246" */246 || c >= /* "\248" */248 && c <= /* "\254" */254) {
	    return c - 32 | 0;
	  } else {
	    return c;
	  }
	}

	function compare(c1, c2) {
	  return c1 - c2 | 0;
	}

	exports.chr       = chr;
	exports.escaped   = escaped;
	exports.lowercase = lowercase;
	exports.uppercase = uppercase;
	exports.compare   = compare;
	/* No side effect */


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var List        = __webpack_require__(5);
	var Bytes       = __webpack_require__(21);
	var Caml_int32  = __webpack_require__(12);
	var Caml_string = __webpack_require__(15);

	function make(n, c) {
	  return Caml_string.bytes_to_string(Bytes.make(n, c));
	}

	function init(n, f) {
	  return Caml_string.bytes_to_string(Bytes.init(n, f));
	}

	function copy(s) {
	  return Caml_string.bytes_to_string(Bytes.copy(Caml_string.bytes_of_string(s)));
	}

	function sub(s, ofs, len) {
	  return Caml_string.bytes_to_string(Bytes.sub(Caml_string.bytes_of_string(s), ofs, len));
	}

	function concat(sep, l) {
	  if (l) {
	    var hd = l[0];
	    var num = [0];
	    var len = [0];
	    List.iter(function (s) {
	          num[0] = num[0] + 1 | 0;
	          len[0] = len[0] + s.length | 0;
	          return /* () */0;
	        }, l);
	    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);
	    Caml_string.caml_blit_string(hd, 0, r, 0, hd.length);
	    var pos = [hd.length];
	    List.iter(function (s) {
	          Caml_string.caml_blit_string(sep, 0, r, pos[0], sep.length);
	          pos[0] = pos[0] + sep.length | 0;
	          Caml_string.caml_blit_string(s, 0, r, pos[0], s.length);
	          pos[0] = pos[0] + s.length | 0;
	          return /* () */0;
	        }, l[1]);
	    return Caml_string.bytes_to_string(r);
	  } else {
	    return "";
	  }
	}

	function iter(f, s) {
	  return Bytes.iter(f, Caml_string.bytes_of_string(s));
	}

	function iteri(f, s) {
	  return Bytes.iteri(f, Caml_string.bytes_of_string(s));
	}

	function map(f, s) {
	  return Caml_string.bytes_to_string(Bytes.map(f, Caml_string.bytes_of_string(s)));
	}

	function mapi(f, s) {
	  return Caml_string.bytes_to_string(Bytes.mapi(f, Caml_string.bytes_of_string(s)));
	}

	function is_space(param) {
	  var switcher = param - 9 | 0;
	  if (switcher > 4 || switcher < 0) {
	    if (switcher !== 23) {
	      return /* false */0;
	    } else {
	      return /* true */1;
	    }
	  } else if (switcher !== 2) {
	    return /* true */1;
	  } else {
	    return /* false */0;
	  }
	}

	function trim(s) {
	  if (s === "" || !(is_space(s.charCodeAt(0)) || is_space(s.charCodeAt(s.length - 1 | 0)))) {
	    return s;
	  } else {
	    return Caml_string.bytes_to_string(Bytes.trim(Caml_string.bytes_of_string(s)));
	  }
	}

	function escaped(s) {
	  var needs_escape = function (_i) {
	    while(true) {
	      var i = _i;
	      if (i >= s.length) {
	        return /* false */0;
	      } else {
	        var match = s.charCodeAt(i);
	        if (match >= 32) {
	          var switcher = match - 34 | 0;
	          if (switcher > 58 || switcher < 0) {
	            if (switcher >= 93) {
	              return /* true */1;
	            } else {
	              _i = i + 1 | 0;
	              continue ;
	              
	            }
	          } else if (switcher > 57 || switcher < 1) {
	            return /* true */1;
	          } else {
	            _i = i + 1 | 0;
	            continue ;
	            
	          }
	        } else {
	          return /* true */1;
	        }
	      }
	    };
	  };
	  if (needs_escape(0)) {
	    return Caml_string.bytes_to_string(Bytes.escaped(Caml_string.bytes_of_string(s)));
	  } else {
	    return s;
	  }
	}

	function index(s, c) {
	  return Bytes.index(Caml_string.bytes_of_string(s), c);
	}

	function rindex(s, c) {
	  return Bytes.rindex(Caml_string.bytes_of_string(s), c);
	}

	function index_from(s, i, c) {
	  return Bytes.index_from(Caml_string.bytes_of_string(s), i, c);
	}

	function rindex_from(s, i, c) {
	  return Bytes.rindex_from(Caml_string.bytes_of_string(s), i, c);
	}

	function contains(s, c) {
	  return Bytes.contains(Caml_string.bytes_of_string(s), c);
	}

	function contains_from(s, i, c) {
	  return Bytes.contains_from(Caml_string.bytes_of_string(s), i, c);
	}

	function rcontains_from(s, i, c) {
	  return Bytes.rcontains_from(Caml_string.bytes_of_string(s), i, c);
	}

	function uppercase(s) {
	  return Caml_string.bytes_to_string(Bytes.uppercase(Caml_string.bytes_of_string(s)));
	}

	function lowercase(s) {
	  return Caml_string.bytes_to_string(Bytes.lowercase(Caml_string.bytes_of_string(s)));
	}

	function capitalize(s) {
	  return Caml_string.bytes_to_string(Bytes.capitalize(Caml_string.bytes_of_string(s)));
	}

	function uncapitalize(s) {
	  return Caml_string.bytes_to_string(Bytes.uncapitalize(Caml_string.bytes_of_string(s)));
	}

	var compare = Caml_string.caml_string_compare;

	var fill = Bytes.fill;

	var blit = Bytes.blit_string;

	exports.make           = make;
	exports.init           = init;
	exports.copy           = copy;
	exports.sub            = sub;
	exports.fill           = fill;
	exports.blit           = blit;
	exports.concat         = concat;
	exports.iter           = iter;
	exports.iteri          = iteri;
	exports.map            = map;
	exports.mapi           = mapi;
	exports.trim           = trim;
	exports.escaped        = escaped;
	exports.index          = index;
	exports.rindex         = rindex;
	exports.index_from     = index_from;
	exports.rindex_from    = rindex_from;
	exports.contains       = contains;
	exports.contains_from  = contains_from;
	exports.rcontains_from = rcontains_from;
	exports.uppercase      = uppercase;
	exports.lowercase      = lowercase;
	exports.capitalize     = capitalize;
	exports.uncapitalize   = uncapitalize;
	exports.compare        = compare;
	/* No side effect */


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Char                    = __webpack_require__(19);
	var List                    = __webpack_require__(5);
	var Curry                   = __webpack_require__(1);
	var Caml_obj                = __webpack_require__(6);
	var Caml_int32              = __webpack_require__(12);
	var Pervasives              = __webpack_require__(8);
	var Caml_string             = __webpack_require__(15);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function make(n, c) {
	  var s = Caml_string.caml_create_string(n);
	  Caml_string.caml_fill_string(s, 0, n, c);
	  return s;
	}

	function init(n, f) {
	  var s = Caml_string.caml_create_string(n);
	  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){
	    s[i] = Curry._1(f, i);
	  }
	  return s;
	}

	var empty = [];

	function copy(s) {
	  var len = s.length;
	  var r = Caml_string.caml_create_string(len);
	  Caml_string.caml_blit_bytes(s, 0, r, 0, len);
	  return r;
	}

	function to_string(b) {
	  return Caml_string.bytes_to_string(copy(b));
	}

	function of_string(s) {
	  return copy(Caml_string.bytes_of_string(s));
	}

	function sub(s, ofs, len) {
	  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.sub / Bytes.sub"
	        ];
	  } else {
	    var r = Caml_string.caml_create_string(len);
	    Caml_string.caml_blit_bytes(s, ofs, r, 0, len);
	    return r;
	  }
	}

	function sub_string(b, ofs, len) {
	  return Caml_string.bytes_to_string(sub(b, ofs, len));
	}

	function extend(s, left, right) {
	  var len = (s.length + left | 0) + right | 0;
	  var r = Caml_string.caml_create_string(len);
	  var match = left < 0 ? /* tuple */[
	      -left | 0,
	      0
	    ] : /* tuple */[
	      0,
	      left
	    ];
	  var dstoff = match[1];
	  var srcoff = match[0];
	  var cpylen = Pervasives.min(s.length - srcoff | 0, len - dstoff | 0);
	  if (cpylen > 0) {
	    Caml_string.caml_blit_bytes(s, srcoff, r, dstoff, cpylen);
	  }
	  return r;
	}

	function fill(s, ofs, len, c) {
	  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.fill / Bytes.fill"
	        ];
	  } else {
	    return Caml_string.caml_fill_string(s, ofs, len, c);
	  }
	}

	function blit(s1, ofs1, s2, ofs2, len) {
	  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Bytes.blit"
	        ];
	  } else {
	    return Caml_string.caml_blit_bytes(s1, ofs1, s2, ofs2, len);
	  }
	}

	function blit_string(s1, ofs1, s2, ofs2, len) {
	  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.blit / Bytes.blit_string"
	        ];
	  } else {
	    return Caml_string.caml_blit_string(s1, ofs1, s2, ofs2, len);
	  }
	}

	function iter(f, a) {
	  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
	    Curry._1(f, a[i]);
	  }
	  return /* () */0;
	}

	function iteri(f, a) {
	  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
	    Curry._2(f, i, a[i]);
	  }
	  return /* () */0;
	}

	function concat(sep, l) {
	  if (l) {
	    var hd = l[0];
	    var num = [0];
	    var len = [0];
	    List.iter(function (s) {
	          num[0] = num[0] + 1 | 0;
	          len[0] = len[0] + s.length | 0;
	          return /* () */0;
	        }, l);
	    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);
	    Caml_string.caml_blit_bytes(hd, 0, r, 0, hd.length);
	    var pos = [hd.length];
	    List.iter(function (s) {
	          Caml_string.caml_blit_bytes(sep, 0, r, pos[0], sep.length);
	          pos[0] = pos[0] + sep.length | 0;
	          Caml_string.caml_blit_bytes(s, 0, r, pos[0], s.length);
	          pos[0] = pos[0] + s.length | 0;
	          return /* () */0;
	        }, l[1]);
	    return r;
	  } else {
	    return empty;
	  }
	}

	function cat(a, b) {
	  return a.concat(b);
	}

	function is_space(param) {
	  var switcher = param - 9 | 0;
	  if (switcher > 4 || switcher < 0) {
	    if (switcher !== 23) {
	      return /* false */0;
	    } else {
	      return /* true */1;
	    }
	  } else if (switcher !== 2) {
	    return /* true */1;
	  } else {
	    return /* false */0;
	  }
	}

	function trim(s) {
	  var len = s.length;
	  var i = 0;
	  while(i < len && is_space(s[i])) {
	    i = i + 1 | 0;
	  };
	  var j = len - 1 | 0;
	  while(j >= i && is_space(s[j])) {
	    j = j - 1 | 0;
	  };
	  if (j >= i) {
	    return sub(s, i, (j - i | 0) + 1 | 0);
	  } else {
	    return empty;
	  }
	}

	function escaped(s) {
	  var n = 0;
	  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){
	    var match = s[i];
	    var $js;
	    if (match >= 32) {
	      var switcher = match - 34 | 0;
	      $js = switcher > 58 || switcher < 0 ? (
	          switcher >= 93 ? 4 : 1
	        ) : (
	          switcher > 57 || switcher < 1 ? 2 : 1
	        );
	    } else {
	      $js = match >= 11 ? (
	          match !== 13 ? 4 : 2
	        ) : (
	          match >= 8 ? 2 : 4
	        );
	    }
	    n = n + $js | 0;
	  }
	  if (n === s.length) {
	    return copy(s);
	  } else {
	    var s$prime = Caml_string.caml_create_string(n);
	    n = 0;
	    for(var i$1 = 0 ,i_finish$1 = s.length - 1 | 0; i$1 <= i_finish$1; ++i$1){
	      var c = s[i$1];
	      var exit = 0;
	      if (c >= 35) {
	        if (c !== 92) {
	          if (c >= 127) {
	            exit = 1;
	          } else {
	            s$prime[n] = c;
	          }
	        } else {
	          exit = 2;
	        }
	      } else if (c >= 32) {
	        if (c >= 34) {
	          exit = 2;
	        } else {
	          s$prime[n] = c;
	        }
	      } else if (c >= 14) {
	        exit = 1;
	      } else {
	        switch (c) {
	          case 8 : 
	              s$prime[n] = /* "\\" */92;
	              n = n + 1 | 0;
	              s$prime[n] = /* "b" */98;
	              break;
	          case 9 : 
	              s$prime[n] = /* "\\" */92;
	              n = n + 1 | 0;
	              s$prime[n] = /* "t" */116;
	              break;
	          case 10 : 
	              s$prime[n] = /* "\\" */92;
	              n = n + 1 | 0;
	              s$prime[n] = /* "n" */110;
	              break;
	          case 0 : 
	          case 1 : 
	          case 2 : 
	          case 3 : 
	          case 4 : 
	          case 5 : 
	          case 6 : 
	          case 7 : 
	          case 11 : 
	          case 12 : 
	              exit = 1;
	              break;
	          case 13 : 
	              s$prime[n] = /* "\\" */92;
	              n = n + 1 | 0;
	              s$prime[n] = /* "r" */114;
	              break;
	          
	        }
	      }
	      switch (exit) {
	        case 1 : 
	            s$prime[n] = /* "\\" */92;
	            n = n + 1 | 0;
	            s$prime[n] = 48 + (c / 100 | 0) | 0;
	            n = n + 1 | 0;
	            s$prime[n] = 48 + (c / 10 | 0) % 10 | 0;
	            n = n + 1 | 0;
	            s$prime[n] = 48 + c % 10 | 0;
	            break;
	        case 2 : 
	            s$prime[n] = /* "\\" */92;
	            n = n + 1 | 0;
	            s$prime[n] = c;
	            break;
	        
	      }
	      n = n + 1 | 0;
	    }
	    return s$prime;
	  }
	}

	function map(f, s) {
	  var l = s.length;
	  if (l) {
	    var r = Caml_string.caml_create_string(l);
	    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
	      r[i] = Curry._1(f, s[i]);
	    }
	    return r;
	  } else {
	    return s;
	  }
	}

	function mapi(f, s) {
	  var l = s.length;
	  if (l) {
	    var r = Caml_string.caml_create_string(l);
	    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
	      r[i] = Curry._2(f, i, s[i]);
	    }
	    return r;
	  } else {
	    return s;
	  }
	}

	function uppercase(s) {
	  return map(Char.uppercase, s);
	}

	function lowercase(s) {
	  return map(Char.lowercase, s);
	}

	function apply1(f, s) {
	  if (s.length) {
	    var r = copy(s);
	    r[0] = Curry._1(f, s[0]);
	    return r;
	  } else {
	    return s;
	  }
	}

	function capitalize(s) {
	  return apply1(Char.uppercase, s);
	}

	function uncapitalize(s) {
	  return apply1(Char.lowercase, s);
	}

	function index_rec(s, lim, _i, c) {
	  while(true) {
	    var i = _i;
	    if (i >= lim) {
	      throw Caml_builtin_exceptions.not_found;
	    } else if (s[i] === c) {
	      return i;
	    } else {
	      _i = i + 1 | 0;
	      continue ;
	      
	    }
	  };
	}

	function index(s, c) {
	  return index_rec(s, s.length, 0, c);
	}

	function index_from(s, i, c) {
	  var l = s.length;
	  if (i < 0 || i > l) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.index_from / Bytes.index_from"
	        ];
	  } else {
	    return index_rec(s, l, i, c);
	  }
	}

	function rindex_rec(s, _i, c) {
	  while(true) {
	    var i = _i;
	    if (i < 0) {
	      throw Caml_builtin_exceptions.not_found;
	    } else if (s[i] === c) {
	      return i;
	    } else {
	      _i = i - 1 | 0;
	      continue ;
	      
	    }
	  };
	}

	function rindex(s, c) {
	  return rindex_rec(s, s.length - 1 | 0, c);
	}

	function rindex_from(s, i, c) {
	  if (i < -1 || i >= s.length) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.rindex_from / Bytes.rindex_from"
	        ];
	  } else {
	    return rindex_rec(s, i, c);
	  }
	}

	function contains_from(s, i, c) {
	  var l = s.length;
	  if (i < 0 || i > l) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.contains_from / Bytes.contains_from"
	        ];
	  } else {
	    try {
	      index_rec(s, l, i, c);
	      return /* true */1;
	    }
	    catch (exn){
	      if (exn === Caml_builtin_exceptions.not_found) {
	        return /* false */0;
	      } else {
	        throw exn;
	      }
	    }
	  }
	}

	function contains(s, c) {
	  return contains_from(s, 0, c);
	}

	function rcontains_from(s, i, c) {
	  if (i < 0 || i >= s.length) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "String.rcontains_from / Bytes.rcontains_from"
	        ];
	  } else {
	    try {
	      rindex_rec(s, i, c);
	      return /* true */1;
	    }
	    catch (exn){
	      if (exn === Caml_builtin_exceptions.not_found) {
	        return /* false */0;
	      } else {
	        throw exn;
	      }
	    }
	  }
	}

	var compare = Caml_obj.caml_compare;

	var unsafe_to_string = Caml_string.bytes_to_string;

	var unsafe_of_string = Caml_string.bytes_of_string;

	exports.make             = make;
	exports.init             = init;
	exports.empty            = empty;
	exports.copy             = copy;
	exports.of_string        = of_string;
	exports.to_string        = to_string;
	exports.sub              = sub;
	exports.sub_string       = sub_string;
	exports.extend           = extend;
	exports.fill             = fill;
	exports.blit             = blit;
	exports.blit_string      = blit_string;
	exports.concat           = concat;
	exports.cat              = cat;
	exports.iter             = iter;
	exports.iteri            = iteri;
	exports.map              = map;
	exports.mapi             = mapi;
	exports.trim             = trim;
	exports.escaped          = escaped;
	exports.index            = index;
	exports.rindex           = rindex;
	exports.index_from       = index_from;
	exports.rindex_from      = rindex_from;
	exports.contains         = contains;
	exports.contains_from    = contains_from;
	exports.rcontains_from   = rcontains_from;
	exports.uppercase        = uppercase;
	exports.lowercase        = lowercase;
	exports.capitalize       = capitalize;
	exports.uncapitalize     = uncapitalize;
	exports.compare          = compare;
	exports.unsafe_to_string = unsafe_to_string;
	exports.unsafe_of_string = unsafe_of_string;
	/* No side effect */


/***/ },
/* 22 */
/***/ function(module, exports) {

	'use strict';


	function cmn(q, a, b, x, s, t) {
	  var a$1 = ((a + q | 0) + x | 0) + t | 0;
	  return ((a$1 << s) | (a$1 >>> (32 - s | 0)) | 0) + b | 0;
	}

	function f(a, b, c, d, x, s, t) {
	  return cmn(b & c | (b ^ -1) & d, a, b, x, s, t);
	}

	function g(a, b, c, d, x, s, t) {
	  return cmn(b & d | c & (d ^ -1), a, b, x, s, t);
	}

	function h(a, b, c, d, x, s, t) {
	  return cmn(b ^ c ^ d, a, b, x, s, t);
	}

	function i(a, b, c, d, x, s, t) {
	  return cmn(c ^ (b | d ^ -1), a, b, x, s, t);
	}

	function cycle(x, k) {
	  var a = x[0];
	  var b = x[1];
	  var c = x[2];
	  var d = x[3];
	  a = f(a, b, c, d, k[0], 7, -680876936);
	  d = f(d, a, b, c, k[1], 12, -389564586);
	  c = f(c, d, a, b, k[2], 17, 606105819);
	  b = f(b, c, d, a, k[3], 22, -1044525330);
	  a = f(a, b, c, d, k[4], 7, -176418897);
	  d = f(d, a, b, c, k[5], 12, 1200080426);
	  c = f(c, d, a, b, k[6], 17, -1473231341);
	  b = f(b, c, d, a, k[7], 22, -45705983);
	  a = f(a, b, c, d, k[8], 7, 1770035416);
	  d = f(d, a, b, c, k[9], 12, -1958414417);
	  c = f(c, d, a, b, k[10], 17, -42063);
	  b = f(b, c, d, a, k[11], 22, -1990404162);
	  a = f(a, b, c, d, k[12], 7, 1804603682);
	  d = f(d, a, b, c, k[13], 12, -40341101);
	  c = f(c, d, a, b, k[14], 17, -1502002290);
	  b = f(b, c, d, a, k[15], 22, 1236535329);
	  a = g(a, b, c, d, k[1], 5, -165796510);
	  d = g(d, a, b, c, k[6], 9, -1069501632);
	  c = g(c, d, a, b, k[11], 14, 643717713);
	  b = g(b, c, d, a, k[0], 20, -373897302);
	  a = g(a, b, c, d, k[5], 5, -701558691);
	  d = g(d, a, b, c, k[10], 9, 38016083);
	  c = g(c, d, a, b, k[15], 14, -660478335);
	  b = g(b, c, d, a, k[4], 20, -405537848);
	  a = g(a, b, c, d, k[9], 5, 568446438);
	  d = g(d, a, b, c, k[14], 9, -1019803690);
	  c = g(c, d, a, b, k[3], 14, -187363961);
	  b = g(b, c, d, a, k[8], 20, 1163531501);
	  a = g(a, b, c, d, k[13], 5, -1444681467);
	  d = g(d, a, b, c, k[2], 9, -51403784);
	  c = g(c, d, a, b, k[7], 14, 1735328473);
	  b = g(b, c, d, a, k[12], 20, -1926607734);
	  a = h(a, b, c, d, k[5], 4, -378558);
	  d = h(d, a, b, c, k[8], 11, -2022574463);
	  c = h(c, d, a, b, k[11], 16, 1839030562);
	  b = h(b, c, d, a, k[14], 23, -35309556);
	  a = h(a, b, c, d, k[1], 4, -1530992060);
	  d = h(d, a, b, c, k[4], 11, 1272893353);
	  c = h(c, d, a, b, k[7], 16, -155497632);
	  b = h(b, c, d, a, k[10], 23, -1094730640);
	  a = h(a, b, c, d, k[13], 4, 681279174);
	  d = h(d, a, b, c, k[0], 11, -358537222);
	  c = h(c, d, a, b, k[3], 16, -722521979);
	  b = h(b, c, d, a, k[6], 23, 76029189);
	  a = h(a, b, c, d, k[9], 4, -640364487);
	  d = h(d, a, b, c, k[12], 11, -421815835);
	  c = h(c, d, a, b, k[15], 16, 530742520);
	  b = h(b, c, d, a, k[2], 23, -995338651);
	  a = i(a, b, c, d, k[0], 6, -198630844);
	  d = i(d, a, b, c, k[7], 10, 1126891415);
	  c = i(c, d, a, b, k[14], 15, -1416354905);
	  b = i(b, c, d, a, k[5], 21, -57434055);
	  a = i(a, b, c, d, k[12], 6, 1700485571);
	  d = i(d, a, b, c, k[3], 10, -1894986606);
	  c = i(c, d, a, b, k[10], 15, -1051523);
	  b = i(b, c, d, a, k[1], 21, -2054922799);
	  a = i(a, b, c, d, k[8], 6, 1873313359);
	  d = i(d, a, b, c, k[15], 10, -30611744);
	  c = i(c, d, a, b, k[6], 15, -1560198380);
	  b = i(b, c, d, a, k[13], 21, 1309151649);
	  a = i(a, b, c, d, k[4], 6, -145523070);
	  d = i(d, a, b, c, k[11], 10, -1120210379);
	  c = i(c, d, a, b, k[2], 15, 718787259);
	  b = i(b, c, d, a, k[9], 21, -343485551);
	  x[0] = a + x[0] | 0;
	  x[1] = b + x[1] | 0;
	  x[2] = c + x[2] | 0;
	  x[3] = d + x[3] | 0;
	  return /* () */0;
	}

	var state = /* array */[
	  1732584193,
	  -271733879,
	  -1732584194,
	  271733878
	];

	var md5blk = /* array */[
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0,
	  0
	];

	function caml_md5_string(s, start, len) {
	  var s$1 = s.slice(start, len);
	  var n = s$1.length;
	  state[0] = 1732584193;
	  state[1] = -271733879;
	  state[2] = -1732584194;
	  state[3] = 271733878;
	  for(var i = 0; i <= 15; ++i){
	    md5blk[i] = 0;
	  }
	  var i_end = n / 64 | 0;
	  for(var i$1 = 1; i$1 <= i_end; ++i$1){
	    for(var j = 0; j <= 15; ++j){
	      var k = ((i$1 << 6) - 64 | 0) + (j << 2) | 0;
	      md5blk[j] = ((s$1.charCodeAt(k) + (s$1.charCodeAt(k + 1 | 0) << 8) | 0) + (s$1.charCodeAt(k + 2 | 0) << 16) | 0) + (s$1.charCodeAt(k + 3 | 0) << 24) | 0;
	    }
	    cycle(state, md5blk);
	  }
	  var s_tail = s$1.slice((i_end << 6));
	  for(var kk = 0; kk <= 15; ++kk){
	    md5blk[kk] = 0;
	  }
	  var i_end$1 = s_tail.length - 1 | 0;
	  for(var i$2 = 0; i$2 <= i_end$1; ++i$2){
	    md5blk[i$2 / 4 | 0] = md5blk[i$2 / 4 | 0] | (s_tail.charCodeAt(i$2) << (i$2 % 4 << 3));
	  }
	  var i$3 = i_end$1 + 1 | 0;
	  md5blk[i$3 / 4 | 0] = md5blk[i$3 / 4 | 0] | (128 << (i$3 % 4 << 3));
	  if (i$3 > 55) {
	    cycle(state, md5blk);
	    for(var i$4 = 0; i$4 <= 15; ++i$4){
	      md5blk[i$4] = 0;
	    }
	  }
	  md5blk[14] = (n << 3);
	  cycle(state, md5blk);
	  return String.fromCharCode(state[0] & 255, (state[0] >> 8) & 255, (state[0] >> 16) & 255, (state[0] >> 24) & 255, state[1] & 255, (state[1] >> 8) & 255, (state[1] >> 16) & 255, (state[1] >> 24) & 255, state[2] & 255, (state[2] >> 8) & 255, (state[2] >> 16) & 255, (state[2] >> 24) & 255, state[3] & 255, (state[3] >> 8) & 255, (state[3] >> 16) & 255, (state[3] >> 24) & 255);
	}

	exports.caml_md5_string = caml_md5_string;
	/* No side effect */


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var $$Array                 = __webpack_require__(24);
	var Curry                   = __webpack_require__(1);
	var Int32                   = __webpack_require__(25);
	var Int64                   = __webpack_require__(26);
	var Digest                  = __webpack_require__(18);
	var Caml_sys                = __webpack_require__(27);
	var Nativeint               = __webpack_require__(28);
	var Caml_array              = __webpack_require__(2);
	var Caml_int64              = __webpack_require__(13);
	var Pervasives              = __webpack_require__(8);
	var Caml_string             = __webpack_require__(15);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function assign(st1, st2) {
	  $$Array.blit(st2[/* st */0], 0, st1[/* st */0], 0, 55);
	  st1[/* idx */1] = st2[/* idx */1];
	  return /* () */0;
	}

	function full_init(s, seed) {
	  var combine = function (accu, x) {
	    return Digest.string(accu + x);
	  };
	  var extract = function (d) {
	    return ((Caml_string.get(d, 0) + (Caml_string.get(d, 1) << 8) | 0) + (Caml_string.get(d, 2) << 16) | 0) + (Caml_string.get(d, 3) << 24) | 0;
	  };
	  var seed$1 = seed.length ? seed : /* int array */[0];
	  var l = seed$1.length;
	  for(var i = 0; i <= 54; ++i){
	    Caml_array.caml_array_set(s[/* st */0], i, i);
	  }
	  var accu = "x";
	  for(var i$1 = 0 ,i_finish = 54 + Pervasives.max(55, l) | 0; i$1 <= i_finish; ++i$1){
	    var j = i$1 % 55;
	    var k = i$1 % l;
	    accu = combine(accu, Caml_array.caml_array_get(seed$1, k));
	    Caml_array.caml_array_set(s[/* st */0], j, (Caml_array.caml_array_get(s[/* st */0], j) ^ extract(accu)) & 1073741823);
	  }
	  s[/* idx */1] = 0;
	  return /* () */0;
	}

	function make(seed) {
	  var result = /* record */[
	    /* st */Caml_array.caml_make_vect(55, 0),
	    /* idx */0
	  ];
	  full_init(result, seed);
	  return result;
	}

	function make_self_init() {
	  return make(Caml_sys.caml_sys_random_seed(/* () */0));
	}

	function copy(s) {
	  var result = /* record */[
	    /* st */Caml_array.caml_make_vect(55, 0),
	    /* idx */0
	  ];
	  assign(result, s);
	  return result;
	}

	function bits(s) {
	  s[/* idx */1] = (s[/* idx */1] + 1 | 0) % 55;
	  var curval = Caml_array.caml_array_get(s[/* st */0], s[/* idx */1]);
	  var newval = Caml_array.caml_array_get(s[/* st */0], (s[/* idx */1] + 24 | 0) % 55) + (curval ^ (curval >>> 25) & 31) | 0;
	  var newval30 = newval & 1073741823;
	  Caml_array.caml_array_set(s[/* st */0], s[/* idx */1], newval30);
	  return newval30;
	}

	function $$int(s, bound) {
	  if (bound > 1073741823 || bound <= 0) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Random.int"
	        ];
	  } else {
	    var s$1 = s;
	    var n = bound;
	    while(true) {
	      var r = bits(s$1);
	      var v = r % n;
	      if ((r - v | 0) > ((1073741823 - n | 0) + 1 | 0)) {
	        continue ;
	        
	      } else {
	        return v;
	      }
	    };
	  }
	}

	function int32(s, bound) {
	  if (bound <= 0) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Random.int32"
	        ];
	  } else {
	    var s$1 = s;
	    var n = bound;
	    while(true) {
	      var b1 = bits(s$1);
	      var b2 = ((bits(s$1) & 1) << 30);
	      var r = b1 | b2;
	      var v = r % n;
	      if ((r - v | 0) > ((Int32.max_int - n | 0) + 1 | 0)) {
	        continue ;
	        
	      } else {
	        return v;
	      }
	    };
	  }
	}

	function int64(s, bound) {
	  if (Caml_int64.le(bound, /* int64 */[
	          /* hi */0,
	          /* lo */0
	        ])) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Random.int64"
	        ];
	  } else {
	    var s$1 = s;
	    var n = bound;
	    while(true) {
	      var b1 = Caml_int64.of_int32(bits(s$1));
	      var b2 = Caml_int64.lsl_(Caml_int64.of_int32(bits(s$1)), 30);
	      var b3 = Caml_int64.lsl_(Caml_int64.of_int32(bits(s$1) & 7), 60);
	      var r = Caml_int64.or_(b1, /* int64 */[
	            /* hi */b2[0] | b3[0],
	            /* lo */((b2[1] | b3[1]) >>> 0)
	          ]);
	      var v = Caml_int64.mod_(r, n);
	      if (Caml_int64.gt(Caml_int64.sub(r, v), Caml_int64.add(Caml_int64.sub(Int64.max_int, n), /* int64 */[
	                  /* hi */0,
	                  /* lo */1
	                ]))) {
	        continue ;
	        
	      } else {
	        return v;
	      }
	    };
	  }
	}

	var nativeint = Nativeint.size === 32 ? int32 : function (s, bound) {
	    return int64(s, Caml_int64.of_int32(bound))[1] | 0;
	  };

	function rawfloat(s) {
	  var r1 = bits(s);
	  var r2 = bits(s);
	  return (r1 / 1073741824.0 + r2) / 1073741824.0;
	}

	function $$float(s, bound) {
	  return rawfloat(s) * bound;
	}

	function bool(s) {
	  return +((bits(s) & 1) === 0);
	}

	var $$default = /* record */[
	  /* st : array */[
	    987910699,
	    495797812,
	    364182224,
	    414272206,
	    318284740,
	    990407751,
	    383018966,
	    270373319,
	    840823159,
	    24560019,
	    536292337,
	    512266505,
	    189156120,
	    730249596,
	    143776328,
	    51606627,
	    140166561,
	    366354223,
	    1003410265,
	    700563762,
	    981890670,
	    913149062,
	    526082594,
	    1021425055,
	    784300257,
	    667753350,
	    630144451,
	    949649812,
	    48546892,
	    415514493,
	    258888527,
	    511570777,
	    89983870,
	    283659902,
	    308386020,
	    242688715,
	    482270760,
	    865188196,
	    1027664170,
	    207196989,
	    193777847,
	    619708188,
	    671350186,
	    149669678,
	    257044018,
	    87658204,
	    558145612,
	    183450813,
	    28133145,
	    901332182,
	    710253903,
	    510646120,
	    652377910,
	    409934019,
	    801085050
	  ],
	  /* idx */0
	];

	function bits$1() {
	  return bits($$default);
	}

	function $$int$1(bound) {
	  return $$int($$default, bound);
	}

	function int32$1(bound) {
	  return int32($$default, bound);
	}

	function nativeint$1(bound) {
	  return Curry._2(nativeint, $$default, bound);
	}

	function int64$1(bound) {
	  return int64($$default, bound);
	}

	function $$float$1(scale) {
	  return rawfloat($$default) * scale;
	}

	function bool$1() {
	  return bool($$default);
	}

	function full_init$1(seed) {
	  return full_init($$default, seed);
	}

	function init(seed) {
	  return full_init($$default, /* int array */[seed]);
	}

	function self_init() {
	  return full_init$1(Caml_sys.caml_sys_random_seed(/* () */0));
	}

	function get_state() {
	  return copy($$default);
	}

	function set_state(s) {
	  return assign($$default, s);
	}

	var State = [
	  make,
	  make_self_init,
	  copy,
	  bits,
	  $$int,
	  int32,
	  nativeint,
	  int64,
	  $$float,
	  bool
	];

	exports.init      = init;
	exports.full_init = full_init$1;
	exports.self_init = self_init;
	exports.bits      = bits$1;
	exports.$$int     = $$int$1;
	exports.int32     = int32$1;
	exports.nativeint = nativeint$1;
	exports.int64     = int64$1;
	exports.$$float   = $$float$1;
	exports.bool      = bool$1;
	exports.State     = State;
	exports.get_state = get_state;
	exports.set_state = set_state;
	/* No side effect */


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Curry                   = __webpack_require__(1);
	var Caml_array              = __webpack_require__(2);
	var Caml_exceptions         = __webpack_require__(16);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function init(l, f) {
	  if (l) {
	    if (l < 0) {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "Array.init"
	          ];
	    } else {
	      var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));
	      for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
	        res[i] = Curry._1(f, i);
	      }
	      return res;
	    }
	  } else {
	    return /* array */[];
	  }
	}

	function make_matrix(sx, sy, init) {
	  var res = Caml_array.caml_make_vect(sx, /* array */[]);
	  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){
	    res[x] = Caml_array.caml_make_vect(sy, init);
	  }
	  return res;
	}

	function copy(a) {
	  var l = a.length;
	  if (l) {
	    return Caml_array.caml_array_sub(a, 0, l);
	  } else {
	    return /* array */[];
	  }
	}

	function append(a1, a2) {
	  var l1 = a1.length;
	  if (l1) {
	    if (a2.length) {
	      return a1.concat(a2);
	    } else {
	      return Caml_array.caml_array_sub(a1, 0, l1);
	    }
	  } else {
	    return copy(a2);
	  }
	}

	function sub(a, ofs, len) {
	  if (len < 0 || ofs > (a.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Array.sub"
	        ];
	  } else {
	    return Caml_array.caml_array_sub(a, ofs, len);
	  }
	}

	function fill(a, ofs, len, v) {
	  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Array.fill"
	        ];
	  } else {
	    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){
	      a[i] = v;
	    }
	    return /* () */0;
	  }
	}

	function blit(a1, ofs1, a2, ofs2, len) {
	  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "Array.blit"
	        ];
	  } else {
	    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);
	  }
	}

	function iter(f, a) {
	  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
	    Curry._1(f, a[i]);
	  }
	  return /* () */0;
	}

	function map(f, a) {
	  var l = a.length;
	  if (l) {
	    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));
	    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
	      r[i] = Curry._1(f, a[i]);
	    }
	    return r;
	  } else {
	    return /* array */[];
	  }
	}

	function iteri(f, a) {
	  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
	    Curry._2(f, i, a[i]);
	  }
	  return /* () */0;
	}

	function mapi(f, a) {
	  var l = a.length;
	  if (l) {
	    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));
	    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
	      r[i] = Curry._2(f, i, a[i]);
	    }
	    return r;
	  } else {
	    return /* array */[];
	  }
	}

	function to_list(a) {
	  var _i = a.length - 1 | 0;
	  var _res = /* [] */0;
	  while(true) {
	    var res = _res;
	    var i = _i;
	    if (i < 0) {
	      return res;
	    } else {
	      _res = /* :: */[
	        a[i],
	        res
	      ];
	      _i = i - 1 | 0;
	      continue ;
	      
	    }
	  };
	}

	function list_length(_accu, _param) {
	  while(true) {
	    var param = _param;
	    var accu = _accu;
	    if (param) {
	      _param = param[1];
	      _accu = accu + 1 | 0;
	      continue ;
	      
	    } else {
	      return accu;
	    }
	  };
	}

	function of_list(l) {
	  if (l) {
	    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);
	    var _i = 1;
	    var _param = l[1];
	    while(true) {
	      var param = _param;
	      var i = _i;
	      if (param) {
	        a[i] = param[0];
	        _param = param[1];
	        _i = i + 1 | 0;
	        continue ;
	        
	      } else {
	        return a;
	      }
	    };
	  } else {
	    return /* array */[];
	  }
	}

	function fold_left(f, x, a) {
	  var r = x;
	  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
	    r = Curry._2(f, r, a[i]);
	  }
	  return r;
	}

	function fold_right(f, a, x) {
	  var r = x;
	  for(var i = a.length - 1 | 0; i >= 0; --i){
	    r = Curry._2(f, a[i], r);
	  }
	  return r;
	}

	var Bottom = Caml_exceptions.create("Array.Bottom");

	function sort(cmp, a) {
	  var maxson = function (l, i) {
	    var i31 = ((i + i | 0) + i | 0) + 1 | 0;
	    var x = i31;
	    if ((i31 + 2 | 0) < l) {
	      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {
	        x = i31 + 1 | 0;
	      }
	      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {
	        x = i31 + 2 | 0;
	      }
	      return x;
	    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {
	      return i31 + 1 | 0;
	    } else if (i31 < l) {
	      return i31;
	    } else {
	      throw [
	            Bottom,
	            i
	          ];
	    }
	  };
	  var trickle = function (l, i, e) {
	    try {
	      var l$1 = l;
	      var _i = i;
	      var e$1 = e;
	      while(true) {
	        var i$1 = _i;
	        var j = maxson(l$1, i$1);
	        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {
	          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));
	          _i = j;
	          continue ;
	          
	        } else {
	          return Caml_array.caml_array_set(a, i$1, e$1);
	        }
	      };
	    }
	    catch (exn){
	      if (exn[0] === Bottom) {
	        return Caml_array.caml_array_set(a, exn[1], e);
	      } else {
	        throw exn;
	      }
	    }
	  };
	  var bubble = function (l, i) {
	    try {
	      var l$1 = l;
	      var _i = i;
	      while(true) {
	        var i$1 = _i;
	        var j = maxson(l$1, i$1);
	        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));
	        _i = j;
	        continue ;
	        
	      };
	    }
	    catch (exn){
	      if (exn[0] === Bottom) {
	        return exn[1];
	      } else {
	        throw exn;
	      }
	    }
	  };
	  var trickleup = function (_i, e) {
	    while(true) {
	      var i = _i;
	      var father = (i - 1 | 0) / 3 | 0;
	      if (i === father) {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "array.ml",
	                168,
	                4
	              ]
	            ];
	      }
	      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {
	        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));
	        if (father > 0) {
	          _i = father;
	          continue ;
	          
	        } else {
	          return Caml_array.caml_array_set(a, 0, e);
	        }
	      } else {
	        return Caml_array.caml_array_set(a, i, e);
	      }
	    };
	  };
	  var l = a.length;
	  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){
	    trickle(l, i, Caml_array.caml_array_get(a, i));
	  }
	  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){
	    var e = Caml_array.caml_array_get(a, i$1);
	    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));
	    trickleup(bubble(i$1, 0), e);
	  }
	  if (l > 1) {
	    var e$1 = Caml_array.caml_array_get(a, 1);
	    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));
	    return Caml_array.caml_array_set(a, 0, e$1);
	  } else {
	    return 0;
	  }
	}

	function stable_sort(cmp, a) {
	  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {
	    var src1r = src1ofs + src1len | 0;
	    var src2r = src2ofs + src2len | 0;
	    var _i1 = src1ofs;
	    var _s1 = Caml_array.caml_array_get(a, src1ofs);
	    var _i2 = src2ofs;
	    var _s2 = Caml_array.caml_array_get(src2, src2ofs);
	    var _d = dstofs;
	    while(true) {
	      var d = _d;
	      var s2 = _s2;
	      var i2 = _i2;
	      var s1 = _s1;
	      var i1 = _i1;
	      if (Curry._2(cmp, s1, s2) <= 0) {
	        Caml_array.caml_array_set(dst, d, s1);
	        var i1$1 = i1 + 1 | 0;
	        if (i1$1 < src1r) {
	          _d = d + 1 | 0;
	          _s1 = Caml_array.caml_array_get(a, i1$1);
	          _i1 = i1$1;
	          continue ;
	          
	        } else {
	          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);
	        }
	      } else {
	        Caml_array.caml_array_set(dst, d, s2);
	        var i2$1 = i2 + 1 | 0;
	        if (i2$1 < src2r) {
	          _d = d + 1 | 0;
	          _s2 = Caml_array.caml_array_get(src2, i2$1);
	          _i2 = i2$1;
	          continue ;
	          
	        } else {
	          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);
	        }
	      }
	    };
	  };
	  var isortto = function (srcofs, dst, dstofs, len) {
	    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
	      var e = Caml_array.caml_array_get(a, srcofs + i | 0);
	      var j = (dstofs + i | 0) - 1 | 0;
	      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {
	        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));
	        j = j - 1 | 0;
	      };
	      Caml_array.caml_array_set(dst, j + 1 | 0, e);
	    }
	    return /* () */0;
	  };
	  var sortto = function (srcofs, dst, dstofs, len) {
	    if (len <= 5) {
	      return isortto(srcofs, dst, dstofs, len);
	    } else {
	      var l1 = len / 2 | 0;
	      var l2 = len - l1 | 0;
	      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);
	      sortto(srcofs, a, srcofs + l2 | 0, l1);
	      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);
	    }
	  };
	  var l = a.length;
	  if (l <= 5) {
	    return isortto(0, a, 0, l);
	  } else {
	    var l1 = l / 2 | 0;
	    var l2 = l - l1 | 0;
	    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));
	    sortto(l1, t, 0, l2);
	    sortto(0, a, l2, l1);
	    return merge(l2, l1, t, 0, l2, a, 0);
	  }
	}

	var create_matrix = make_matrix;

	var concat = Caml_array.caml_array_concat;

	var fast_sort = stable_sort;

	exports.init          = init;
	exports.make_matrix   = make_matrix;
	exports.create_matrix = create_matrix;
	exports.append        = append;
	exports.concat        = concat;
	exports.sub           = sub;
	exports.copy          = copy;
	exports.fill          = fill;
	exports.blit          = blit;
	exports.to_list       = to_list;
	exports.of_list       = of_list;
	exports.iter          = iter;
	exports.map           = map;
	exports.iteri         = iteri;
	exports.mapi          = mapi;
	exports.fold_left     = fold_left;
	exports.fold_right    = fold_right;
	exports.sort          = sort;
	exports.stable_sort   = stable_sort;
	exports.fast_sort     = fast_sort;
	/* No side effect */


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_obj    = __webpack_require__(6);
	var Caml_format = __webpack_require__(11);

	function succ(n) {
	  return n + 1 | 0;
	}

	function pred(n) {
	  return n - 1 | 0;
	}

	function abs(n) {
	  if (n >= 0) {
	    return n;
	  } else {
	    return -n | 0;
	  }
	}

	function lognot(n) {
	  return n ^ -1;
	}

	function to_string(n) {
	  return Caml_format.caml_int32_format("%d", n);
	}

	var compare = Caml_obj.caml_int32_compare;

	var zero = 0;

	var one = 1;

	var minus_one = -1;

	var max_int = 2147483647;

	var min_int = -2147483648;

	exports.zero      = zero;
	exports.one       = one;
	exports.minus_one = minus_one;
	exports.succ      = succ;
	exports.pred      = pred;
	exports.abs       = abs;
	exports.max_int   = max_int;
	exports.min_int   = min_int;
	exports.lognot    = lognot;
	exports.to_string = to_string;
	exports.compare   = compare;
	/* No side effect */


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_int64  = __webpack_require__(13);
	var Caml_format = __webpack_require__(11);

	function succ(n) {
	  return Caml_int64.add(n, /* int64 */[
	              /* hi */0,
	              /* lo */1
	            ]);
	}

	function pred(n) {
	  return Caml_int64.sub(n, /* int64 */[
	              /* hi */0,
	              /* lo */1
	            ]);
	}

	function abs(n) {
	  if (Caml_int64.ge(n, /* int64 */[
	          /* hi */0,
	          /* lo */0
	        ])) {
	    return n;
	  } else {
	    return Caml_int64.neg(n);
	  }
	}

	function lognot(n) {
	  return Caml_int64.xor(n, /* int64 */[
	              /* hi */-1,
	              /* lo */4294967295
	            ]);
	}

	function to_string(n) {
	  return Caml_format.caml_int64_format("%d", n);
	}

	var compare = Caml_int64.compare;

	var zero = /* int64 */[
	  /* hi */0,
	  /* lo */0
	];

	var one = /* int64 */[
	  /* hi */0,
	  /* lo */1
	];

	var minus_one = /* int64 */[
	  /* hi */-1,
	  /* lo */4294967295
	];

	var max_int = /* int64 */[
	  /* hi */2147483647,
	  /* lo */4294967295
	];

	var min_int = /* int64 */[
	  /* hi */-2147483648,
	  /* lo */0
	];

	exports.zero      = zero;
	exports.one       = one;
	exports.minus_one = minus_one;
	exports.succ      = succ;
	exports.pred      = pred;
	exports.abs       = abs;
	exports.max_int   = max_int;
	exports.min_int   = min_int;
	exports.lognot    = lognot;
	exports.to_string = to_string;
	exports.compare   = compare;
	/* No side effect */


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var Caml_builtin_exceptions = __webpack_require__(3);

	function caml_raise_not_found() {
	  throw Caml_builtin_exceptions.not_found;
	}


	function $$caml_sys_getenv(n) {
	    //nodejs env
	    if (typeof process !== 'undefined'
	        && process.env
	        && process.env[n] != undefined){
	        return process.env[n]
	    }
	    else{ 
	     caml_raise_not_found()
	    };
	  }

	;


	function $$date(){
	  return (+new Date())
	};


	;

	var caml_initial_time = $$date() * 0.001;

	function caml_sys_time() {
	  return $$date() * 0.001 - caml_initial_time;
	}

	function caml_sys_random_seed() {
	  return /* array */[(($$date() | 0) ^ 4294967295) * Math.random() | 0];
	}

	function caml_sys_system_command() {
	  return 127;
	}

	function caml_sys_getcwd() {
	  return "/";
	}

	function caml_sys_is_directory() {
	  throw [
	        Caml_builtin_exceptions.failure,
	        "caml_sys_is_directory not implemented"
	      ];
	}

	function caml_sys_file_exists() {
	  throw [
	        Caml_builtin_exceptions.failure,
	        "caml_sys_file_exists not implemented"
	      ];
	}

	function caml_sys_getenv(prim) {
	  return $$caml_sys_getenv(prim);
	}

	exports.caml_raise_not_found    = caml_raise_not_found;
	exports.caml_sys_getenv         = caml_sys_getenv;
	exports.caml_sys_time           = caml_sys_time;
	exports.caml_sys_random_seed    = caml_sys_random_seed;
	exports.caml_sys_system_command = caml_sys_system_command;
	exports.caml_sys_getcwd         = caml_sys_getcwd;
	exports.caml_sys_is_directory   = caml_sys_is_directory;
	exports.caml_sys_file_exists    = caml_sys_file_exists;
	/*  Not a pure module */

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Sys         = __webpack_require__(29);
	var Caml_obj    = __webpack_require__(6);
	var Caml_format = __webpack_require__(11);

	function succ(n) {
	  return n + 1;
	}

	function pred(n) {
	  return n - 1;
	}

	function abs(n) {
	  if (n >= 0) {
	    return n;
	  } else {
	    return -n;
	  }
	}

	var min_int = -9007199254740991;

	var max_int = 9007199254740991;

	function lognot(n) {
	  return n ^ -1;
	}

	function to_string(n) {
	  return Caml_format.caml_nativeint_format("%d", n);
	}

	var compare = Caml_obj.caml_nativeint_compare;

	var zero = 0;

	var one = 1;

	var minus_one = -1;

	var size = Sys.word_size;

	exports.zero      = zero;
	exports.one       = one;
	exports.minus_one = minus_one;
	exports.succ      = succ;
	exports.pred      = pred;
	exports.abs       = abs;
	exports.size      = size;
	exports.max_int   = max_int;
	exports.min_int   = min_int;
	exports.lognot    = lognot;
	exports.to_string = to_string;
	exports.compare   = compare;
	/* No side effect */


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_exceptions = __webpack_require__(16);

	var is_js = /* true */1;

	var match_001 = /* array */[];

	var big_endian = /* false */0;

	var unix = /* true */1;

	var win32 = /* false */0;

	var cygwin = /* false */0;

	var max_array_length = 2147483647;

	var max_string_length = 2147483647;

	var interactive = [/* false */0];

	function set_signal(_, _$1) {
	  return /* () */0;
	}

	var Break = Caml_exceptions.create("Sys.Break");

	function catch_break() {
	  return /* () */0;
	}

	var argv = match_001;

	var executable_name = "cmd";

	var os_type = "Unix";

	var word_size = 32;

	var sigabrt = -1;

	var sigalrm = -2;

	var sigfpe = -3;

	var sighup = -4;

	var sigill = -5;

	var sigint = -6;

	var sigkill = -7;

	var sigpipe = -8;

	var sigquit = -9;

	var sigsegv = -10;

	var sigterm = -11;

	var sigusr1 = -12;

	var sigusr2 = -13;

	var sigchld = -14;

	var sigcont = -15;

	var sigstop = -16;

	var sigtstp = -17;

	var sigttin = -18;

	var sigttou = -19;

	var sigvtalrm = -20;

	var sigprof = -21;

	var ocaml_version = "4.02.3+dev1-2015-07-10";

	exports.argv              = argv;
	exports.executable_name   = executable_name;
	exports.interactive       = interactive;
	exports.os_type           = os_type;
	exports.unix              = unix;
	exports.win32             = win32;
	exports.cygwin            = cygwin;
	exports.word_size         = word_size;
	exports.big_endian        = big_endian;
	exports.is_js             = is_js;
	exports.max_string_length = max_string_length;
	exports.max_array_length  = max_array_length;
	exports.set_signal        = set_signal;
	exports.sigabrt           = sigabrt;
	exports.sigalrm           = sigalrm;
	exports.sigfpe            = sigfpe;
	exports.sighup            = sighup;
	exports.sigill            = sigill;
	exports.sigint            = sigint;
	exports.sigkill           = sigkill;
	exports.sigpipe           = sigpipe;
	exports.sigquit           = sigquit;
	exports.sigsegv           = sigsegv;
	exports.sigterm           = sigterm;
	exports.sigusr1           = sigusr1;
	exports.sigusr2           = sigusr2;
	exports.sigchld           = sigchld;
	exports.sigcont           = sigcont;
	exports.sigstop           = sigstop;
	exports.sigtstp           = sigtstp;
	exports.sigttin           = sigttin;
	exports.sigttou           = sigttou;
	exports.sigvtalrm         = sigvtalrm;
	exports.sigprof           = sigprof;
	exports.Break             = Break;
	exports.catch_break       = catch_break;
	exports.ocaml_version     = ocaml_version;
	/* No side effect */


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Curry                  = __webpack_require__(1);
	var NodeRe                 = __webpack_require__(31);
	var DomTypesRe             = __webpack_require__(33);
	var Js_primitive           = __webpack_require__(35);
	var ParentNodeRe           = __webpack_require__(36);
	var EventTargetRe          = __webpack_require__(34);
	var DocumentOrShadowRootRe = __webpack_require__(37);
	var NonElementParentNodeRe = __webpack_require__(38);

	function Impl() {
	  var asHtmlDocument = (
	    function (document) {
	      return document.doctype.name === "html" ?  document : null;
	    }
	  );
	  var asHtmlDocument$1 = function (self) {
	    return Js_primitive.null_to_opt(Curry._1(asHtmlDocument, self));
	  };
	  var ofNode = function (node) {
	    var match = +(NodeRe.nodeType(node) === /* Document */8);
	    if (match !== 0) {
	      return /* Some */[node];
	    } else {
	      return /* None */0;
	    }
	  };
	  var compatMode = function (self) {
	    return DomTypesRe.decodeCompatMode(self.compatMode);
	  };
	  var visibilityState = function (self) {
	    return DomTypesRe.decodeVisibilityState(self.visibilityState);
	  };
	  var importNodeDeep = function (element, self) {
	    return self.importNode(element, true);
	  };
	  return /* module */[
	          /* asHtmlDocument */asHtmlDocument$1,
	          /* ofNode */ofNode,
	          /* compatMode */compatMode,
	          /* visibilityState */visibilityState,
	          /* importNodeDeep */importNodeDeep
	        ];
	}

	EventTargetRe.Impl(/* module */[]);

	var include = NodeRe.Impl(/* module */[]);

	NonElementParentNodeRe.Impl(/* module */[]);

	DocumentOrShadowRootRe.Impl(/* module */[]);

	ParentNodeRe.Impl(/* module */[]);

	var asHtmlDocument = (
	    function (document) {
	      return document.doctype.name === "html" ?  document : null;
	    }
	  );

	function asHtmlDocument$1(self) {
	  return Js_primitive.null_to_opt(Curry._1(asHtmlDocument, self));
	}

	function ofNode(node) {
	  var match = +(NodeRe.nodeType(node) === /* Document */8);
	  if (match !== 0) {
	    return /* Some */[node];
	  } else {
	    return /* None */0;
	  }
	}

	function compatMode(self) {
	  return DomTypesRe.decodeCompatMode(self.compatMode);
	}

	function visibilityState(self) {
	  return DomTypesRe.decodeVisibilityState(self.visibilityState);
	}

	function importNodeDeep(element, self) {
	  return self.importNode(element, true);
	}

	var nodeType = include[0];

	var insertBefore = include[1];

	exports.Impl            = Impl;
	exports.nodeType        = nodeType;
	exports.insertBefore    = insertBefore;
	exports.asHtmlDocument  = asHtmlDocument$1;
	exports.ofNode          = ofNode;
	exports.compatMode      = compatMode;
	exports.visibilityState = visibilityState;
	exports.importNodeDeep  = importNodeDeep;
	/*  Not a pure module */


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Js_null       = __webpack_require__(32);
	var DomTypesRe    = __webpack_require__(33);
	var EventTargetRe = __webpack_require__(34);

	function Impl() {
	  var nodeType = function (self) {
	    return DomTypesRe.decodeNodeType(self.nodeType);
	  };
	  var insertBefore = function (node, reference, self) {
	    return self.insertBefore(node, Js_null.from_opt(reference));
	  };
	  return /* module */[
	          /* nodeType */nodeType,
	          /* insertBefore */insertBefore
	        ];
	}

	EventTargetRe.Impl(/* module */[]);

	function nodeType(self) {
	  return DomTypesRe.decodeNodeType(self.nodeType);
	}

	function insertBefore(node, reference, self) {
	  return self.insertBefore(node, Js_null.from_opt(reference));
	}

	exports.Impl         = Impl;
	exports.nodeType     = nodeType;
	exports.insertBefore = insertBefore;
	/*  Not a pure module */


/***/ },
/* 32 */
/***/ function(module, exports) {

	'use strict';


	function bind(x, f) {
	  if (x !== null) {
	    return f(x);
	  } else {
	    return null;
	  }
	}

	function iter(x, f) {
	  if (x !== null) {
	    return f(x);
	  } else {
	    return /* () */0;
	  }
	}

	function from_opt(x) {
	  if (x) {
	    return x[0];
	  } else {
	    return null;
	  }
	}

	exports.bind     = bind;
	exports.iter     = iter;
	exports.from_opt = from_opt;
	/* No side effect */


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Caml_builtin_exceptions = __webpack_require__(3);

	function encodeCompareHow(param) {
	  switch (param) {
	    case 0 : 
	        return 0;
	    case 1 : 
	        return 1;
	    case 2 : 
	        return 2;
	    case 3 : 
	        return 3;
	    
	  }
	}

	function decodeCompareResult(param) {
	  var switcher = param + 1 | 0;
	  if (switcher > 2 || switcher < 0) {
	    return /* Unknown */3;
	  } else {
	    switch (switcher) {
	      case 0 : 
	          return /* Before */0;
	      case 1 : 
	          return /* Equal */1;
	      case 2 : 
	          return /* After */2;
	      
	    }
	  }
	}

	function decodeCompatMode(param) {
	  switch (param) {
	    case "BackCompat" : 
	        return /* BackCompat */0;
	    case "CSS1Compat" : 
	        return /* CSS1Compat */1;
	    default:
	      return /* Unknown */2;
	  }
	}

	function encodeContentEditable(param) {
	  switch (param) {
	    case 0 : 
	        return "true";
	    case 1 : 
	        return "false";
	    case 2 : 
	        return "inherit";
	    case 3 : 
	        return "";
	    
	  }
	}

	function decodeContentEditable(param) {
	  switch (param) {
	    case "false" : 
	        return /* False */1;
	    case "inherit" : 
	        return /* Inherit */2;
	    case "true" : 
	        return /* True */0;
	    default:
	      return /* Unknown */3;
	  }
	}

	function decodeDeltaMode(param) {
	  if (param > 2 || param < 0) {
	    throw [
	          Caml_builtin_exceptions.invalid_argument,
	          "invalid deltaMode"
	        ];
	  } else {
	    switch (param) {
	      case 0 : 
	          return /* Pixel */0;
	      case 1 : 
	          return /* Line */1;
	      case 2 : 
	          return /* Page */2;
	      
	    }
	  }
	}

	function encodeDesignMode(param) {
	  switch (param) {
	    case 0 : 
	        return "on";
	    case 1 : 
	        return "off";
	    case 2 : 
	        return "";
	    
	  }
	}

	function decodeDesignMode(param) {
	  switch (param) {
	    case "off" : 
	        return /* Off */1;
	    case "on" : 
	        return /* On */0;
	    default:
	      return /* Unknown */2;
	  }
	}

	function encodeDir(param) {
	  switch (param) {
	    case 0 : 
	        return "ltr";
	    case 1 : 
	        return "rtl";
	    case 2 : 
	        return "";
	    
	  }
	}

	function decodeDir(param) {
	  switch (param) {
	    case "ltr" : 
	        return /* Ltr */0;
	    case "rtl" : 
	        return /* Rtl */1;
	    default:
	      return /* Unknown */2;
	  }
	}

	function decodeEventPhase(param) {
	  if (param > 3 || param < 0) {
	    return /* Unknown */4;
	  } else {
	    switch (param) {
	      case 0 : 
	          return /* None */0;
	      case 1 : 
	          return /* CapturingPhase */1;
	      case 2 : 
	          return /* AtTarget */2;
	      case 3 : 
	          return /* BubblingPhase */3;
	      
	    }
	  }
	}

	function encodeFilterAction(param) {
	  switch (param) {
	    case 0 : 
	        return 1;
	    case 1 : 
	        return 2;
	    case 2 : 
	        return 3;
	    
	  }
	}

	function encodeInsertPosition(param) {
	  switch (param) {
	    case 0 : 
	        return "beforebegin";
	    case 1 : 
	        return "afterbegin";
	    case 2 : 
	        return "beforeemd";
	    case 3 : 
	        return "afterend";
	    
	  }
	}

	function encodeModifierKey(param) {
	  switch (param) {
	    case 0 : 
	        return "Alt";
	    case 1 : 
	        return "AltGraph";
	    case 2 : 
	        return "CapsLock";
	    case 3 : 
	        return "Control";
	    case 4 : 
	        return "Fn";
	    case 5 : 
	        return "FnLock";
	    case 6 : 
	        return "Hyper";
	    case 7 : 
	        return "Meta";
	    case 8 : 
	        return "NumLock";
	    case 9 : 
	        return "ScrollLock";
	    case 10 : 
	        return "Shift";
	    case 11 : 
	        return "Super";
	    case 12 : 
	        return "Symbol";
	    case 13 : 
	        return "SymbolLock";
	    
	  }
	}

	function decodeNodeType(param) {
	  var switcher = param - 1 | 0;
	  if (switcher > 11 || switcher < 0) {
	    return /* Unknown */12;
	  } else {
	    switch (switcher) {
	      case 0 : 
	          return /* Element */0;
	      case 1 : 
	          return /* Attribute */1;
	      case 2 : 
	          return /* Text */2;
	      case 3 : 
	          return /* CDATASection */3;
	      case 4 : 
	          return /* EntityReference */4;
	      case 5 : 
	          return /* Entity */5;
	      case 6 : 
	          return /* ProcessingInstruction */6;
	      case 7 : 
	          return /* Comment */7;
	      case 8 : 
	          return /* Document */8;
	      case 9 : 
	          return /* DocumentType */9;
	      case 10 : 
	          return /* DocumentFragment */10;
	      case 11 : 
	          return /* Notation */11;
	      
	    }
	  }
	}

	function decodePointerType(param) {
	  switch (param) {
	    case "mouse" : 
	        return /* Mouse */0;
	    case "pen" : 
	        return /* Pen */1;
	    case "touch|" : 
	        return /* Touch */2;
	    default:
	      return /* Unknown */3;
	  }
	}

	function decodeReadyState(param) {
	  switch (param) {
	    case "complete" : 
	        return /* Complete */2;
	    case "interactive" : 
	        return /* Interactive */1;
	    case "loading" : 
	        return /* Loading */0;
	    default:
	      return /* Unknown */3;
	  }
	}

	function decodeShadowRootMode(param) {
	  switch (param) {
	    case "closed" : 
	        return /* Closed */1;
	    case "open" : 
	        return /* Open */0;
	    default:
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "Unknown shadowRootMode"
	          ];
	  }
	}

	function decodeVisibilityState(param) {
	  switch (param) {
	    case "hidden" : 
	        return /* Hidden */1;
	    case "prerender" : 
	        return /* Prerender */2;
	    case "unloaded" : 
	        return /* Unloaded */3;
	    case "visible" : 
	        return /* Visible */0;
	    default:
	      return /* Unknown */4;
	  }
	}

	function many(param) {
	  if (param) {
	    return param[0] | many(param[1]);
	  } else {
	    return 0;
	  }
	}

	var WhatToShow = /* module */[
	  /* _All */-1,
	  /* _Element */1,
	  /* _Attribute */2,
	  /* _Text */4,
	  /* _CDATASection */8,
	  /* _EntityReference */16,
	  /* _Entity */32,
	  /* _ProcessingInstruction */64,
	  /* _Comment */128,
	  /* _Document */256,
	  /* _DocumentType */512,
	  /* _DocumentFragment */1024,
	  /* _Notation */2048,
	  /* many */many
	];

	exports.encodeCompareHow      = encodeCompareHow;
	exports.decodeCompareResult   = decodeCompareResult;
	exports.decodeCompatMode      = decodeCompatMode;
	exports.encodeContentEditable = encodeContentEditable;
	exports.decodeContentEditable = decodeContentEditable;
	exports.decodeDeltaMode       = decodeDeltaMode;
	exports.encodeDesignMode      = encodeDesignMode;
	exports.decodeDesignMode      = decodeDesignMode;
	exports.encodeDir             = encodeDir;
	exports.decodeDir             = decodeDir;
	exports.decodeEventPhase      = decodeEventPhase;
	exports.encodeFilterAction    = encodeFilterAction;
	exports.encodeInsertPosition  = encodeInsertPosition;
	exports.encodeModifierKey     = encodeModifierKey;
	exports.decodeNodeType        = decodeNodeType;
	exports.decodePointerType     = decodePointerType;
	exports.decodeReadyState      = decodeReadyState;
	exports.decodeShadowRootMode  = decodeShadowRootMode;
	exports.decodeVisibilityState = decodeVisibilityState;
	exports.WhatToShow            = WhatToShow;
	/* No side effect */


/***/ },
/* 34 */
/***/ function(module, exports) {

	'use strict';


	function Impl() {
	  return /* module */[];
	}

	exports.Impl = Impl;
	/* No side effect */


/***/ },
/* 35 */
/***/ function(module, exports) {

	'use strict';


	function is_nil_undef(x) {
	  if (x === null) {
	    return /* true */1;
	  } else {
	    return +(x === undefined);
	  }
	}

	function null_undefined_to_opt(x) {
	  if (x === null || x === undefined) {
	    return /* None */0;
	  } else {
	    return /* Some */[x];
	  }
	}

	function undefined_to_opt(x) {
	  if (x === undefined) {
	    return /* None */0;
	  } else {
	    return /* Some */[x];
	  }
	}

	function null_to_opt(x) {
	  if (x === null) {
	    return /* None */0;
	  } else {
	    return /* Some */[x];
	  }
	}

	function option_get(x) {
	  if (x) {
	    return x[0];
	  } else {
	    return undefined;
	  }
	}

	exports.is_nil_undef          = is_nil_undef;
	exports.null_undefined_to_opt = null_undefined_to_opt;
	exports.undefined_to_opt      = undefined_to_opt;
	exports.null_to_opt           = null_to_opt;
	exports.option_get            = option_get;
	/* No side effect */


/***/ },
/* 36 */
/***/ function(module, exports) {

	'use strict';


	function Impl() {
	  return /* module */[];
	}

	exports.Impl = Impl;
	/* No side effect */


/***/ },
/* 37 */
/***/ function(module, exports) {

	'use strict';


	function Impl() {
	  return /* module */[];
	}

	exports.Impl = Impl;
	/* No side effect */


/***/ },
/* 38 */
/***/ function(module, exports) {

	'use strict';


	function Impl() {
	  return /* module */[];
	}

	exports.Impl = Impl;
	/* No side effect */


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Wip                     = __webpack_require__(40);
	var Demo                    = __webpack_require__(72);
	var List                    = __webpack_require__(5);
	var Block                   = __webpack_require__(7);
	var Curry                   = __webpack_require__(1);
	var State                   = __webpack_require__(73);
	var Utils                   = __webpack_require__(4);
	var React                   = __webpack_require__(41);
	var ReactRe                 = __webpack_require__(71);
	var Caml_array              = __webpack_require__(2);
	var Pervasives              = __webpack_require__(8);
	var Caml_string             = __webpack_require__(15);
	var Audio_player            = __webpack_require__(76);
	var Caml_builtin_exceptions = __webpack_require__(3);

	var fullHeight = {
	  height: "100%"
	};

	function scrollToLatestMessage(target, channelId) {
	  var match = target.querySelector("#channels-" + Pervasives.string_of_int(channelId));
	  if (match !== null) {
	    var activities = Array.prototype.slice.call(target.querySelectorAll("#channels-" + (Pervasives.string_of_int(channelId) + "\n  .activity")));
	    if (activities.length !== 0) {
	      var latest = Caml_array.caml_array_get(activities, activities.length - 1 | 0);
	      match.scrollTop = latest.offsetTop;
	      return /* () */0;
	    } else {
	      return /* () */0;
	    }
	  } else {
	    return /* () */0;
	  }
	}

	function toggleSearchForm(rootEl, selector, $$event) {
	  var match = rootEl.querySelector(selector);
	  if (match !== null) {
	    if ($$event !== 0) {
	      match.focus();
	      return /* () */0;
	    } else {
	      match.blur();
	      return /* () */0;
	    }
	  } else {
	    return /* () */0;
	  }
	}

	var include = ReactRe.Component[/* Stateful */8];

	var componentWillUpdate = include[1];

	var componentWillReceiveProps = include[3];

	var componentWillUnmount = include[4];

	var getInstanceVars = include[5];

	var jsPropsToReasonProps = include[6];

	var name = "KandanAppRe";

	function getInitialState() {
	  return Demo.state;
	}

	function sidebarToggled(param, which, opened) {
	  var state = param[/* state */0];
	  if (which !== 0) {
	    var newrecord = state.slice();
	    return /* Some */[(newrecord[/* rightSidebarOpen */0] = opened, newrecord)];
	  } else {
	    var newrecord$1 = state.slice();
	    return /* Some */[(newrecord$1[/* leftSidebarOpen */1] = opened, newrecord$1)];
	  }
	}

	function searchUpdated(param, needle) {
	  var state = param[/* state */0];
	  if (needle) {
	    var search = needle[0];
	    if (search === "") {
	      var newrecord = state.slice();
	      return /* Some */[(newrecord[/* search */9] = /* None */0, newrecord)];
	    } else {
	      var newrecord$1 = state.slice();
	      return /* Some */[(newrecord$1[/* search */9] = /* Some */[search], newrecord$1)];
	    }
	  } else {
	    var newrecord$2 = state.slice();
	    return /* Some */[(newrecord$2[/* search */9] = /* None */0, newrecord$2)];
	  }
	}

	function volumeSet(param, volume) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  return /* Some */[(newrecord[/* volume */11] = volume, newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function volumeDecremented(param, delta) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  return /* Some */[(newrecord[/* volume */11] = Pervasives.max(0.0, state[/* volume */11] - delta), newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function volumeIncremented(param, delta) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  return /* Some */[(newrecord[/* volume */11] = Pervasives.min(1.0, state[/* volume */11] + delta), newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function volumeMuteToggled(param) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  var match = +(state[/* volume */11] === 0.0);
	  newrecord[/* volume */11] = match !== 0 ? state[/* lastVolume */12] : 0.0;
	  return /* Some */[(newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function channelSelected(param, channel) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* selectedChannelId */2] = channel[/* id */0], newrecord[/* title */10] = channel[/* title */1] + " - Kandan", newrecord)];
	}

	function songSelected(param, channel, media) {
	  var state = param[/* state */0];
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var newrecord = currentChannel.slice();
	  newrecord[/* media */5] = media;
	  var newChannels = List.append(otherChannels, /* :: */[
	        newrecord,
	        /* [] */0
	      ]);
	  var newrecord$1 = state.slice();
	  return /* Some */[(newrecord$1[/* channels */5] = newChannels, newrecord$1)];
	}

	function mediaStateUpdated(param, channel, newState) {
	  var state = param[/* state */0];
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var newChannel;
	  if (newState !== 0) {
	    var newrecord = currentChannel.slice();
	    newrecord[/* media */5] = currentChannel[/* media */5];
	    newrecord[/* mediaState */6] = newState;
	    newChannel = newrecord;
	  } else {
	    var match = currentChannel[/* media */5][/* src */1];
	    var match$1 = List.length(currentChannel[/* playlist */8]);
	    var media = match || match$1 === 0 ? currentChannel[/* media */5] : List.nth(currentChannel[/* playlist */8], 0);
	    var newrecord$1 = currentChannel.slice();
	    newrecord$1[/* media */5] = media;
	    newrecord$1[/* mediaState */6] = newState;
	    newChannel = newrecord$1;
	  }
	  var newChannels = List.append(otherChannels, /* :: */[
	        newChannel,
	        /* [] */0
	      ]);
	  var newrecord$2 = state.slice();
	  return /* Some */[(newrecord$2[/* channels */5] = newChannels, newrecord$2)];
	}

	function chatBoxFocused(param, focused) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* userMessageFocused */6] = focused, newrecord)];
	}

	function searchFormFocused(param, focused) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* searchFormFocused */7] = focused, newrecord)];
	}

	function userMenuToggled(param, opened) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* userMenuOpen */8] = opened, newrecord)];
	}

	function msgSubmitted(param, channel, _, msg) {
	  var state = param[/* state */0];
	  var newMsg_000 = /* content */msg[/* content */0].trim();
	  var newMsg_001 = /* userId */msg[/* userId */1];
	  var newMsg_002 = /* createdAt */msg[/* createdAt */2];
	  var newMsg = /* record */[
	    newMsg_000,
	    newMsg_001,
	    newMsg_002
	  ];
	  var match = newMsg_000.indexOf("/queue");
	  var mediaToQueue;
	  if (match !== 0) {
	    mediaToQueue = /* None */0;
	  } else {
	    var parts = newMsg_000.split((/ /));
	    var match$1 = parts.length;
	    if (match$1 !== 0) {
	      mediaToQueue = match$1 !== 1 ? /* Some */[/* record */[
	            /* order */List.length(channel[/* playlist */8]),
	            /* src : Some */[Caml_array.caml_array_get(parts, 1)],
	            /* duration : None */0
	          ]] : /* None */0;
	    } else {
	      throw [
	            Caml_builtin_exceptions.assert_failure,
	            [
	              "kandan.re",
	              106,
	              15
	            ]
	          ];
	    }
	  }
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var newrecord = currentChannel.slice();
	  newrecord[/* activities */3] = List.append(currentChannel[/* activities */3], /* :: */[
	        newMsg,
	        /* [] */0
	      ]);
	  newrecord[/* playlist */8] = mediaToQueue ? List.append(currentChannel[/* playlist */8], /* :: */[
	          mediaToQueue[0],
	          /* [] */0
	        ]) : currentChannel[/* playlist */8];
	  var newChannels = List.append(otherChannels, /* :: */[
	        newrecord,
	        /* [] */0
	      ]);
	  var newrecord$1 = state.slice();
	  return /* Some */[(newrecord$1[/* channels */5] = newChannels, newrecord$1)];
	}

	function processEffects(param, action, _, newState) {
	  var props = param[/* props */1];
	  console.log("Processing effect for action: " + State.stringOfAction(action));
	  if (typeof action === "number") {
	    +(action === 0);
	  } else {
	    switch (action.tag | 0) {
	      case 0 : 
	          var focused = action[0];
	          setTimeout(function () {
	                return toggleSearchForm(props[/* rootEl */1], "input.query", focused);
	              }, 100);
	          break;
	      case 3 : 
	          var channel = action[0];
	          setTimeout(function () {
	                return scrollToLatestMessage(props[/* rootEl */1], channel[/* id */0]);
	              }, 100);
	          break;
	      case 4 : 
	          var sortedChannels = List.sort(function (a, b) {
	                return Caml_string.caml_string_compare(a[/* title */1], b[/* title */1]);
	              }, newState[/* channels */5]);
	          var channel$1 = List.nth(sortedChannels, action[0]);
	          setTimeout(function () {
	                return scrollToLatestMessage(props[/* rootEl */1], channel$1[/* id */0]);
	              }, 100);
	          break;
	      case 7 : 
	          throw [
	                Caml_builtin_exceptions.match_failure,
	                [
	                  "/Users/s/tmp/kandan/src/kandan/kandan.re",
	                  132,
	                  4
	                ]
	              ];
	      case 10 : 
	          var channel$2 = action[0];
	          setTimeout(function () {
	                return scrollToLatestMessage(props[/* rootEl */1], channel$2[/* id */0]);
	              }, 100);
	          break;
	      case 11 : 
	          Utils.setPageTitle(action[0]);
	          break;
	      case 12 : 
	      case 13 : 
	      case 14 : 
	          break;
	      case 15 : 
	          console.log(action[0]);
	          break;
	      case 16 : 
	          window.alert(action[0]);
	          break;
	      default:
	        
	    }
	  }
	  return /* () */0;
	}

	function notAEventlessAction(action) {
	  return [
	          Caml_builtin_exceptions.failure,
	          State.stringOfAction(action) + " is not an eventless action, you must add it to the dispatchEventless switch"
	        ];
	}

	function dispatchEventless(action, componentBag, _) {
	  console.log("New EL action: " + State.stringOfAction(action));
	  var newState;
	  if (typeof action === "number") {
	    newState = volumeMuteToggled(componentBag);
	  } else {
	    switch (action.tag | 0) {
	      case 0 : 
	          newState = searchFormFocused(componentBag, action[0]);
	          break;
	      case 1 : 
	          newState = sidebarToggled(componentBag, action[0], action[1]);
	          break;
	      case 2 : 
	          newState = searchUpdated(componentBag, action[0]);
	          break;
	      case 3 : 
	          newState = channelSelected(componentBag, action[0]);
	          break;
	      case 4 : 
	          var sortedChannels = List.sort(function (a, b) {
	                return Caml_string.caml_string_compare(a[/* title */1], b[/* title */1]);
	              }, componentBag[/* state */0][/* channels */5]);
	          newState = channelSelected(componentBag, List.nth(sortedChannels, action[0]));
	          break;
	      case 5 : 
	          newState = songSelected(componentBag, action[0], action[1]);
	          break;
	      case 6 : 
	          newState = mediaStateUpdated(componentBag, action[0], action[1]);
	          break;
	      case 7 : 
	          throw [
	                Caml_builtin_exceptions.match_failure,
	                [
	                  "/Users/s/tmp/kandan/src/kandan/kandan.re",
	                  172,
	                  6
	                ]
	              ];
	      case 8 : 
	          newState = chatBoxFocused(componentBag, action[0]);
	          break;
	      case 9 : 
	          newState = userMenuToggled(componentBag, action[0]);
	          break;
	      case 10 : 
	          newState = msgSubmitted(componentBag, action[0], action[1], action[2]);
	          break;
	      case 11 : 
	          throw notAEventlessAction(action);
	      case 12 : 
	          newState = volumeSet(componentBag, action[0]);
	          break;
	      case 13 : 
	          newState = volumeIncremented(componentBag, action[0]);
	          break;
	      case 14 : 
	          newState = volumeDecremented(componentBag, action[0]);
	          break;
	      case 15 : 
	      case 16 : 
	          newState = /* None */0;
	          break;
	      
	    }
	  }
	  var state = componentBag[/* state */0];
	  processEffects(componentBag, action, state, newState ? newState[0] : state);
	  return newState;
	}

	function killEventAndRedispatch(action, componentBag, $$event) {
	  $$event.preventDefault();
	  return dispatchEventless(action, componentBag, /* () */0);
	}

	function dispatchEventful(action, componentBag, $$event) {
	  console.log("New EF action: " + State.stringOfAction(action));
	  var match;
	  var exit = 0;
	  if (typeof action === "number") {
	    if (action) {
	      match = /* tuple */[
	        /* true */1,
	        dispatchEventless(action, componentBag, /* () */0)
	      ];
	    } else {
	      exit = 1;
	    }
	  } else {
	    switch (action.tag | 0) {
	      case 13 : 
	      case 14 : 
	          exit = 1;
	          break;
	      default:
	        match = /* tuple */[
	          /* true */1,
	          dispatchEventless(action, componentBag, /* () */0)
	        ];
	    }
	  }
	  if (exit === 1) {
	    match = /* tuple */[
	      /* true */1,
	      killEventAndRedispatch(action, componentBag, $$event)
	    ];
	  }
	  var newState = match[1];
	  if (!match[0]) {
	    processEffects(componentBag, action, componentBag[/* state */0], newState ? newState[0] : componentBag[/* state */0]);
	  }
	  return newState;
	}

	function render(param) {
	  var state = param[/* state */0];
	  List.sort(function (a, b) {
	        return Caml_string.caml_string_compare(a[/* title */1], b[/* title */1]);
	      }, state[/* channels */5]);
	  var currentChannel = List.find(function (channel) {
	        return +(channel[/* id */0] === state[/* selectedChannelId */2]);
	      }, state[/* channels */5]);
	  var $js;
	  try {
	    $js = /* SongSelected */Block.__(5, [
	        currentChannel,
	        Utils.findNextMedia(currentChannel, -1)
	      ]);
	  }
	  catch (exn){
	    $js = /* Log */Block.__(15, ["No previous media in channel"]);
	  }
	  var $js$1;
	  try {
	    $js$1 = /* SongSelected */Block.__(5, [
	        currentChannel,
	        Utils.findNextMedia(currentChannel, 1)
	      ]);
	  }
	  catch (exn$1){
	    $js$1 = /* Log */Block.__(15, ["No previous media in channel"]);
	  }
	  var match = currentChannel[/* mediaState */6];
	  var $js$2;
	  switch (match) {
	    case 0 : 
	        $js$2 = /* Paused */1;
	        break;
	    case 1 : 
	        $js$2 = /* Playing */0;
	        break;
	    case 2 : 
	        $js$2 = /* NotLoaded */2;
	        break;
	    
	  }
	  var match$1 = Utils.findMeOpt(state);
	  if (!match$1) {
	    throw [
	          Caml_builtin_exceptions.assert_failure,
	          [
	            "kandan.re",
	            300,
	            16
	          ]
	        ];
	  }
	  List.map(function (channel) {
	        var partial_arg = channel[/* mediaState */6];
	        var match = +(channel[/* id */0] === currentChannel[/* id */0]);
	        var partial_arg$1 = match !== 0 ? state[/* volume */11] : 0.0;
	        var partial_arg$2 = channel[/* id */0];
	        var func = function (param) {
	          return Audio_player.createElement(channel, partial_arg$2, partial_arg$1, partial_arg, param);
	        };
	        var arg = /* Some */[Pervasives.string_of_int(channel[/* id */0])];
	        return function (param) {
	          return Curry._5(func, param, /* [] */0, /* None */0, arg, /* () */0);
	        };
	      }, state[/* channels */5]);
	  return React.createElement("div", {
	              id: "app",
	              style: fullHeight
	            }, Curry._4(Wip.createElement("Hi there", param[/* props */1][/* rootEl */1]), /* [] */0, /* None */0, /* None */0, /* () */0));
	}

	function componentDidMount(componentBag) {
	  var state = componentBag[/* state */0];
	  var currentChannel = List.find(function (channel) {
	        return +(channel[/* id */0] === state[/* selectedChannelId */2]);
	      }, state[/* channels */5]);
	  setTimeout(function () {
	        return processEffects(componentBag, /* ChannelSelected */Block.__(3, [currentChannel]), state, state);
	      }, 250);
	  processEffects(componentBag, /* AppTitleUpdated */Block.__(11, [
	          state[/* title */10],
	          0
	        ]), state, state);
	  return /* None */0;
	}

	function componentDidUpdate(_, prevState, componentBag) {
	  var state = componentBag[/* state */0];
	  if (state[/* title */10] !== prevState[/* title */10]) {
	    processEffects(componentBag, /* AppTitleUpdated */Block.__(11, [
	            state[/* title */10],
	            0
	          ]), state, state);
	  }
	  return /* None */0;
	}

	var Kandan_005 = /* JsProps */include[7];

	var Kandan_006 = /* InstanceVars */include[8];

	var Kandan = /* module */[
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars,
	  /* jsPropsToReasonProps */jsPropsToReasonProps,
	  Kandan_005,
	  Kandan_006,
	  /* name */name,
	  /* getInitialState */getInitialState,
	  /* sidebarToggled */sidebarToggled,
	  /* searchUpdated */searchUpdated,
	  /* volumeSet */volumeSet,
	  /* volumeDecremented */volumeDecremented,
	  /* volumeIncremented */volumeIncremented,
	  /* volumeMuteToggled */volumeMuteToggled,
	  /* channelSelected */channelSelected,
	  /* songSelected */songSelected,
	  /* mediaStateUpdated */mediaStateUpdated,
	  /* chatBoxFocused */chatBoxFocused,
	  /* searchFormFocused */searchFormFocused,
	  /* userMenuToggled */userMenuToggled,
	  /* msgSubmitted */msgSubmitted,
	  /* processEffects */processEffects,
	  /* notAEventlessAction */notAEventlessAction,
	  /* dispatchEventless */dispatchEventless,
	  /* killEventAndRedispatch */killEventAndRedispatch,
	  /* dispatchEventful */dispatchEventful,
	  /* render */render,
	  /* componentDidMount */componentDidMount,
	  /* componentDidUpdate */componentDidUpdate
	];

	var include$1 = ReactRe.CreateComponent([
	      name,
	      getInstanceVars,
	      getInitialState,
	      componentDidMount,
	      componentWillReceiveProps,
	      componentWillUpdate,
	      componentDidUpdate,
	      componentWillUnmount,
	      jsPropsToReasonProps,
	      render
	    ]);

	var wrapProps = include$1[1];

	function createElement(message, rootEl) {
	  return Curry._1(wrapProps, /* record */[
	              /* message */message,
	              /* rootEl */rootEl
	            ]);
	}

	var comp = include$1[0];

	exports.fullHeight            = fullHeight;
	exports.scrollToLatestMessage = scrollToLatestMessage;
	exports.toggleSearchForm      = toggleSearchForm;
	exports.Kandan                = Kandan;
	exports.comp                  = comp;
	exports.wrapProps             = wrapProps;
	exports.createElement         = createElement;
	/* include Not a pure module */


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Demo                    = __webpack_require__(72);
	var List                    = __webpack_require__(5);
	var $$Array                 = __webpack_require__(24);
	var Block                   = __webpack_require__(7);
	var Curry                   = __webpack_require__(1);
	var State                   = __webpack_require__(73);
	var Utils                   = __webpack_require__(4);
	var React                   = __webpack_require__(41);
	var $$String                = __webpack_require__(20);
	var Chatbox                 = __webpack_require__(228);
	var Plugins                 = __webpack_require__(225);
	var ReactRe                 = __webpack_require__(71);
	var Key_queue               = __webpack_require__(224);
	var Caml_array              = __webpack_require__(2);
	var Caml_float              = __webpack_require__(223);
	var Pervasives              = __webpack_require__(8);
	var Caml_string             = __webpack_require__(15);
	var Audio_player            = __webpack_require__(76);
	var Caml_builtin_exceptions = __webpack_require__(3);

	var cursorPointer = {
	  cursor: "pointer"
	};

	function scrollToLatestMessage(target, channelId) {
	  var match = target.querySelector("#channels-" + Pervasives.string_of_int(channelId));
	  if (match !== null) {
	    var activities = Array.prototype.slice.call(target.querySelectorAll("#channels-" + (Pervasives.string_of_int(channelId) + "\n  .activity")));
	    if (activities.length !== 0) {
	      var latest = Caml_array.caml_array_get(activities, activities.length - 1 | 0);
	      match.scrollTop = latest.offsetTop;
	      return /* () */0;
	    } else {
	      return /* () */0;
	    }
	  } else {
	    return /* () */0;
	  }
	}

	function toggleSearchForm(rootEl, selector, $$event) {
	  var match = rootEl.querySelector(selector);
	  if (match !== null) {
	    if ($$event !== 0) {
	      match.focus();
	      return /* () */0;
	    } else {
	      match.blur();
	      return /* () */0;
	    }
	  } else {
	    return /* () */0;
	  }
	}

	var menuItem = {
	  display: "flex",
	  height: "4rem",
	  padding: "1.5rem",
	  alignItems: "center"
	};

	var menuIcon = {
	  display: "flex",
	  height: "4rem",
	  width: "4rem",
	  alignItems: "center",
	  justifyContent: "center"
	};

	var annexGroup = {
	  marginBottom: "1.5rem"
	};

	var annexTitle = {
	  display: "flex",
	  fontSize: "1.5rem",
	  lineHeight: "1",
	  marginTop: ".5rem",
	  marginBottom: ".5rem",
	  padding: "0 1.5rem",
	  alignItems: "center"
	};

	var annexItem = {
	  display: "flex",
	  padding: ".25rem 1.5rem",
	  alignItems: "center"
	};

	function text(prim) {
	  return prim;
	}

	var include = ReactRe.Component[/* Stateful */8];

	var componentDidMount = include[0];

	var componentWillUpdate = include[1];

	var componentDidUpdate = include[2];

	var componentWillReceiveProps = include[3];

	var componentWillUnmount = include[4];

	var getInstanceVars = include[5];

	var jsPropsToReasonProps = include[6];

	var name = "Wip";

	function getInitialState() {
	  return Demo.state;
	}

	function sidebarToggled(param, which, opened) {
	  var state = param[/* state */0];
	  if (which !== 0) {
	    var newrecord = state.slice();
	    return /* Some */[(newrecord[/* rightSidebarOpen */0] = opened, newrecord)];
	  } else {
	    var newrecord$1 = state.slice();
	    return /* Some */[(newrecord$1[/* leftSidebarOpen */1] = opened, newrecord$1)];
	  }
	}

	function searchUpdated(param, needle) {
	  var state = param[/* state */0];
	  if (needle) {
	    var search = needle[0];
	    if (search === "") {
	      var newrecord = state.slice();
	      return /* Some */[(newrecord[/* search */9] = /* None */0, newrecord)];
	    } else {
	      var newrecord$1 = state.slice();
	      return /* Some */[(newrecord$1[/* search */9] = /* Some */[search], newrecord$1)];
	    }
	  } else {
	    var newrecord$2 = state.slice();
	    return /* Some */[(newrecord$2[/* search */9] = /* None */0, newrecord$2)];
	  }
	}

	function volumeSet(param, volume) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  return /* Some */[(newrecord[/* volume */11] = volume, newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function volumeDecremented(param, delta) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  return /* Some */[(newrecord[/* volume */11] = Pervasives.max(0.0, state[/* volume */11] - delta), newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function volumeIncremented(param, delta) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  return /* Some */[(newrecord[/* volume */11] = Pervasives.min(1.0, state[/* volume */11] + delta), newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function volumeMuteToggled(param) {
	  var state = param[/* state */0];
	  var newrecord = state.slice();
	  var match = +(state[/* volume */11] === 0.0);
	  newrecord[/* volume */11] = match !== 0 ? state[/* lastVolume */12] : 0.0;
	  return /* Some */[(newrecord[/* lastVolume */12] = state[/* volume */11], newrecord)];
	}

	function channelSelected(param, channel) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* selectedChannelId */2] = channel[/* id */0], newrecord[/* title */10] = channel[/* title */1] + " - Kandan", newrecord)];
	}

	function songSelected(param, channel, media) {
	  var state = param[/* state */0];
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var newrecord = currentChannel.slice();
	  newrecord[/* media */5] = media;
	  var newChannels = List.append(otherChannels, /* :: */[
	        newrecord,
	        /* [] */0
	      ]);
	  var newrecord$1 = state.slice();
	  return /* Some */[(newrecord$1[/* channels */5] = newChannels, newrecord$1)];
	}

	function mediaStateUpdated(param, channel, newState) {
	  var state = param[/* state */0];
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var newChannel;
	  if (newState !== 0) {
	    var newrecord = currentChannel.slice();
	    newrecord[/* media */5] = currentChannel[/* media */5];
	    newrecord[/* mediaState */6] = newState;
	    newChannel = newrecord;
	  } else {
	    var match = currentChannel[/* media */5][/* src */1];
	    var match$1 = List.length(currentChannel[/* playlist */8]);
	    var media = match || match$1 === 0 ? currentChannel[/* media */5] : List.nth(currentChannel[/* playlist */8], 0);
	    var newrecord$1 = currentChannel.slice();
	    newrecord$1[/* media */5] = media;
	    newrecord$1[/* mediaState */6] = newState;
	    newChannel = newrecord$1;
	  }
	  var newChannels = List.append(otherChannels, /* :: */[
	        newChannel,
	        /* [] */0
	      ]);
	  var newrecord$2 = state.slice();
	  return /* Some */[(newrecord$2[/* channels */5] = newChannels, newrecord$2)];
	}

	function mediaProgressUpdated(param, channel, progress, duration) {
	  var state = param[/* state */0];
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var init = currentChannel[/* media */5];
	  var media_000 = /* order */init[/* order */0];
	  var media_001 = /* src */init[/* src */1];
	  var media_002 = /* duration : Some */[duration];
	  var media = /* record */[
	    media_000,
	    media_001,
	    media_002
	  ];
	  var newrecord = currentChannel.slice();
	  newrecord[/* media */5] = media;
	  newrecord[/* mediaProgress */7] = progress;
	  var newChannels = List.append(otherChannels, /* :: */[
	        newrecord,
	        /* [] */0
	      ]);
	  var newrecord$1 = state.slice();
	  return /* Some */[(newrecord$1[/* channels */5] = newChannels, newrecord$1)];
	}

	function chatBoxFocused(param, focused) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* userMessageFocused */6] = focused, newrecord)];
	}

	function searchFormFocused(param, focused) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* searchFormFocused */7] = focused, newrecord)];
	}

	function userMenuToggled(param, opened) {
	  var newrecord = param[/* state */0].slice();
	  return /* Some */[(newrecord[/* userMenuOpen */8] = opened, newrecord)];
	}

	function msgSubmitted(param, channel, _, msg) {
	  var state = param[/* state */0];
	  var newMsg_000 = /* content */msg[/* content */0].trim();
	  var newMsg_001 = /* userId */msg[/* userId */1];
	  var newMsg_002 = /* createdAt */msg[/* createdAt */2];
	  var newMsg = /* record */[
	    newMsg_000,
	    newMsg_001,
	    newMsg_002
	  ];
	  var match = newMsg_000.indexOf("/queue");
	  var mediaToQueue;
	  if (match !== 0) {
	    mediaToQueue = /* None */0;
	  } else {
	    var parts = newMsg_000.split((/ /));
	    var match$1 = parts.length;
	    if (match$1 !== 0) {
	      mediaToQueue = match$1 !== 1 ? /* Some */[/* record */[
	            /* order */List.length(channel[/* playlist */8]),
	            /* src : Some */[Caml_array.caml_array_get(parts, 1)],
	            /* duration : None */0
	          ]] : /* None */0;
	    } else {
	      throw [
	            Caml_builtin_exceptions.assert_failure,
	            [
	              "wip.re",
	              248,
	              15
	            ]
	          ];
	    }
	  }
	  var currentChannel = List.find(function (haystack) {
	        return +(haystack[/* id */0] === channel[/* id */0]);
	      }, state[/* channels */5]);
	  var otherChannels = List.filter(function (haystack) {
	          return +(haystack[/* id */0] !== channel[/* id */0]);
	        })(state[/* channels */5]);
	  var newrecord = currentChannel.slice();
	  newrecord[/* activities */3] = List.append(currentChannel[/* activities */3], /* :: */[
	        newMsg,
	        /* [] */0
	      ]);
	  newrecord[/* playlist */8] = mediaToQueue ? List.append(currentChannel[/* playlist */8], /* :: */[
	          mediaToQueue[0],
	          /* [] */0
	        ]) : currentChannel[/* playlist */8];
	  var newChannels = List.append(otherChannels, /* :: */[
	        newrecord,
	        /* [] */0
	      ]);
	  var newrecord$1 = state.slice();
	  return /* Some */[(newrecord$1[/* channels */5] = newChannels, newrecord$1)];
	}

	function processEffects(param, action, _, newState) {
	  var props = param[/* props */1];
	  console.log("Processing effect for action: " + State.stringOfAction(action));
	  if (typeof action === "number") {
	    +(action === 0);
	  } else {
	    switch (action.tag | 0) {
	      case 0 : 
	          var focused = action[0];
	          setTimeout(function () {
	                return toggleSearchForm(props[/* rootEl */1], "input.query", focused);
	              }, 100);
	          break;
	      case 3 : 
	          var channel = action[0];
	          setTimeout(function () {
	                return scrollToLatestMessage(props[/* rootEl */1], channel[/* id */0]);
	              }, 100);
	          break;
	      case 4 : 
	          var sortedChannels = List.sort(function (a, b) {
	                return Caml_string.caml_string_compare(a[/* title */1], b[/* title */1]);
	              }, newState[/* channels */5]);
	          var channel$1 = List.nth(sortedChannels, action[0]);
	          setTimeout(function () {
	                return scrollToLatestMessage(props[/* rootEl */1], channel$1[/* id */0]);
	              }, 100);
	          break;
	      case 10 : 
	          var channel$2 = action[0];
	          setTimeout(function () {
	                return scrollToLatestMessage(props[/* rootEl */1], channel$2[/* id */0]);
	              }, 100);
	          break;
	      case 11 : 
	          Utils.setPageTitle(action[0]);
	          break;
	      case 6 : 
	      case 7 : 
	      case 12 : 
	      case 13 : 
	      case 14 : 
	          break;
	      case 15 : 
	          console.log(action[0]);
	          break;
	      case 16 : 
	          window.alert(action[0]);
	          break;
	      default:
	        
	    }
	  }
	  return /* () */0;
	}

	function notAEventlessAction(action) {
	  return [
	          Caml_builtin_exceptions.failure,
	          State.stringOfAction(action) + " is not an eventless action, you must add it to the dispatchEventless switch"
	        ];
	}

	function dispatchEventless(action, componentBag, _) {
	  console.log("New EL action: " + State.stringOfAction(action));
	  var newState;
	  if (typeof action === "number") {
	    newState = volumeMuteToggled(componentBag);
	  } else {
	    switch (action.tag | 0) {
	      case 0 : 
	          newState = searchFormFocused(componentBag, action[0]);
	          break;
	      case 1 : 
	          newState = sidebarToggled(componentBag, action[0], action[1]);
	          break;
	      case 2 : 
	          newState = searchUpdated(componentBag, action[0]);
	          break;
	      case 3 : 
	          newState = channelSelected(componentBag, action[0]);
	          break;
	      case 4 : 
	          var sortedChannels = List.sort(function (a, b) {
	                return Caml_string.caml_string_compare(a[/* title */1], b[/* title */1]);
	              }, componentBag[/* state */0][/* channels */5]);
	          newState = channelSelected(componentBag, List.nth(sortedChannels, action[0]));
	          break;
	      case 5 : 
	          newState = songSelected(componentBag, action[0], action[1]);
	          break;
	      case 6 : 
	          newState = mediaStateUpdated(componentBag, action[0], action[1]);
	          break;
	      case 7 : 
	          newState = mediaProgressUpdated(componentBag, action[0], action[1], action[2]);
	          break;
	      case 8 : 
	          newState = chatBoxFocused(componentBag, action[0]);
	          break;
	      case 9 : 
	          newState = userMenuToggled(componentBag, action[0]);
	          break;
	      case 10 : 
	          newState = msgSubmitted(componentBag, action[0], action[1], action[2]);
	          break;
	      case 11 : 
	          throw notAEventlessAction(action);
	      case 12 : 
	          newState = volumeSet(componentBag, action[0]);
	          break;
	      case 13 : 
	          newState = volumeIncremented(componentBag, action[0]);
	          break;
	      case 14 : 
	          newState = volumeDecremented(componentBag, action[0]);
	          break;
	      case 15 : 
	      case 16 : 
	          newState = /* None */0;
	          break;
	      
	    }
	  }
	  var state = componentBag[/* state */0];
	  processEffects(componentBag, action, state, newState ? newState[0] : state);
	  return newState;
	}

	function killEventAndRedispatch(action, componentBag, $$event) {
	  $$event.preventDefault();
	  return dispatchEventless(action, componentBag, /* () */0);
	}

	function dispatchEventful(action, componentBag, $$event) {
	  console.log("New EF action: " + State.stringOfAction(action));
	  var match;
	  var exit = 0;
	  if (typeof action === "number") {
	    if (action) {
	      match = /* tuple */[
	        /* true */1,
	        dispatchEventless(action, componentBag, /* () */0)
	      ];
	    } else {
	      exit = 1;
	    }
	  } else {
	    switch (action.tag | 0) {
	      case 13 : 
	      case 14 : 
	          exit = 1;
	          break;
	      default:
	        match = /* tuple */[
	          /* true */1,
	          dispatchEventless(action, componentBag, /* () */0)
	        ];
	    }
	  }
	  if (exit === 1) {
	    match = /* tuple */[
	      /* true */1,
	      killEventAndRedispatch(action, componentBag, $$event)
	    ];
	  }
	  var newState = match[1];
	  if (!match[0]) {
	    processEffects(componentBag, action, componentBag[/* state */0], newState ? newState[0] : componentBag[/* state */0]);
	  }
	  return newState;
	}

	function render(param) {
	  var updater = param[/* updater */2];
	  var state = param[/* state */0];
	  var match = Utils.findMeOpt(state);
	  var me;
	  if (match) {
	    me = match[0];
	  } else {
	    throw [
	          Caml_builtin_exceptions.assert_failure,
	          [
	            "wip.re",
	            388,
	            16
	          ]
	        ];
	  }
	  var sortedChannels = List.sort(function (a, b) {
	        return Caml_string.caml_string_compare(a[/* title */1], b[/* title */1]);
	      }, state[/* channels */5]);
	  var currentChannel = List.find(function (channel) {
	        return +(channel[/* id */0] === state[/* selectedChannelId */2]);
	      }, state[/* channels */5]);
	  var activities = $$Array.of_list(List.sort(function (a, b) {
	            return Caml_float.caml_float_compare(a[/* createdAt */2], b[/* createdAt */2]);
	          }, currentChannel[/* activities */3]));
	  var $js;
	  try {
	    $js = /* SongSelected */Block.__(5, [
	        currentChannel,
	        Utils.findNextMedia(currentChannel, -1)
	      ]);
	  }
	  catch (exn){
	    $js = /* Log */Block.__(15, ["No previous media in channel"]);
	  }
	  var $js$1;
	  try {
	    $js$1 = /* SongSelected */Block.__(5, [
	        currentChannel,
	        Utils.findNextMedia(currentChannel, 1)
	      ]);
	  }
	  catch (exn$1){
	    $js$1 = /* Log */Block.__(15, ["No previous media in channel"]);
	  }
	  var match$1 = currentChannel[/* mediaState */6];
	  var $js$2;
	  switch (match$1) {
	    case 0 : 
	        $js$2 = /* Paused */1;
	        break;
	    case 1 : 
	        $js$2 = /* Playing */0;
	        break;
	    case 2 : 
	        $js$2 = /* NotLoaded */2;
	        break;
	    
	  }
	  var keyMap_000 = /* tuple */[
	    /* :: */[
	      "ctrl+esc",
	      /* [] */0
	    ],
	    /* Log */Block.__(15, ["ctrl esc yo!"])
	  ];
	  var keyMap_001 = /* :: */[
	    /* tuple */[
	      /* :: */[
	        "ctrl+?",
	        /* [] */0
	      ],
	      /* UserMenuToggled */Block.__(9, [state[/* userMenuOpen */8]])
	    ],
	    /* :: */[
	      /* tuple */[
	        /* :: */[
	          "/",
	          /* [] */0
	        ],
	        /* SearchFormFocused */Block.__(0, [/* true */1])
	      ],
	      /* :: */[
	        /* tuple */[
	          /* :: */[
	            "ctrl+-",
	            /* [] */0
	          ],
	          /* VolumeDecremented */Block.__(14, [0.1])
	        ],
	        /* :: */[
	          /* tuple */[
	            /* :: */[
	              "ctrl+shift+<",
	              /* [] */0
	            ],
	            $js
	          ],
	          /* :: */[
	            /* tuple */[
	              /* :: */[
	                "ctrl+shift+>",
	                /* [] */0
	              ],
	              $js$1
	            ],
	            /* :: */[
	              /* tuple */[
	                /* :: */[
	                  "ctrl+p",
	                  /* [] */0
	                ],
	                /* MediaStateUpdated */Block.__(6, [
	                    currentChannel,
	                    $js$2
	                  ])
	              ],
	              /* :: */[
	                /* tuple */[
	                  /* :: */[
	                    "ctrl+shift+=",
	                    /* [] */0
	                  ],
	                  /* VolumeIncremented */Block.__(13, [0.1])
	                ],
	                /* :: */[
	                  /* tuple */[
	                    /* :: */[
	                      "ctrl+1",
	                      /* [] */0
	                    ],
	                    /* ChannelSelectedByIndex */Block.__(4, [0])
	                  ],
	                  /* :: */[
	                    /* tuple */[
	                      /* :: */[
	                        "ctrl+2",
	                        /* [] */0
	                      ],
	                      /* ChannelSelectedByIndex */Block.__(4, [1])
	                    ],
	                    /* :: */[
	                      /* tuple */[
	                        /* :: */[
	                          "ctrl+3",
	                          /* [] */0
	                        ],
	                        /* ChannelSelectedByIndex */Block.__(4, [2])
	                      ],
	                      /* :: */[
	                        /* tuple */[
	                          /* :: */[
	                            "ctrl+4",
	                            /* [] */0
	                          ],
	                          /* ChannelSelectedByIndex */Block.__(4, [3])
	                        ],
	                        /* :: */[
	                          /* tuple */[
	                            /* :: */[
	                              "ctrl+5",
	                              /* [] */0
	                            ],
	                            /* ChannelSelectedByIndex */Block.__(4, [4])
	                          ],
	                          /* :: */[
	                            /* tuple */[
	                              /* :: */[
	                                "ctrl+6",
	                                /* [] */0
	                              ],
	                              /* ChannelSelectedByIndex */Block.__(4, [5])
	                            ],
	                            /* :: */[
	                              /* tuple */[
	                                /* :: */[
	                                  "ctrl+7",
	                                  /* [] */0
	                                ],
	                                /* ChannelSelectedByIndex */Block.__(4, [6])
	                              ],
	                              /* :: */[
	                                /* tuple */[
	                                  /* :: */[
	                                    "ctrl+8",
	                                    /* [] */0
	                                  ],
	                                  /* ChannelSelectedByIndex */Block.__(4, [7])
	                                ],
	                                /* :: */[
	                                  /* tuple */[
	                                    /* :: */[
	                                      "ctrl+9",
	                                      /* [] */0
	                                    ],
	                                    /* ChannelSelectedByIndex */Block.__(4, [9])
	                                  ],
	                                  /* :: */[
	                                    /* tuple */[
	                                      /* :: */[
	                                        "ctrl+0",
	                                        /* [] */0
	                                      ],
	                                      /* VolumeMuteToggled */0
	                                    ],
	                                    /* :: */[
	                                      /* tuple */[
	                                        /* :: */[
	                                          "esc",
	                                          /* [] */0
	                                        ],
	                                        /* SearchFormFocused */Block.__(0, [/* false */0])
	                                      ],
	                                      /* :: */[
	                                        /* tuple */[
	                                          /* :: */[
	                                            "ctrl+shift+esc",
	                                            /* [] */0
	                                          ],
	                                          /* Alert */Block.__(16, ["ctrl shift esc yo!"])
	                                        ],
	                                        /* :: */[
	                                          /* tuple */[
	                                            /* :: */[
	                                              "up",
	                                              /* :: */[
	                                                "up",
	                                                /* :: */[
	                                                  "down",
	                                                  /* :: */[
	                                                    "down",
	                                                    /* :: */[
	                                                      "left",
	                                                      /* :: */[
	                                                        "right",
	                                                        /* :: */[
	                                                          "left",
	                                                          /* :: */[
	                                                            "right",
	                                                            /* :: */[
	                                                              "a",
	                                                              /* :: */[
	                                                                "b",
	                                                                /* [] */0
	                                                              ]
	                                                            ]
	                                                          ]
	                                                        ]
	                                                      ]
	                                                    ]
	                                                  ]
	                                                ]
	                                              ]
	                                            ],
	                                            /* Alert */Block.__(16, ["Konami code!"])
	                                          ],
	                                          /* [] */0
	                                        ]
	                                      ]
	                                    ]
	                                  ]
	                                ]
	                              ]
	                            ]
	                          ]
	                        ]
	                      ]
	                    ]
	                  ]
	                ]
	              ]
	            ]
	          ]
	        ]
	      ]
	    ]
	  ];
	  var keyMap = /* :: */[
	    keyMap_000,
	    keyMap_001
	  ];
	  var dispatchEL = function (action) {
	    return Curry._1(updater, function (param, param$1) {
	                return dispatchEventless(action, param, param$1);
	              });
	  };
	  var audioChannels = $$Array.of_list(List.map(function (channel) {
	            var match = +(channel[/* id */0] === currentChannel[/* id */0]);
	            return Curry._4(Audio_player.createElement(channel, channel[/* id */0], match !== 0 ? state[/* volume */11] : 0.0, channel[/* mediaState */6], function (el) {
	                            var duration = el.duration;
	                            var currentTime = el.currentTime;
	                            var partial_arg = /* MediaProgressUpdated */Block.__(7, [
	                                currentChannel,
	                                currentTime,
	                                duration
	                              ]);
	                            return Curry._2(updater, function (param, param$1) {
	                                        return dispatchEventless(partial_arg, param, param$1);
	                                      }, /* () */0);
	                          }), /* [] */0, /* None */0, /* Some */[Pervasives.string_of_int(channel[/* id */0])], /* () */0);
	          }, state[/* channels */5]));
	  var userEntry = function (user) {
	    return React.createElement("li", {
	                key: Pervasives.string_of_int(user[/* id */0]),
	                className: "user",
	                title: Utils.nameOfUser(user)
	              }, React.createElement("img", {
	                    className: "avatar",
	                    src: Utils.gravatarUrl(/* None */0, /* None */0, user[/* email */1])
	                  }), React.createElement("span", undefined, Utils.nameOfUser(user)));
	  };
	  var channelEntry = function (channel) {
	    var channelUsers = List.sort(function (a, b) {
	          return Caml_string.caml_string_compare($$String.lowercase(Utils.nameOfUser(a)), $$String.lowercase(Utils.nameOfUser(b)));
	        }, List.filter(function (user) {
	                return Curry._2(State.UserIdSet[/* mem */2], user[/* id */0], channel[/* userIds */4]);
	              })(state[/* users */4]));
	    return React.createElement("div", {
	                className: "menu-item",
	                onClick: function () {
	                  var partial_arg = /* ChannelSelected */Block.__(3, [channel]);
	                  return Curry._2(updater, function (param, param$1) {
	                              return dispatchEventless(partial_arg, param, param$1);
	                            }, /* () */0);
	                }
	              }, channel[/* title */1], React.createElement("ul", {
	                    className: "channel-users-list"
	                  }, ReactRe.listToElement(List.map(userEntry, channelUsers))));
	  };
	  var songEntry = function (media) {
	    return React.createElement("li", {
	                className: "menu-item",
	                onClick: function () {
	                  var partial_arg = /* SongSelected */Block.__(5, [
	                      currentChannel,
	                      media
	                    ]);
	                  return Curry._2(updater, function (param, param$1) {
	                              return dispatchEventless(partial_arg, param, param$1);
	                            }, /* () */0);
	                }
	              }, React.createElement("div", {
	                    className: "menu-thumbnail"
	                  }, React.createElement("img", {
	                        src: "https://placehold.it/64"
	                      })), React.createElement("div", {
	                    className: "menu-text"
	                  }, Utils.mediaSrcToTitle(media)));
	  };
	  var match$2 = currentChannel[/* mediaState */6];
	  var $js$3;
	  switch (match$2) {
	    case 0 : 
	        $js$3 = " || ";
	        break;
	    case 1 : 
	    case 2 : 
	        $js$3 = " > ";
	        break;
	    
	  }
	  var seconds = currentChannel[/* mediaProgress */7] % 60 | 0;
	  var match$3 = +(seconds < 10);
	  var match$4 = currentChannel[/* media */5][/* duration */2];
	  var $js$4;
	  if (match$4) {
	    var duration = match$4[0];
	    var seconds$1 = duration % 60 | 0;
	    var match$5 = +(seconds$1 < 10);
	    $js$4 = Pervasives.string_of_int(duration / 60 | 0) + (":" + ((
	          match$5 !== 0 ? "0" : ""
	        ) + Pervasives.string_of_int(seconds$1)));
	  } else {
	    $js$4 = "Not Loaded";
	  }
	  return React.createElement("div", {
	              className: "container"
	            }, audioChannels, Curry._4(Key_queue.createElement(keyMap, dispatchEL, /* None */0, /* None */0), /* [] */0, /* None */0, /* None */0, /* () */0), React.createElement("div", {
	                  className: "main"
	                }, React.createElement("div", {
	                      className: "menu left"
	                    }, React.createElement("div", {
	                          className: "menu-items channels"
	                        }, ReactRe.listToElement(List.map(channelEntry, sortedChannels)))), React.createElement("div", {
	                      className: "chat"
	                    }, React.createElement("div", {
	                          className: "chat-feed"
	                        }, $$Array.map(function (activity) {
	                              var user = List.find(function (user) {
	                                    return +(user[/* id */0] === activity[/* userId */1]);
	                                  }, state[/* users */4]);
	                              var match = Plugins.renderableOfMessage(me, state[/* users */4], currentChannel, activity);
	                              return React.createElement("div", undefined, React.createElement("img", {
	                                              className: "avatar",
	                                              src: Utils.gravatarUrl(/* None */0, /* None */0, user[/* email */1])
	                                            }), match[0], React.createElement("div", {
	                                              className: "media-container"
	                                            }, match[1]));
	                            }, activities)), Curry._4(Chatbox.createElement(currentChannel, state[/* users */4], function (channel, msg) {
	                              var partial_arg = /* MsgSubmitted */Block.__(10, [
	                                  channel,
	                                  me,
	                                  msg
	                                ]);
	                              return Curry._2(updater, function (param, param$1) {
	                                          return dispatchEventless(partial_arg, param, param$1);
	                                        }, /* () */0);
	                            }, me, function (focused) {
	                              var partial_arg = /* ChatBoxFocused */Block.__(8, [focused]);
	                              return Curry._2(updater, function (param, param$1) {
	                                          return dispatchEventless(partial_arg, param, param$1);
	                                        }, /* () */0);
	                            }), /* [] */0, /* None */0, /* None */0, /* () */0)), React.createElement("div", {
	                      className: "menu right"
	                    }, React.createElement("div", {
	                          className: "menu-items songs"
	                        }, React.createElement("ul", undefined, ReactRe.listToElement(List.map(songEntry, currentChannel[/* playlist */8])))))), React.createElement("div", {
	                  className: "player"
	                }, React.createElement("div", {
	                      className: "left controls"
	                    }, React.createElement("span", {
	                          onClick: function () {
	                            var action_001 = Utils.findNextMedia(currentChannel, -1);
	                            var action = /* SongSelected */Block.__(5, [
	                                currentChannel,
	                                action_001
	                              ]);
	                            return Curry._1(Curry._1(updater, function (param, param$1) {
	                                            return dispatchEventless(action, param, param$1);
	                                          }), /* () */0);
	                          }
	                        }, "<<"), React.createElement("span", {
	                          onClick: function () {
	                            var match = currentChannel[/* mediaState */6];
	                            var newState;
	                            switch (match) {
	                              case 0 : 
	                                  newState = /* Paused */1;
	                                  break;
	                              case 1 : 
	                                  newState = /* Playing */0;
	                                  break;
	                              case 2 : 
	                                  newState = /* NotLoaded */2;
	                                  break;
	                              
	                            }
	                            var partial_arg = /* MediaStateUpdated */Block.__(6, [
	                                currentChannel,
	                                newState
	                              ]);
	                            return Curry._2(updater, function (param, param$1) {
	                                        return dispatchEventless(partial_arg, param, param$1);
	                                      }, /* () */0);
	                          }
	                        }, $js$3), React.createElement("span", {
	                          onClick: function () {
	                            var action_001 = Utils.findNextMedia(currentChannel, 1);
	                            var action = /* SongSelected */Block.__(5, [
	                                currentChannel,
	                                action_001
	                              ]);
	                            return Curry._1(Curry._1(updater, function (param, param$1) {
	                                            return dispatchEventless(action, param, param$1);
	                                          }), /* () */0);
	                          }
	                        }, ">>")), React.createElement("div", {
	                      className: "current"
	                    }, React.createElement("div", {
	                          className: "album"
	                        }, React.createElement("img", {
	                              className: "album-art",
	                              src: "https://placehold.it/64"
	                            })), React.createElement("div", {
	                          className: "info"
	                        }, React.createElement("div", {
	                              className: "title"
	                            }, Utils.mediaSrcToTitle(currentChannel[/* media */5])), React.createElement("div", {
	                              className: "progress"
	                            }, React.createElement("div", {
	                                  className: "elapsed"
	                                }, Pervasives.string_of_int(currentChannel[/* mediaProgress */7] / 60 | 0) + (":" + ((
	                                      match$3 !== 0 ? "0" : ""
	                                    ) + Pervasives.string_of_int(seconds)))), React.createElement("div", {
	                                  className: "timeline slider"
	                                }, React.createElement("div", {
	                                      className: "track"
	                                    }, React.createElement("div", {
	                                          className: "spent",
	                                          style: {
	                                            width: Pervasives.string_of_float(Utils.channelMediaProgress(currentChannel, currentChannel[/* media */5])) + "%"
	                                          }
	                                        })), React.createElement("div", {
	                                      className: "thumb"
	                                    })), React.createElement("div", {
	                                  className: "playtime"
	                                }, $js$4)), React.createElement("div", {
	                              className: "artist"
	                            }, "artist name (Probably can't get this)"))), React.createElement("div", {
	                      className: "right controls"
	                    }, React.createElement("div", {
	                          className: "mute"
	                        }, "<))"), React.createElement("div", {
	                          className: "volume slider"
	                        }, React.createElement("div", {
	                              className: "track"
	                            }, React.createElement("div", {
	                                  className: "spent",
	                                  style: {
	                                    width: Pervasives.string_of_float(state[/* volume */11] * 100.0) + "%"
	                                  }
	                                })), React.createElement("div", {
	                              className: "thumb"
	                            })))));
	}

	var Wip_007 = /* JsProps */include[7];

	var Wip_008 = /* InstanceVars */include[8];

	var Wip = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars,
	  /* jsPropsToReasonProps */jsPropsToReasonProps,
	  Wip_007,
	  Wip_008,
	  /* name */name,
	  /* getInitialState */getInitialState,
	  /* sidebarToggled */sidebarToggled,
	  /* searchUpdated */searchUpdated,
	  /* volumeSet */volumeSet,
	  /* volumeDecremented */volumeDecremented,
	  /* volumeIncremented */volumeIncremented,
	  /* volumeMuteToggled */volumeMuteToggled,
	  /* channelSelected */channelSelected,
	  /* songSelected */songSelected,
	  /* mediaStateUpdated */mediaStateUpdated,
	  /* mediaProgressUpdated */mediaProgressUpdated,
	  /* chatBoxFocused */chatBoxFocused,
	  /* searchFormFocused */searchFormFocused,
	  /* userMenuToggled */userMenuToggled,
	  /* msgSubmitted */msgSubmitted,
	  /* processEffects */processEffects,
	  /* notAEventlessAction */notAEventlessAction,
	  /* dispatchEventless */dispatchEventless,
	  /* killEventAndRedispatch */killEventAndRedispatch,
	  /* dispatchEventful */dispatchEventful,
	  /* render */render
	];

	var include$1 = ReactRe.CreateComponent([
	      name,
	      getInstanceVars,
	      getInitialState,
	      componentDidMount,
	      componentWillReceiveProps,
	      componentWillUpdate,
	      componentDidUpdate,
	      componentWillUnmount,
	      jsPropsToReasonProps,
	      render
	    ]);

	var wrapProps = include$1[1];

	function createElement(message, rootEl) {
	  return Curry._1(wrapProps, /* record */[
	              /* message */message,
	              /* rootEl */rootEl
	            ]);
	}

	var comp = include$1[0];

	exports.cursorPointer         = cursorPointer;
	exports.scrollToLatestMessage = scrollToLatestMessage;
	exports.toggleSearchForm      = toggleSearchForm;
	exports.menuItem              = menuItem;
	exports.menuIcon              = menuIcon;
	exports.annexGroup            = annexGroup;
	exports.annexTitle            = annexTitle;
	exports.annexItem             = annexItem;
	exports.text                  = text;
	exports.Wip                   = Wip;
	exports.comp                  = comp;
	exports.wrapProps             = wrapProps;
	exports.createElement         = createElement;
	/* include Not a pure module */


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(42);


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var ReactChildren = __webpack_require__(44);
	var ReactComponent = __webpack_require__(57);
	var ReactPureComponent = __webpack_require__(60);
	var ReactClass = __webpack_require__(61);
	var ReactDOMFactories = __webpack_require__(63);
	var ReactElement = __webpack_require__(48);
	var ReactPropTypes = __webpack_require__(68);
	var ReactVersion = __webpack_require__(69);

	var onlyChild = __webpack_require__(70);
	var warning = __webpack_require__(50);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(64);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 43 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var PooledClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(48);

	var emptyFunction = __webpack_require__(51);
	var traverseAllChildren = __webpack_require__(54);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(46);

	var invariant = __webpack_require__(47);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var ReactCurrentOwner = __webpack_require__(49);

	var warning = __webpack_require__(50);
	var canDefineProperty = __webpack_require__(52);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var REACT_ELEMENT_TYPE = __webpack_require__(53);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(51);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 51 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 53 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(46);

	var ReactCurrentOwner = __webpack_require__(49);
	var REACT_ELEMENT_TYPE = __webpack_require__(53);

	var getIteratorFn = __webpack_require__(55);
	var invariant = __webpack_require__(47);
	var KeyEscapeUtils = __webpack_require__(56);
	var warning = __webpack_require__(50);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 55 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 56 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(46);

	var ReactNoopUpdateQueue = __webpack_require__(58);

	var canDefineProperty = __webpack_require__(52);
	var emptyObject = __webpack_require__(59);
	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var warning = __webpack_require__(50);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var ReactComponent = __webpack_require__(57);
	var ReactNoopUpdateQueue = __webpack_require__(58);

	var emptyObject = __webpack_require__(59);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = ReactPureComponent;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(46),
	    _assign = __webpack_require__(43);

	var ReactComponent = __webpack_require__(57);
	var ReactElement = __webpack_require__(48);
	var ReactPropTypeLocationNames = __webpack_require__(62);
	var ReactNoopUpdateQueue = __webpack_require__(58);

	var emptyObject = __webpack_require__(59);
	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */


	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: 'DEFINE_ONCE',

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;

	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }

	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(48);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(64);
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(49);
	var ReactComponentTreeHook = __webpack_require__(65);
	var ReactElement = __webpack_require__(48);

	var checkReactTypeSpec = __webpack_require__(66);

	var canDefineProperty = __webpack_require__(52);
	var getIteratorFn = __webpack_require__(55);
	var warning = __webpack_require__(50);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      if (typeof type !== 'function' && typeof type !== 'string') {
	        var info = '';
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	        info += getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
	      }
	    }

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(46);

	var ReactCurrentOwner = __webpack_require__(49);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;

	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();

	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };

	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};

	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };

	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };

	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}

	var unmountedIDs = [];

	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },


	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};

	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(46);

	var ReactPropTypeLocationNames = __webpack_require__(62);
	var ReactPropTypesSecret = __webpack_require__(67);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(65);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(65);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 67 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(48);
	var ReactPropTypeLocationNames = __webpack_require__(62);
	var ReactPropTypesSecret = __webpack_require__(67);

	var emptyFunction = __webpack_require__(51);
	var getIteratorFn = __webpack_require__(55);
	var warning = __webpack_require__(50);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        if (props[propName] === null) {
	          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	        }
	        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 69 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.4.2';

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(46);

	var ReactElement = __webpack_require__(48);

	var invariant = __webpack_require__(47);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var List                    = __webpack_require__(5);
	var $$Array                 = __webpack_require__(24);
	var Curry                   = __webpack_require__(1);
	var React                   = __webpack_require__(41);
	var Caml_array              = __webpack_require__(2);
	var Pervasives              = __webpack_require__(8);
	var Js_primitive            = __webpack_require__(35);
	var Caml_builtin_exceptions = __webpack_require__(3);

	var listToElement = $$Array.of_list;

	function wrapPropsInternal(comp, props, wrapPropsHow, children, ref, key, _) {
	  var ref$1 = ref ? ref[0] : undefined;
	  var key$1 = key ? key[0] : undefined;
	  var props$1 = Curry._3(wrapPropsHow, props, ref$1, key$1);
	  if (children) {
	    var match = children[1];
	    var a = children[0];
	    if (match) {
	      var match$1 = match[1];
	      var b = match[0];
	      if (match$1) {
	        var match$2 = match$1[1];
	        var c = match$1[0];
	        if (match$2) {
	          var match$3 = match$2[1];
	          var d = match$2[0];
	          if (match$3) {
	            var match$4 = match$3[1];
	            var e = match$3[0];
	            if (match$4) {
	              var match$5 = match$4[1];
	              var f = match$4[0];
	              if (match$5) {
	                var match$6 = match$5[1];
	                var g = match$5[0];
	                if (match$6) {
	                  var match$7 = match$6[1];
	                  var h = match$6[0];
	                  if (match$7) {
	                    var match$8 = match$7[1];
	                    var i = match$7[0];
	                    if (match$8) {
	                      var match$9 = match$8[1];
	                      var j = match$8[0];
	                      if (match$9) {
	                        var match$10 = match$9[1];
	                        var k = match$9[0];
	                        if (match$10) {
	                          var match$11 = match$10[1];
	                          var l = match$10[0];
	                          if (match$11) {
	                            var match$12 = match$11[1];
	                            var m = match$11[0];
	                            if (match$12) {
	                              var match$13 = match$12[1];
	                              var n = match$12[0];
	                              if (match$13) {
	                                var match$14 = match$13[1];
	                                var o = match$13[0];
	                                if (match$14) {
	                                  var match$15 = match$14[1];
	                                  var p = match$14[0];
	                                  if (match$15) {
	                                    if (match$15[1]) {
	                                      var msg = "Reason allows up to 17 static children (but dynamic children in an array can be unlimited in size); You have " + (Pervasives.string_of_int(List.length(children)) + ", please put them in an array and assign key to the elements. Sorry for the inconvenience!");
	                                      throw [
	                                            Caml_builtin_exceptions.invalid_argument,
	                                            msg
	                                          ];
	                                    } else {
	                                      return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, match$15[0]);
	                                    }
	                                  } else {
	                                    return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
	                                  }
	                                } else {
	                                  return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
	                                }
	                              } else {
	                                return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
	                              }
	                            } else {
	                              return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k, l, m);
	                            }
	                          } else {
	                            return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k, l);
	                          }
	                        } else {
	                          return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j, k);
	                        }
	                      } else {
	                        return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i, j);
	                      }
	                    } else {
	                      return React.createElement(comp, props$1, a, b, c, d, e, f, g, h, i);
	                    }
	                  } else {
	                    return React.createElement(comp, props$1, a, b, c, d, e, f, g, h);
	                  }
	                } else {
	                  return React.createElement(comp, props$1, a, b, c, d, e, f, g);
	                }
	              } else {
	                return React.createElement(comp, props$1, a, b, c, d, e, f);
	              }
	            } else {
	              return React.createElement(comp, props$1, a, b, c, d, e);
	            }
	          } else {
	            return React.createElement(comp, props$1, a, b, c, d);
	          }
	        } else {
	          return React.createElement(comp, props$1, a, b, c);
	        }
	      } else {
	        return React.createElement(comp, props$1, a, b);
	      }
	    } else {
	      return React.createElement(comp, props$1, a);
	    }
	  } else {
	    return React.createElement(comp, props$1);
	  }
	}

	function jsChildrenToReason(children) {
	  if (Js_primitive.is_nil_undef(children)) {
	    return /* [] */0;
	  } else if (Array.isArray(children)) {
	    return $$Array.to_list(children);
	  } else {
	    return /* :: */[
	            children,
	            /* [] */0
	          ];
	  }
	}

	function componentDidMount() {
	  return /* None */0;
	}

	function componentWillUpdate(_, _$1, _$2) {
	  return /* None */0;
	}

	function componentDidUpdate(_, _$1, _$2) {
	  return /* None */0;
	}

	function componentWillReceiveProps(_, _$1) {
	  return /* None */0;
	}

	function componentWillUnmount() {
	  return /* () */0;
	}

	function CreateComponent(CompleteComponentSpec) {
	  var convertPropsIfTheyreFromJs = function (props) {
	    var match = props.reasonProps;
	    var match$1 = CompleteComponentSpec[/* jsPropsToReasonProps */8];
	    if (match !== undefined) {
	      return match;
	    } else if (match$1) {
	      return Curry._1(match$1[0], props);
	    } else {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "A JS component called the Reason component " + (CompleteComponentSpec[/* name */0] + (" which didn't implement the JS->Reason React props conversion. Did you forget to add `JsProps` to " + (CompleteComponentSpec[/* name */0] + "'s `include ReactRe.Component.*`?")))
	          ];
	    }
	  };
	  var comp = React.createClass({
	        displayName: CompleteComponentSpec[/* name */0],
	        instanceVars: (null),
	        memoizedUpdaterCallbacks: (null),
	        memoizedUpdaterCount: 0,
	        memoizedRefCallbacks: (null),
	        memoizedRefCount: 0,
	        getInitialState: function () {
	          var $$this = this ;
	          $$this.instanceVars = Curry._1(CompleteComponentSpec[/* getInstanceVars */1], /* () */0);
	          $$this.memoizedUpdaterCallbacks = Caml_array.caml_make_vect(30, null);
	          $$this.memoizedRefCallbacks = Caml_array.caml_make_vect(30, null);
	          var that = (this);
	          var props = convertPropsIfTheyreFromJs(that.props);
	          return {
	                  mlState: Curry._1(CompleteComponentSpec[/* getInitialState */2], props)
	                };
	        },
	        componentDidMount: function () {
	          var $$this = this ;
	          var that = (this);
	          var currState = that.state.mlState;
	          var newState = Curry._1(CompleteComponentSpec[/* componentDidMount */3], /* record */[
	                /* state */currState,
	                /* props */convertPropsIfTheyreFromJs(that.props),
	                /* updater */$$this.updaterMethod,
	                /* handler */$$this.handlerMethod,
	                /* instanceVars */$$this.instanceVars,
	                /* setState */$$this.setStateMethod
	              ]);
	          if (newState) {
	            var state = newState[0];
	            return that.setState(function (_, _$1) {
	                        return {
	                                mlState: state
	                              };
	                      });
	          } else {
	            return /* () */0;
	          }
	        },
	        componentWillUpdate: function (nextProps, nextState) {
	          var $$this = this ;
	          var that = (this);
	          var currState = that.state.mlState;
	          var newState = Curry._3(CompleteComponentSpec[/* componentWillUpdate */5], /* record */[
	                /* state */currState,
	                /* props */convertPropsIfTheyreFromJs(that.props),
	                /* updater */$$this.updaterMethod,
	                /* handler */$$this.handlerMethod,
	                /* instanceVars */$$this.instanceVars,
	                /* setState */$$this.setStateMethod
	              ], convertPropsIfTheyreFromJs(nextProps), nextState.mlState);
	          if (newState) {
	            var state = newState[0];
	            return that.setState(function (_, _$1) {
	                        return {
	                                mlState: state
	                              };
	                      });
	          } else {
	            return /* () */0;
	          }
	        },
	        componentDidUpdate: function (prevProps, prevState) {
	          var $$this = this ;
	          var that = (this);
	          var currState = that.state.mlState;
	          var newState = Curry._3(CompleteComponentSpec[/* componentDidUpdate */6], convertPropsIfTheyreFromJs(prevProps), prevState.mlState, /* record */[
	                /* state */currState,
	                /* props */convertPropsIfTheyreFromJs(that.props),
	                /* updater */$$this.updaterMethod,
	                /* handler */$$this.handlerMethod,
	                /* instanceVars */$$this.instanceVars,
	                /* setState */$$this.setStateMethod
	              ]);
	          if (newState) {
	            var state = newState[0];
	            return that.setState(function (_, _$1) {
	                        return {
	                                mlState: state
	                              };
	                      });
	          } else {
	            return /* () */0;
	          }
	        },
	        componentWillReceiveProps: function (nextProps) {
	          var $$this = this ;
	          var that = (this);
	          var currState = that.state.mlState;
	          var newState = Curry._2(CompleteComponentSpec[/* componentWillReceiveProps */4], /* record */[
	                /* state */currState,
	                /* props */convertPropsIfTheyreFromJs(that.props),
	                /* updater */$$this.updaterMethod,
	                /* handler */$$this.handlerMethod,
	                /* instanceVars */$$this.instanceVars,
	                /* setState */$$this.setStateMethod
	              ], convertPropsIfTheyreFromJs(nextProps));
	          if (newState) {
	            var state = newState[0];
	            return that.setState(function (_, _$1) {
	                        return {
	                                mlState: state
	                              };
	                      });
	          } else {
	            return /* () */0;
	          }
	        },
	        componentWillUnmount: function () {
	          var $$this = this ;
	          var that = (this);
	          var currState = that.state.mlState;
	          return Curry._1(CompleteComponentSpec[/* componentWillUnmount */7], /* record */[
	                      /* state */currState,
	                      /* props */convertPropsIfTheyreFromJs(that.props),
	                      /* updater */$$this.updaterMethod,
	                      /* handler */$$this.handlerMethod,
	                      /* instanceVars */$$this.instanceVars,
	                      /* setState */$$this.setStateMethod
	                    ]);
	        },
	        handlerMethod: function (callback) {
	          var $$this = this ;
	          var match = $$this.memoizedRefCount;
	          var callbacks = $$this.memoizedRefCallbacks;
	          var match$1 = (
	  function(callbacks, callback) {
	    for (var i = 0; i < callbacks.length; i++) {
	      // we fill the slots from left to right. If there's a null then we can early stop.
	      if (callbacks[i] == null) {
	        return null;
	      };
	      if (callbacks[i][0] === callback) {
	        return callbacks[i][1];
	      }
	    }
	    return null;
	  }
	)(callbacks, callback);
	          if (match$1 !== null) {
	            return match$1;
	          } else {
	            var that = (this);
	            var maybeMemoizedCallback = function (callbackPayload) {
	              var currState = that.state.mlState;
	              return Curry._2(callback, /* record */[
	                          /* state */currState,
	                          /* props */convertPropsIfTheyreFromJs(that.props),
	                          /* updater */$$this.updaterMethod,
	                          /* handler */$$this.handlerMethod,
	                          /* instanceVars */$$this.instanceVars,
	                          /* setState */$$this.setStateMethod
	                        ], callbackPayload);
	            };
	            if (match < 30) {
	              var memoizedRefCallbacks = $$this.memoizedRefCallbacks;
	              Caml_array.caml_array_set(memoizedRefCallbacks, match, /* tuple */[
	                    callback,
	                    maybeMemoizedCallback
	                  ]);
	              $$this.memoizedRefCount = $$this.memoizedRefCount + 1 | 0;
	            }
	            return maybeMemoizedCallback;
	          }
	        },
	        setStateMethod: function (cb) {
	          var $$this = this ;
	          var that = (this);
	          return that.setState(function (prevState, props) {
	                      var bag_000 = /* state */prevState.mlState;
	                      var bag_001 = /* props */convertPropsIfTheyreFromJs(props);
	                      var bag_002 = /* updater */$$this.updaterMethod;
	                      var bag_003 = /* handler */$$this.handlerMethod;
	                      var bag_004 = /* instanceVars */$$this.instanceVars;
	                      var bag_005 = /* setState */$$this.setStateMethod;
	                      var bag = /* record */[
	                        bag_000,
	                        bag_001,
	                        bag_002,
	                        bag_003,
	                        bag_004,
	                        bag_005
	                      ];
	                      return {
	                              mlState: Curry._1(cb, bag)
	                            };
	                    });
	        },
	        updaterMethod: function (callback) {
	          var $$this = this ;
	          var match = $$this.memoizedUpdaterCount;
	          var callbacks = $$this.memoizedUpdaterCallbacks;
	          var match$1 = (
	  function(callbacks, callback) {
	    for (var i = 0; i < callbacks.length; i++) {
	      // we fill the slots from left to right. If there's a null then we can early stop.
	      if (callbacks[i] == null) {
	        return null;
	      };
	      if (callbacks[i][0] === callback) {
	        return callbacks[i][1];
	      }
	    }
	    return null;
	  }
	)(callbacks, callback);
	          if (match$1 !== null) {
	            return match$1;
	          } else {
	            var that = (this);
	            var maybeMemoizedCallback = function (callbackPayload) {
	              var currState = that.state.mlState;
	              var newState = Curry._2(callback, /* record */[
	                    /* state */currState,
	                    /* props */convertPropsIfTheyreFromJs(that.props),
	                    /* updater */$$this.updaterMethod,
	                    /* handler */$$this.handlerMethod,
	                    /* instanceVars */$$this.instanceVars,
	                    /* setState */$$this.setStateMethod
	                  ], callbackPayload);
	              if (newState) {
	                var state = newState[0];
	                return that.setState(function (_, _$1) {
	                            return {
	                                    mlState: state
	                                  };
	                          });
	              } else {
	                return /* () */0;
	              }
	            };
	            if (match < 30) {
	              var memoizedUpdaterCallbacks = $$this.memoizedUpdaterCallbacks;
	              Caml_array.caml_array_set(memoizedUpdaterCallbacks, match, /* tuple */[
	                    callback,
	                    maybeMemoizedCallback
	                  ]);
	              $$this.memoizedUpdaterCount = $$this.memoizedUpdaterCount + 1 | 0;
	            }
	            return maybeMemoizedCallback;
	          }
	        },
	        render: function () {
	          var $$this = this ;
	          var that = (this);
	          return Curry._1(CompleteComponentSpec[/* render */9], /* record */[
	                      /* state */that.state.mlState,
	                      /* props */convertPropsIfTheyreFromJs(that.props),
	                      /* updater */$$this.updaterMethod,
	                      /* handler */$$this.handlerMethod,
	                      /* instanceVars */$$this.instanceVars,
	                      /* setState */$$this.setStateMethod
	                    ]);
	        }
	      });
	  var wrapPropsAndPutIndicatorThatItComesFromReason = function (props, ref, key) {
	    return {
	            reasonProps: props,
	            ref: ref,
	            key: key
	          };
	  };
	  var wrapProps = function (props, children, ref, key, _) {
	    return wrapPropsInternal(comp, props, wrapPropsAndPutIndicatorThatItComesFromReason, children, ref, key, /* () */0);
	  };
	  return /* module */[
	          /* comp */comp,
	          /* wrapProps */wrapProps
	        ];
	}

	function wrapPropsAndPutRefAndKey(props, ref, key) {
	  return Object.assign(Object.assign(({}), props), {
	              ref: ref,
	              key: key
	            });
	}

	function wrapPropsShamelessly(comp, props, children, ref, key, _) {
	  return wrapPropsInternal(comp, props, wrapPropsAndPutRefAndKey, children, ref, key, /* () */0);
	}

	function getInstanceVars() {
	  return /* () */0;
	}

	function getInitialState() {
	  return /* () */0;
	}

	function getInstanceVars$1() {
	  return /* () */0;
	}

	function getInstanceVars$2() {
	  return /* () */0;
	}

	var JsProps = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars$2,
	  /* jsPropsToReasonProps : None */0
	];

	var JsProps$1 = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount
	];

	var InstanceVars = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* jsPropsToReasonProps : None */0,
	  /* JsProps */JsProps$1
	];

	var Stateful = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars$1,
	  /* jsPropsToReasonProps : None */0,
	  /* JsProps */JsProps,
	  /* InstanceVars */InstanceVars
	];

	function getInstanceVars$3() {
	  return /* () */0;
	}

	function getInitialState$1() {
	  return /* () */0;
	}

	var JsProps$2 = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars$3,
	  /* getInitialState */getInitialState$1
	];

	function getInitialState$2() {
	  return /* () */0;
	}

	function getInitialState$3() {
	  return /* () */0;
	}

	var JsProps$3 = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInitialState */getInitialState$3
	];

	var InstanceVars$1 = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInitialState */getInitialState$2,
	  /* jsPropsToReasonProps : None */0,
	  /* JsProps */JsProps$3
	];

	var Component = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars,
	  /* jsPropsToReasonProps : None */0,
	  /* getInitialState */getInitialState,
	  /* Stateful */Stateful,
	  /* JsProps */JsProps$2,
	  /* InstanceVars */InstanceVars$1
	];

	var ComponentBase = [];

	exports.listToElement        = listToElement;
	exports.jsChildrenToReason   = jsChildrenToReason;
	exports.ComponentBase        = ComponentBase;
	exports.CreateComponent      = CreateComponent;
	exports.wrapPropsShamelessly = wrapPropsShamelessly;
	exports.Component            = Component;
	/* react Not a pure module */


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Curry = __webpack_require__(1);
	var State = __webpack_require__(73);

	var state_003 = /* userId : Some */[1];

	var state_004 = /* users : :: */[
	  /* record */[
	    /* id */1,
	    /* email */"sean@bushi.do",
	    /* name : Some */["Sean Grove"],
	    /* status : Online */1,
	    /* username */"sgrove"
	  ],
	  /* :: */[
	    /* record */[
	      /* id */4,
	      /* email */"dwwoelfel@gmail.com",
	      /* name : Some */["Daniel Woelfel"],
	      /* status : Online */1,
	      /* username */"dww"
	    ],
	    /* :: */[
	      /* record */[
	        /* id */2,
	        /* email */"info@sachagreif.com",
	        /* name : Some */["Sacha Greif"],
	        /* status : Away */2,
	        /* username */"sg"
	      ],
	      /* :: */[
	        /* record */[
	          /* id */3,
	          /* email */"sbensu@gmail.com",
	          /* name : None */0,
	          /* status : Offline */0,
	          /* username */"sbensu"
	        ],
	        /* [] */0
	      ]
	    ]
	  ]
	];

	var state_005 = /* channels : :: */[
	  /* record */[
	    /* id */0,
	    /* title */"Classical",
	    /* loading : false */0,
	    /* activities : :: */[
	      /* record */[
	        /* content */"Move along",
	        /* userId */3,
	        /* createdAt */0
	      ],
	      /* :: */[
	        /* record */[
	          /* content */"Nothing to see here, eh?",
	          /* userId */1,
	          /* createdAt */1
	        ],
	        /* :: */[
	          /* record */[
	            /* content */"When are we going to get a more interesting lobby?",
	            /* userId */1,
	            /* createdAt */2
	          ],
	          /* :: */[
	            /* record */[
	              /* content */"Sir, move along",
	              /* userId */3,
	              /* createdAt */3
	            ],
	            /* :: */[
	              /* record */[
	                /* content */'This message contains the phrase "search" as the seventh to last word.',
	                /* userId */3,
	                /* createdAt */3
	              ],
	              /* :: */[
	                /* record */[
	                  /* content */"Sir, move along",
	                  /* userId */3,
	                  /* createdAt */3
	                ],
	                /* [] */0
	              ]
	            ]
	          ]
	        ]
	      ]
	    ],
	    /* userIds */Curry._2(State.UserIdSet[/* add */3], 2, Curry._2(State.UserIdSet[/* add */3], 1, State.UserIdSet[/* empty */0])),
	    /* media : record */[
	      /* order */0,
	      /* src : None */0,
	      /* duration : None */0
	    ],
	    /* mediaState : Paused */1,
	    /* mediaProgress */0,
	    /* playlist : :: */[
	      /* record */[
	        /* order */0,
	        /* src : Some */["http://www.mfiles.co.uk/mp3-downloads/frederic-chopin-piano-sonata-2-op35-3-funeral-march.mp3"],
	        /* duration : None */0
	      ],
	      /* :: */[
	        /* record */[
	          /* order */1,
	          /* src : Some */["http://www.mfiles.co.uk/mp3-downloads/Dvorak-Symphony9-2-from-the-New-World.mp3"],
	          /* duration : None */0
	        ],
	        /* :: */[
	          /* record */[
	            /* order */2,
	            /* src : Some */["http://www.mfiles.co.uk/mp3-downloads/moonlight-movement1.mp3"],
	            /* duration : None */0
	          ],
	          /* :: */[
	            /* record */[
	              /* order */3,
	              /* src : Some */["http://www.mfiles.co.uk/mp3-downloads/beethoven-piano-sonata-pathetique-2.mp3"],
	              /* duration : None */0
	            ],
	            /* [] */0
	          ]
	        ]
	      ]
	    ]
	  ],
	  /* :: */[
	    /* record */[
	      /* id */1,
	      /* title */"Trance",
	      /* loading : false */0,
	      /* activities : :: */[
	        /* record */[
	          /* content */"Not enough progressive trance in here, really...",
	          /* userId */2,
	          /* createdAt */0
	        ],
	        /* [] */0
	      ],
	      /* userIds */Curry._2(State.UserIdSet[/* add */3], 2, Curry._2(State.UserIdSet[/* add */3], 1, State.UserIdSet[/* empty */0])),
	      /* media : record */[
	        /* order */0,
	        /* src : None */0,
	        /* duration : None */0
	      ],
	      /* mediaState : Paused */1,
	      /* mediaProgress */0,
	      /* playlist : :: */[
	        /* record */[
	          /* order */0,
	          /* src : Some */["https://dl.dropboxusercontent.com/u/412963/music/Gareth%20Emery%20feat.%20Christina%20Novelli%20-%20Concrete%20Angel.mp3"],
	          /* duration : None */0
	        ],
	        /* [] */0
	      ]
	    ],
	    /* :: */[
	      /* record */[
	        /* id */2,
	        /* title */"Lobby",
	        /* loading : false */0,
	        /* activities : :: */[
	          /* record */[
	            /* content */"> The ReasonCup logo http://reasoncup.com/resources/public/img/ReasonCup2016.png",
	            /* userId */2,
	            /* createdAt */1
	          ],
	          /* :: */[
	            /* record */[
	              /* content */"this is the last",
	              /* userId */1,
	              /* createdAt */99
	            ],
	            /* :: */[
	              /* record */[
	                /* content */"/me agrees with the previous message :+1: rgb(150,0,0) #000 #ff00ff",
	                /* userId */1,
	                /* createdAt */5
	              ],
	              /* :: */[
	                /* record */[
	                  /* content */"Paaassstttiiieee!!!\n\n          Nice!\n          ...right? ",
	                  /* userId */1,
	                  /* createdAt */4
	                ],
	                /* :: */[
	                  /* record */[
	                    /* content */"this is https://pbs.twimg.com/profile_images/766692876105289729/NZ16ZsLq_normal.jpg third",
	                    /* userId */1,
	                    /* createdAt */2
	                  ],
	                  /* :: */[
	                    /* record */[
	                      /* content */"this is second to last rgb(111,222,000)",
	                      /* userId */4,
	                      /* createdAt */3
	                    ],
	                    /* :: */[
	                      /* record */[
	                        /* content */"Reason will prevail!",
	                        /* userId */4,
	                        /* createdAt */9
	                      ],
	                      /* :: */[
	                        /* record */[
	                          /* content */"Right, @sgrove?",
	                          /* userId */4,
	                          /* createdAt */10
	                        ],
	                        /* :: */[
	                          /* record */[
	                            /* content */"If you can see this, SEARCH WORKS~~~!",
	                            /* userId */3,
	                            /* createdAt */100
	                          ],
	                          /* [] */0
	                        ]
	                      ]
	                    ]
	                  ]
	                ]
	              ]
	            ]
	          ]
	        ],
	        /* userIds */Curry._2(State.UserIdSet[/* add */3], 4, Curry._2(State.UserIdSet[/* add */3], 3, Curry._2(State.UserIdSet[/* add */3], 2, Curry._2(State.UserIdSet[/* add */3], 1, State.UserIdSet[/* empty */0])))),
	        /* media : record */[
	          /* order */0,
	          /* src : None */0,
	          /* duration : None */0
	        ],
	        /* mediaState : Paused */1,
	        /* mediaProgress */0,
	        /* playlist : :: */[
	          /* record */[
	            /* order */0,
	            /* src : Some */["https://dl.dropboxusercontent.com/u/412963/music/%E4%BA%B2%E7%88%B1%E7%9A%84%E4%BD%A0%E6%80%8E%E4%B9%88%E4%B8%8D%E5%9C%A8%E6%88%91%E8%BA%AB%E8%BE%B9.m4a"],
	            /* duration : None */0
	          ],
	          /* :: */[
	            /* record */[
	              /* order */1,
	              /* src : Some */["https://dl.dropboxusercontent.com/u/412963/music/%E5%A5%BD%E5%BF%83%E5%88%86%E6%89%8B%20Candy%20Lo%20feat.%20%E7%8E%8B%E5%8A%9B%E5%AE%8F.mp3"],
	              /* duration : None */0
	            ],
	            /* :: */[
	              /* record */[
	                /* order */2,
	                /* src : Some */["https://dl.dropboxusercontent.com/u/412963/Why%20This%20Kolaveri%20Di%20Full%20Song%20Promo%20Video%20in%20HD%20-%20.mp3"],
	                /* duration : None */0
	              ],
	              /* :: */[
	                /* record */[
	                  /* order */3,
	                  /* src : Some */["https://dl.dropboxusercontent.com/u/412963/music/%E4%BA%B2%E7%88%B1%E7%9A%84%20%EF%BC%8D%20%E5%BE%90%E8%8B%A5%E7%91%84.mp3"],
	                  /* duration : None */0
	                ],
	                /* :: */[
	                  /* record */[
	                    /* order */4,
	                    /* src : Some */["https://dl.dropboxusercontent.com/u/412963/music/Money%20Trees%20-%20Kendrick%20Lamar.mp3"],
	                    /* duration : None */0
	                  ],
	                  /* :: */[
	                    /* record */[
	                      /* order */5,
	                      /* src : Some */["https://dl.dropboxusercontent.com/u/412963/music/Armin%20van%20Buuren%20feat.%20Trevor%20Guthrie%20-%20This%20Is%20What%20It%20Feels%20Like.mp3"],
	                      /* duration : None */0
	                    ],
	                    /* :: */[
	                      /* record */[
	                        /* order */6,
	                        /* src : Some */["https://gp1.wpc.edgecastcdn.net/802892/http_private_production_west/songs/mp3_files/1499565/original/05_Last_Train_To_New_Jersey.mp3?e8817609673e6ceae29a01aebbc7efb2d22071b611f2c5d20b95874752890b0c4edd662116821b9083ff0faeaa15f2fd4e18d85478e697b4e0f50fc5404f165440cbf4d8a9da9a5843afbac36da6bc407e62d68502dff3e1510b7c2863ddb46a072c70740ad2d2cda77f3ce85e75b6dc01517324d33481daa7169fbf58b16d7108d36ad57945d3f0352d86322cc3fb302862b16711"],
	                        /* duration : None */0
	                      ],
	                      /* [] */0
	                    ]
	                  ]
	                ]
	              ]
	            ]
	          ]
	        ]
	      ],
	      /* [] */0
	    ]
	  ]
	];

	var state = /* record */[
	  /* rightSidebarOpen : false */0,
	  /* leftSidebarOpen : false */0,
	  /* selectedChannelId */2,
	  state_003,
	  state_004,
	  state_005,
	  /* userMessageFocused : false */0,
	  /* searchFormFocused : false */0,
	  /* userMenuOpen : false */0,
	  /* search : None */0,
	  /* title */"Kandan",
	  /* volume */0.75,
	  /* lastVolume */0.75
	];

	exports.state = state;
	/* state Not a pure module */


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var $$Map    = __webpack_require__(74);
	var $$Set    = __webpack_require__(75);
	var $$String = __webpack_require__(20);
	var Caml_obj = __webpack_require__(6);

	var compare = Caml_obj.caml_compare;

	var UserIdType = /* module */[/* compare */compare];

	var UserIdSet = $$Set.Make(UserIdType);

	var EmojiPairs = $$Map.Make([$$String.compare]);

	function stringOfAction(action) {
	  if (typeof action === "number") {
	    return "VolumeMuteToggled";
	  } else {
	    switch (action.tag | 0) {
	      case 0 : 
	          return "SearchFormFocused";
	      case 1 : 
	          return "SidebarToggled";
	      case 2 : 
	          return "SearchUpdated";
	      case 3 : 
	          return "ChannelSelected";
	      case 4 : 
	          return "ChannelSelectedByIndex";
	      case 5 : 
	          return "SongSelected";
	      case 6 : 
	          return "MediaStateUpdated";
	      case 7 : 
	          return "MediaProgressUpdated";
	      case 8 : 
	          return "ChatBoxFocused";
	      case 9 : 
	          return "UserMenuToggled";
	      case 10 : 
	          return "MsgSubmitted";
	      case 11 : 
	          return "AppTitleUpdated";
	      case 12 : 
	          return "VolumeSet";
	      case 13 : 
	          return "VolumentIncremented";
	      case 14 : 
	          return "VolumentDecremented";
	      case 15 : 
	          return "Log";
	      case 16 : 
	          return "Alert";
	      
	    }
	  }
	}

	exports.UserIdType     = UserIdType;
	exports.UserIdSet      = UserIdSet;
	exports.EmojiPairs     = EmojiPairs;
	exports.stringOfAction = stringOfAction;
	/* UserIdSet Not a pure module */


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Curry                   = __webpack_require__(1);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function Make(funarg) {
	  var height = function (param) {
	    if (param) {
	      return param[4];
	    } else {
	      return 0;
	    }
	  };
	  var create = function (l, x, d, r) {
	    var hl = height(l);
	    var hr = height(r);
	    return /* Node */[
	            l,
	            x,
	            d,
	            r,
	            hl >= hr ? hl + 1 | 0 : hr + 1 | 0
	          ];
	  };
	  var singleton = function (x, d) {
	    return /* Node */[
	            /* Empty */0,
	            x,
	            d,
	            /* Empty */0,
	            1
	          ];
	  };
	  var bal = function (l, x, d, r) {
	    var hl = l ? l[4] : 0;
	    var hr = r ? r[4] : 0;
	    if (hl > (hr + 2 | 0)) {
	      if (l) {
	        var lr = l[3];
	        var ld = l[2];
	        var lv = l[1];
	        var ll = l[0];
	        if (height(ll) >= height(lr)) {
	          return create(ll, lv, ld, create(lr, x, d, r));
	        } else if (lr) {
	          return create(create(ll, lv, ld, lr[0]), lr[1], lr[2], create(lr[3], x, d, r));
	        } else {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "Map.bal"
	              ];
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "Map.bal"
	            ];
	      }
	    } else if (hr > (hl + 2 | 0)) {
	      if (r) {
	        var rr = r[3];
	        var rd = r[2];
	        var rv = r[1];
	        var rl = r[0];
	        if (height(rr) >= height(rl)) {
	          return create(create(l, x, d, rl), rv, rd, rr);
	        } else if (rl) {
	          return create(create(l, x, d, rl[0]), rl[1], rl[2], create(rl[3], rv, rd, rr));
	        } else {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "Map.bal"
	              ];
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "Map.bal"
	            ];
	      }
	    } else {
	      return /* Node */[
	              l,
	              x,
	              d,
	              r,
	              hl >= hr ? hl + 1 | 0 : hr + 1 | 0
	            ];
	    }
	  };
	  var is_empty = function (param) {
	    if (param) {
	      return /* false */0;
	    } else {
	      return /* true */1;
	    }
	  };
	  var add = function (x, data, param) {
	    if (param) {
	      var r = param[3];
	      var d = param[2];
	      var v = param[1];
	      var l = param[0];
	      var c = Curry._2(funarg[/* compare */0], x, v);
	      if (c) {
	        if (c < 0) {
	          return bal(add(x, data, l), v, d, r);
	        } else {
	          return bal(l, v, d, add(x, data, r));
	        }
	      } else {
	        return /* Node */[
	                l,
	                x,
	                data,
	                r,
	                param[4]
	              ];
	      }
	    } else {
	      return /* Node */[
	              /* Empty */0,
	              x,
	              data,
	              /* Empty */0,
	              1
	            ];
	    }
	  };
	  var find = function (x, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var c = Curry._2(funarg[/* compare */0], x, param[1]);
	        if (c) {
	          _param = c < 0 ? param[0] : param[3];
	          continue ;
	          
	        } else {
	          return param[2];
	        }
	      } else {
	        throw Caml_builtin_exceptions.not_found;
	      }
	    };
	  };
	  var mem = function (x, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var c = Curry._2(funarg[/* compare */0], x, param[1]);
	        if (c) {
	          _param = c < 0 ? param[0] : param[3];
	          continue ;
	          
	        } else {
	          return /* true */1;
	        }
	      } else {
	        return /* false */0;
	      }
	    };
	  };
	  var min_binding = function (_param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var l = param[0];
	        if (l) {
	          _param = l;
	          continue ;
	          
	        } else {
	          return /* tuple */[
	                  param[1],
	                  param[2]
	                ];
	        }
	      } else {
	        throw Caml_builtin_exceptions.not_found;
	      }
	    };
	  };
	  var max_binding = function (_param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var r = param[3];
	        if (r) {
	          _param = r;
	          continue ;
	          
	        } else {
	          return /* tuple */[
	                  param[1],
	                  param[2]
	                ];
	        }
	      } else {
	        throw Caml_builtin_exceptions.not_found;
	      }
	    };
	  };
	  var remove_min_binding = function (param) {
	    if (param) {
	      var l = param[0];
	      if (l) {
	        return bal(remove_min_binding(l), param[1], param[2], param[3]);
	      } else {
	        return param[3];
	      }
	    } else {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "Map.remove_min_elt"
	          ];
	    }
	  };
	  var remove = function (x, param) {
	    if (param) {
	      var r = param[3];
	      var d = param[2];
	      var v = param[1];
	      var l = param[0];
	      var c = Curry._2(funarg[/* compare */0], x, v);
	      if (c) {
	        if (c < 0) {
	          return bal(remove(x, l), v, d, r);
	        } else {
	          return bal(l, v, d, remove(x, r));
	        }
	      } else {
	        var t1 = l;
	        var t2 = r;
	        if (t1) {
	          if (t2) {
	            var match = min_binding(t2);
	            return bal(t1, match[0], match[1], remove_min_binding(t2));
	          } else {
	            return t1;
	          }
	        } else {
	          return t2;
	        }
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var iter = function (f, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        iter(f, param[0]);
	        Curry._2(f, param[1], param[2]);
	        _param = param[3];
	        continue ;
	        
	      } else {
	        return /* () */0;
	      }
	    };
	  };
	  var map = function (f, param) {
	    if (param) {
	      var l$prime = map(f, param[0]);
	      var d$prime = Curry._1(f, param[2]);
	      var r$prime = map(f, param[3]);
	      return /* Node */[
	              l$prime,
	              param[1],
	              d$prime,
	              r$prime,
	              param[4]
	            ];
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var mapi = function (f, param) {
	    if (param) {
	      var v = param[1];
	      var l$prime = mapi(f, param[0]);
	      var d$prime = Curry._2(f, v, param[2]);
	      var r$prime = mapi(f, param[3]);
	      return /* Node */[
	              l$prime,
	              v,
	              d$prime,
	              r$prime,
	              param[4]
	            ];
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var fold = function (f, _m, _accu) {
	    while(true) {
	      var accu = _accu;
	      var m = _m;
	      if (m) {
	        _accu = Curry._3(f, m[1], m[2], fold(f, m[0], accu));
	        _m = m[3];
	        continue ;
	        
	      } else {
	        return accu;
	      }
	    };
	  };
	  var for_all = function (p, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        if (Curry._2(p, param[1], param[2])) {
	          if (for_all(p, param[0])) {
	            _param = param[3];
	            continue ;
	            
	          } else {
	            return /* false */0;
	          }
	        } else {
	          return /* false */0;
	        }
	      } else {
	        return /* true */1;
	      }
	    };
	  };
	  var exists = function (p, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        if (Curry._2(p, param[1], param[2])) {
	          return /* true */1;
	        } else if (exists(p, param[0])) {
	          return /* true */1;
	        } else {
	          _param = param[3];
	          continue ;
	          
	        }
	      } else {
	        return /* false */0;
	      }
	    };
	  };
	  var add_min_binding = function (k, v, param) {
	    if (param) {
	      return bal(add_min_binding(k, v, param[0]), param[1], param[2], param[3]);
	    } else {
	      return singleton(k, v);
	    }
	  };
	  var add_max_binding = function (k, v, param) {
	    if (param) {
	      return bal(param[0], param[1], param[2], add_max_binding(k, v, param[3]));
	    } else {
	      return singleton(k, v);
	    }
	  };
	  var join = function (l, v, d, r) {
	    if (l) {
	      if (r) {
	        var rh = r[4];
	        var lh = l[4];
	        if (lh > (rh + 2 | 0)) {
	          return bal(l[0], l[1], l[2], join(l[3], v, d, r));
	        } else if (rh > (lh + 2 | 0)) {
	          return bal(join(l, v, d, r[0]), r[1], r[2], r[3]);
	        } else {
	          return create(l, v, d, r);
	        }
	      } else {
	        return add_max_binding(v, d, l);
	      }
	    } else {
	      return add_min_binding(v, d, r);
	    }
	  };
	  var concat = function (t1, t2) {
	    if (t1) {
	      if (t2) {
	        var match = min_binding(t2);
	        return join(t1, match[0], match[1], remove_min_binding(t2));
	      } else {
	        return t1;
	      }
	    } else {
	      return t2;
	    }
	  };
	  var concat_or_join = function (t1, v, d, t2) {
	    if (d) {
	      return join(t1, v, d[0], t2);
	    } else {
	      return concat(t1, t2);
	    }
	  };
	  var split = function (x, param) {
	    if (param) {
	      var r = param[3];
	      var d = param[2];
	      var v = param[1];
	      var l = param[0];
	      var c = Curry._2(funarg[/* compare */0], x, v);
	      if (c) {
	        if (c < 0) {
	          var match = split(x, l);
	          return /* tuple */[
	                  match[0],
	                  match[1],
	                  join(match[2], v, d, r)
	                ];
	        } else {
	          var match$1 = split(x, r);
	          return /* tuple */[
	                  join(l, v, d, match$1[0]),
	                  match$1[1],
	                  match$1[2]
	                ];
	        }
	      } else {
	        return /* tuple */[
	                l,
	                /* Some */[d],
	                r
	              ];
	      }
	    } else {
	      return /* tuple */[
	              /* Empty */0,
	              /* None */0,
	              /* Empty */0
	            ];
	    }
	  };
	  var merge = function (f, s1, s2) {
	    var exit = 0;
	    if (s1) {
	      var v1 = s1[1];
	      if (s1[4] >= height(s2)) {
	        var match = split(v1, s2);
	        return concat_or_join(merge(f, s1[0], match[0]), v1, Curry._3(f, v1, /* Some */[s1[2]], match[1]), merge(f, s1[3], match[2]));
	      } else {
	        exit = 1;
	      }
	    } else if (s2) {
	      exit = 1;
	    } else {
	      return /* Empty */0;
	    }
	    if (exit === 1) {
	      if (s2) {
	        var v2 = s2[1];
	        var match$1 = split(v2, s1);
	        return concat_or_join(merge(f, match$1[0], s2[0]), v2, Curry._3(f, v2, match$1[1], /* Some */[s2[2]]), merge(f, match$1[2], s2[3]));
	      } else {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "map.ml",
	                270,
	                10
	              ]
	            ];
	      }
	    }
	    
	  };
	  var filter = function (p, param) {
	    if (param) {
	      var d = param[2];
	      var v = param[1];
	      var l$prime = filter(p, param[0]);
	      var pvd = Curry._2(p, v, d);
	      var r$prime = filter(p, param[3]);
	      if (pvd) {
	        return join(l$prime, v, d, r$prime);
	      } else {
	        return concat(l$prime, r$prime);
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var partition = function (p, param) {
	    if (param) {
	      var d = param[2];
	      var v = param[1];
	      var match = partition(p, param[0]);
	      var lf = match[1];
	      var lt = match[0];
	      var pvd = Curry._2(p, v, d);
	      var match$1 = partition(p, param[3]);
	      var rf = match$1[1];
	      var rt = match$1[0];
	      if (pvd) {
	        return /* tuple */[
	                join(lt, v, d, rt),
	                concat(lf, rf)
	              ];
	      } else {
	        return /* tuple */[
	                concat(lt, rt),
	                join(lf, v, d, rf)
	              ];
	      }
	    } else {
	      return /* tuple */[
	              /* Empty */0,
	              /* Empty */0
	            ];
	    }
	  };
	  var cons_enum = function (_m, _e) {
	    while(true) {
	      var e = _e;
	      var m = _m;
	      if (m) {
	        _e = /* More */[
	          m[1],
	          m[2],
	          m[3],
	          e
	        ];
	        _m = m[0];
	        continue ;
	        
	      } else {
	        return e;
	      }
	    };
	  };
	  var compare = function (cmp, m1, m2) {
	    var _e1 = cons_enum(m1, /* End */0);
	    var _e2 = cons_enum(m2, /* End */0);
	    while(true) {
	      var e2 = _e2;
	      var e1 = _e1;
	      if (e1) {
	        if (e2) {
	          var c = Curry._2(funarg[/* compare */0], e1[0], e2[0]);
	          if (c !== 0) {
	            return c;
	          } else {
	            var c$1 = Curry._2(cmp, e1[1], e2[1]);
	            if (c$1 !== 0) {
	              return c$1;
	            } else {
	              _e2 = cons_enum(e2[2], e2[3]);
	              _e1 = cons_enum(e1[2], e1[3]);
	              continue ;
	              
	            }
	          }
	        } else {
	          return 1;
	        }
	      } else if (e2) {
	        return -1;
	      } else {
	        return 0;
	      }
	    };
	  };
	  var equal = function (cmp, m1, m2) {
	    var _e1 = cons_enum(m1, /* End */0);
	    var _e2 = cons_enum(m2, /* End */0);
	    while(true) {
	      var e2 = _e2;
	      var e1 = _e1;
	      if (e1) {
	        if (e2) {
	          if (Curry._2(funarg[/* compare */0], e1[0], e2[0])) {
	            return /* false */0;
	          } else if (Curry._2(cmp, e1[1], e2[1])) {
	            _e2 = cons_enum(e2[2], e2[3]);
	            _e1 = cons_enum(e1[2], e1[3]);
	            continue ;
	            
	          } else {
	            return /* false */0;
	          }
	        } else {
	          return /* false */0;
	        }
	      } else if (e2) {
	        return /* false */0;
	      } else {
	        return /* true */1;
	      }
	    };
	  };
	  var cardinal = function (param) {
	    if (param) {
	      return (cardinal(param[0]) + 1 | 0) + cardinal(param[3]) | 0;
	    } else {
	      return 0;
	    }
	  };
	  var bindings_aux = function (_accu, _param) {
	    while(true) {
	      var param = _param;
	      var accu = _accu;
	      if (param) {
	        _param = param[0];
	        _accu = /* :: */[
	          /* tuple */[
	            param[1],
	            param[2]
	          ],
	          bindings_aux(accu, param[3])
	        ];
	        continue ;
	        
	      } else {
	        return accu;
	      }
	    };
	  };
	  var bindings = function (s) {
	    return bindings_aux(/* [] */0, s);
	  };
	  return [
	          /* Empty */0,
	          is_empty,
	          mem,
	          add,
	          singleton,
	          remove,
	          merge,
	          compare,
	          equal,
	          iter,
	          fold,
	          for_all,
	          exists,
	          filter,
	          partition,
	          cardinal,
	          bindings,
	          min_binding,
	          max_binding,
	          min_binding,
	          split,
	          find,
	          map,
	          mapi
	        ];
	}

	exports.Make = Make;
	/* No side effect */


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var List                    = __webpack_require__(5);
	var Curry                   = __webpack_require__(1);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function Make(funarg) {
	  var height = function (param) {
	    if (param) {
	      return param[3];
	    } else {
	      return 0;
	    }
	  };
	  var create = function (l, v, r) {
	    var hl = l ? l[3] : 0;
	    var hr = r ? r[3] : 0;
	    return /* Node */[
	            l,
	            v,
	            r,
	            hl >= hr ? hl + 1 | 0 : hr + 1 | 0
	          ];
	  };
	  var bal = function (l, v, r) {
	    var hl = l ? l[3] : 0;
	    var hr = r ? r[3] : 0;
	    if (hl > (hr + 2 | 0)) {
	      if (l) {
	        var lr = l[2];
	        var lv = l[1];
	        var ll = l[0];
	        if (height(ll) >= height(lr)) {
	          return create(ll, lv, create(lr, v, r));
	        } else if (lr) {
	          return create(create(ll, lv, lr[0]), lr[1], create(lr[2], v, r));
	        } else {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "Set.bal"
	              ];
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "Set.bal"
	            ];
	      }
	    } else if (hr > (hl + 2 | 0)) {
	      if (r) {
	        var rr = r[2];
	        var rv = r[1];
	        var rl = r[0];
	        if (height(rr) >= height(rl)) {
	          return create(create(l, v, rl), rv, rr);
	        } else if (rl) {
	          return create(create(l, v, rl[0]), rl[1], create(rl[2], rv, rr));
	        } else {
	          throw [
	                Caml_builtin_exceptions.invalid_argument,
	                "Set.bal"
	              ];
	        }
	      } else {
	        throw [
	              Caml_builtin_exceptions.invalid_argument,
	              "Set.bal"
	            ];
	      }
	    } else {
	      return /* Node */[
	              l,
	              v,
	              r,
	              hl >= hr ? hl + 1 | 0 : hr + 1 | 0
	            ];
	    }
	  };
	  var add = function (x, t) {
	    if (t) {
	      var r = t[2];
	      var v = t[1];
	      var l = t[0];
	      var c = Curry._2(funarg[/* compare */0], x, v);
	      if (c) {
	        if (c < 0) {
	          return bal(add(x, l), v, r);
	        } else {
	          return bal(l, v, add(x, r));
	        }
	      } else {
	        return t;
	      }
	    } else {
	      return /* Node */[
	              /* Empty */0,
	              x,
	              /* Empty */0,
	              1
	            ];
	    }
	  };
	  var singleton = function (x) {
	    return /* Node */[
	            /* Empty */0,
	            x,
	            /* Empty */0,
	            1
	          ];
	  };
	  var add_min_element = function (v, param) {
	    if (param) {
	      return bal(add_min_element(v, param[0]), param[1], param[2]);
	    } else {
	      return singleton(v);
	    }
	  };
	  var add_max_element = function (v, param) {
	    if (param) {
	      return bal(param[0], param[1], add_max_element(v, param[2]));
	    } else {
	      return singleton(v);
	    }
	  };
	  var join = function (l, v, r) {
	    if (l) {
	      if (r) {
	        var rh = r[3];
	        var lh = l[3];
	        if (lh > (rh + 2 | 0)) {
	          return bal(l[0], l[1], join(l[2], v, r));
	        } else if (rh > (lh + 2 | 0)) {
	          return bal(join(l, v, r[0]), r[1], r[2]);
	        } else {
	          return create(l, v, r);
	        }
	      } else {
	        return add_max_element(v, l);
	      }
	    } else {
	      return add_min_element(v, r);
	    }
	  };
	  var min_elt = function (_param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var l = param[0];
	        if (l) {
	          _param = l;
	          continue ;
	          
	        } else {
	          return param[1];
	        }
	      } else {
	        throw Caml_builtin_exceptions.not_found;
	      }
	    };
	  };
	  var max_elt = function (_param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var r = param[2];
	        if (r) {
	          _param = r;
	          continue ;
	          
	        } else {
	          return param[1];
	        }
	      } else {
	        throw Caml_builtin_exceptions.not_found;
	      }
	    };
	  };
	  var remove_min_elt = function (param) {
	    if (param) {
	      var l = param[0];
	      if (l) {
	        return bal(remove_min_elt(l), param[1], param[2]);
	      } else {
	        return param[2];
	      }
	    } else {
	      throw [
	            Caml_builtin_exceptions.invalid_argument,
	            "Set.remove_min_elt"
	          ];
	    }
	  };
	  var concat = function (t1, t2) {
	    if (t1) {
	      if (t2) {
	        return join(t1, min_elt(t2), remove_min_elt(t2));
	      } else {
	        return t1;
	      }
	    } else {
	      return t2;
	    }
	  };
	  var split = function (x, param) {
	    if (param) {
	      var r = param[2];
	      var v = param[1];
	      var l = param[0];
	      var c = Curry._2(funarg[/* compare */0], x, v);
	      if (c) {
	        if (c < 0) {
	          var match = split(x, l);
	          return /* tuple */[
	                  match[0],
	                  match[1],
	                  join(match[2], v, r)
	                ];
	        } else {
	          var match$1 = split(x, r);
	          return /* tuple */[
	                  join(l, v, match$1[0]),
	                  match$1[1],
	                  match$1[2]
	                ];
	        }
	      } else {
	        return /* tuple */[
	                l,
	                /* true */1,
	                r
	              ];
	      }
	    } else {
	      return /* tuple */[
	              /* Empty */0,
	              /* false */0,
	              /* Empty */0
	            ];
	    }
	  };
	  var is_empty = function (param) {
	    if (param) {
	      return /* false */0;
	    } else {
	      return /* true */1;
	    }
	  };
	  var mem = function (x, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var c = Curry._2(funarg[/* compare */0], x, param[1]);
	        if (c) {
	          _param = c < 0 ? param[0] : param[2];
	          continue ;
	          
	        } else {
	          return /* true */1;
	        }
	      } else {
	        return /* false */0;
	      }
	    };
	  };
	  var remove = function (x, param) {
	    if (param) {
	      var r = param[2];
	      var v = param[1];
	      var l = param[0];
	      var c = Curry._2(funarg[/* compare */0], x, v);
	      if (c) {
	        if (c < 0) {
	          return bal(remove(x, l), v, r);
	        } else {
	          return bal(l, v, remove(x, r));
	        }
	      } else {
	        var t1 = l;
	        var t2 = r;
	        if (t1) {
	          if (t2) {
	            return bal(t1, min_elt(t2), remove_min_elt(t2));
	          } else {
	            return t1;
	          }
	        } else {
	          return t2;
	        }
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var union = function (s1, s2) {
	    if (s1) {
	      if (s2) {
	        var h2 = s2[3];
	        var v2 = s2[1];
	        var h1 = s1[3];
	        var v1 = s1[1];
	        if (h1 >= h2) {
	          if (h2 === 1) {
	            return add(v2, s1);
	          } else {
	            var match = split(v1, s2);
	            return join(union(s1[0], match[0]), v1, union(s1[2], match[2]));
	          }
	        } else if (h1 === 1) {
	          return add(v1, s2);
	        } else {
	          var match$1 = split(v2, s1);
	          return join(union(match$1[0], s2[0]), v2, union(match$1[2], s2[2]));
	        }
	      } else {
	        return s1;
	      }
	    } else {
	      return s2;
	    }
	  };
	  var inter = function (s1, s2) {
	    if (s1) {
	      if (s2) {
	        var r1 = s1[2];
	        var v1 = s1[1];
	        var l1 = s1[0];
	        var match = split(v1, s2);
	        var l2 = match[0];
	        if (match[1] !== 0) {
	          return join(inter(l1, l2), v1, inter(r1, match[2]));
	        } else {
	          return concat(inter(l1, l2), inter(r1, match[2]));
	        }
	      } else {
	        return /* Empty */0;
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var diff = function (s1, s2) {
	    if (s1) {
	      if (s2) {
	        var r1 = s1[2];
	        var v1 = s1[1];
	        var l1 = s1[0];
	        var match = split(v1, s2);
	        var l2 = match[0];
	        if (match[1] !== 0) {
	          return concat(diff(l1, l2), diff(r1, match[2]));
	        } else {
	          return join(diff(l1, l2), v1, diff(r1, match[2]));
	        }
	      } else {
	        return s1;
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var cons_enum = function (_s, _e) {
	    while(true) {
	      var e = _e;
	      var s = _s;
	      if (s) {
	        _e = /* More */[
	          s[1],
	          s[2],
	          e
	        ];
	        _s = s[0];
	        continue ;
	        
	      } else {
	        return e;
	      }
	    };
	  };
	  var compare = function (s1, s2) {
	    var _e1 = cons_enum(s1, /* End */0);
	    var _e2 = cons_enum(s2, /* End */0);
	    while(true) {
	      var e2 = _e2;
	      var e1 = _e1;
	      if (e1) {
	        if (e2) {
	          var c = Curry._2(funarg[/* compare */0], e1[0], e2[0]);
	          if (c !== 0) {
	            return c;
	          } else {
	            _e2 = cons_enum(e2[1], e2[2]);
	            _e1 = cons_enum(e1[1], e1[2]);
	            continue ;
	            
	          }
	        } else {
	          return 1;
	        }
	      } else if (e2) {
	        return -1;
	      } else {
	        return 0;
	      }
	    };
	  };
	  var equal = function (s1, s2) {
	    return +(compare(s1, s2) === 0);
	  };
	  var subset = function (_s1, _s2) {
	    while(true) {
	      var s2 = _s2;
	      var s1 = _s1;
	      if (s1) {
	        if (s2) {
	          var r2 = s2[2];
	          var l2 = s2[0];
	          var r1 = s1[2];
	          var v1 = s1[1];
	          var l1 = s1[0];
	          var c = Curry._2(funarg[/* compare */0], v1, s2[1]);
	          if (c) {
	            if (c < 0) {
	              if (subset(/* Node */[
	                      l1,
	                      v1,
	                      /* Empty */0,
	                      0
	                    ], l2)) {
	                _s1 = r1;
	                continue ;
	                
	              } else {
	                return /* false */0;
	              }
	            } else if (subset(/* Node */[
	                    /* Empty */0,
	                    v1,
	                    r1,
	                    0
	                  ], r2)) {
	              _s1 = l1;
	              continue ;
	              
	            } else {
	              return /* false */0;
	            }
	          } else if (subset(l1, l2)) {
	            _s2 = r2;
	            _s1 = r1;
	            continue ;
	            
	          } else {
	            return /* false */0;
	          }
	        } else {
	          return /* false */0;
	        }
	      } else {
	        return /* true */1;
	      }
	    };
	  };
	  var iter = function (f, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        iter(f, param[0]);
	        Curry._1(f, param[1]);
	        _param = param[2];
	        continue ;
	        
	      } else {
	        return /* () */0;
	      }
	    };
	  };
	  var fold = function (f, _s, _accu) {
	    while(true) {
	      var accu = _accu;
	      var s = _s;
	      if (s) {
	        _accu = Curry._2(f, s[1], fold(f, s[0], accu));
	        _s = s[2];
	        continue ;
	        
	      } else {
	        return accu;
	      }
	    };
	  };
	  var for_all = function (p, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        if (Curry._1(p, param[1])) {
	          if (for_all(p, param[0])) {
	            _param = param[2];
	            continue ;
	            
	          } else {
	            return /* false */0;
	          }
	        } else {
	          return /* false */0;
	        }
	      } else {
	        return /* true */1;
	      }
	    };
	  };
	  var exists = function (p, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        if (Curry._1(p, param[1])) {
	          return /* true */1;
	        } else if (exists(p, param[0])) {
	          return /* true */1;
	        } else {
	          _param = param[2];
	          continue ;
	          
	        }
	      } else {
	        return /* false */0;
	      }
	    };
	  };
	  var filter = function (p, param) {
	    if (param) {
	      var v = param[1];
	      var l$prime = filter(p, param[0]);
	      var pv = Curry._1(p, v);
	      var r$prime = filter(p, param[2]);
	      if (pv) {
	        return join(l$prime, v, r$prime);
	      } else {
	        return concat(l$prime, r$prime);
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  var partition = function (p, param) {
	    if (param) {
	      var v = param[1];
	      var match = partition(p, param[0]);
	      var lf = match[1];
	      var lt = match[0];
	      var pv = Curry._1(p, v);
	      var match$1 = partition(p, param[2]);
	      var rf = match$1[1];
	      var rt = match$1[0];
	      if (pv) {
	        return /* tuple */[
	                join(lt, v, rt),
	                concat(lf, rf)
	              ];
	      } else {
	        return /* tuple */[
	                concat(lt, rt),
	                join(lf, v, rf)
	              ];
	      }
	    } else {
	      return /* tuple */[
	              /* Empty */0,
	              /* Empty */0
	            ];
	    }
	  };
	  var cardinal = function (param) {
	    if (param) {
	      return (cardinal(param[0]) + 1 | 0) + cardinal(param[2]) | 0;
	    } else {
	      return 0;
	    }
	  };
	  var elements_aux = function (_accu, _param) {
	    while(true) {
	      var param = _param;
	      var accu = _accu;
	      if (param) {
	        _param = param[0];
	        _accu = /* :: */[
	          param[1],
	          elements_aux(accu, param[2])
	        ];
	        continue ;
	        
	      } else {
	        return accu;
	      }
	    };
	  };
	  var elements = function (s) {
	    return elements_aux(/* [] */0, s);
	  };
	  var find = function (x, _param) {
	    while(true) {
	      var param = _param;
	      if (param) {
	        var v = param[1];
	        var c = Curry._2(funarg[/* compare */0], x, v);
	        if (c) {
	          _param = c < 0 ? param[0] : param[2];
	          continue ;
	          
	        } else {
	          return v;
	        }
	      } else {
	        throw Caml_builtin_exceptions.not_found;
	      }
	    };
	  };
	  var of_list = function (l) {
	    if (l) {
	      var match = l[1];
	      var x0 = l[0];
	      if (match) {
	        var match$1 = match[1];
	        var x1 = match[0];
	        if (match$1) {
	          var match$2 = match$1[1];
	          var x2 = match$1[0];
	          if (match$2) {
	            var match$3 = match$2[1];
	            var x3 = match$2[0];
	            if (match$3) {
	              if (match$3[1]) {
	                var l$1 = List.sort_uniq(funarg[/* compare */0], l);
	                var sub = function (n, l) {
	                  var exit = 0;
	                  if (n > 3 || n < 0) {
	                    exit = 1;
	                  } else {
	                    switch (n) {
	                      case 0 : 
	                          return /* tuple */[
	                                  /* Empty */0,
	                                  l
	                                ];
	                      case 1 : 
	                          if (l) {
	                            return /* tuple */[
	                                    /* Node */[
	                                      /* Empty */0,
	                                      l[0],
	                                      /* Empty */0,
	                                      1
	                                    ],
	                                    l[1]
	                                  ];
	                          } else {
	                            exit = 1;
	                          }
	                          break;
	                      case 2 : 
	                          if (l) {
	                            var match = l[1];
	                            if (match) {
	                              return /* tuple */[
	                                      /* Node */[
	                                        /* Node */[
	                                          /* Empty */0,
	                                          l[0],
	                                          /* Empty */0,
	                                          1
	                                        ],
	                                        match[0],
	                                        /* Empty */0,
	                                        2
	                                      ],
	                                      match[1]
	                                    ];
	                            } else {
	                              exit = 1;
	                            }
	                          } else {
	                            exit = 1;
	                          }
	                          break;
	                      case 3 : 
	                          if (l) {
	                            var match$1 = l[1];
	                            if (match$1) {
	                              var match$2 = match$1[1];
	                              if (match$2) {
	                                return /* tuple */[
	                                        /* Node */[
	                                          /* Node */[
	                                            /* Empty */0,
	                                            l[0],
	                                            /* Empty */0,
	                                            1
	                                          ],
	                                          match$1[0],
	                                          /* Node */[
	                                            /* Empty */0,
	                                            match$2[0],
	                                            /* Empty */0,
	                                            1
	                                          ],
	                                          2
	                                        ],
	                                        match$2[1]
	                                      ];
	                              } else {
	                                exit = 1;
	                              }
	                            } else {
	                              exit = 1;
	                            }
	                          } else {
	                            exit = 1;
	                          }
	                          break;
	                      
	                    }
	                  }
	                  if (exit === 1) {
	                    var nl = n / 2 | 0;
	                    var match$3 = sub(nl, l);
	                    var l$1 = match$3[1];
	                    if (l$1) {
	                      var match$4 = sub((n - nl | 0) - 1 | 0, l$1[1]);
	                      return /* tuple */[
	                              create(match$3[0], l$1[0], match$4[0]),
	                              match$4[1]
	                            ];
	                    } else {
	                      throw [
	                            Caml_builtin_exceptions.assert_failure,
	                            [
	                              "set.ml",
	                              372,
	                              18
	                            ]
	                          ];
	                    }
	                  }
	                  
	                };
	                return sub(List.length(l$1), l$1)[0];
	              } else {
	                return add(match$3[0], add(x3, add(x2, add(x1, singleton(x0)))));
	              }
	            } else {
	              return add(x3, add(x2, add(x1, singleton(x0))));
	            }
	          } else {
	            return add(x2, add(x1, singleton(x0)));
	          }
	        } else {
	          return add(x1, singleton(x0));
	        }
	      } else {
	        return singleton(x0);
	      }
	    } else {
	      return /* Empty */0;
	    }
	  };
	  return [
	          /* Empty */0,
	          is_empty,
	          mem,
	          add,
	          singleton,
	          remove,
	          union,
	          inter,
	          diff,
	          compare,
	          equal,
	          subset,
	          iter,
	          fold,
	          for_all,
	          exists,
	          filter,
	          partition,
	          cardinal,
	          elements,
	          min_elt,
	          max_elt,
	          min_elt,
	          split,
	          find,
	          of_list
	        ];
	}

	exports.Make = Make;
	/* No side effect */


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Curry      = __webpack_require__(1);
	var React      = __webpack_require__(41);
	var ReactRe    = __webpack_require__(71);
	var Caml_obj   = __webpack_require__(6);
	var Pervasives = __webpack_require__(8);

	var AudioElement = /* module */[];

	function setAudioPlayerMedia(player, audioSrc) {
	  player.setAttribute("src", audioSrc);
	  var match = Caml_obj.caml_equal(player.paused, false);
	  if (match !== 0) {
	    player.load();
	    setTimeout(function () {
	          player.play();
	          return /* () */0;
	        }, 2500);
	    return /* () */0;
	  } else {
	    player.load();
	    return /* () */0;
	  }
	}

	var include = ReactRe.Component[/* Stateful */8][/* InstanceVars */8];

	var componentDidMount = include[0];

	var componentWillUpdate = include[1];

	var componentWillReceiveProps = include[3];

	var componentWillUnmount = include[4];

	var jsPropsToReasonProps = include[5];

	function getInitialState(props) {
	  return /* record */[/* onTimeUpdated */props[/* onTimeUpdated */4]];
	}

	var name = "AudioPlayer";

	function getInstanceVars() {
	  return /* record */[/* domRef : None */0];
	}

	function componentDidUpdate(prevProps, _, param) {
	  var props = param[/* props */1];
	  var match = param[/* instanceVars */4][/* domRef */0];
	  if (match) {
	    var ref = match[0];
	    if (Caml_obj.caml_notequal(prevProps[/* audioState */2], props[/* audioState */2]) || Caml_obj.caml_notequal(prevProps[/* channel */1][/* media */5][/* src */1], props[/* channel */1][/* media */5][/* src */1])) {
	      var match$1 = props[/* audioState */2];
	      switch (match$1) {
	        case 0 : 
	            ref.play();
	            break;
	        case 1 : 
	            ref.pause();
	            break;
	        case 2 : 
	            break;
	        
	      }
	    }
	    if (prevProps[/* volume */3] !== props[/* volume */3]) {
	      ref.volume = props[/* volume */3];
	    }
	    
	  }
	  return /* None */0;
	}

	function setAudioRef(param, el) {
	  var state = param[/* state */0];
	  param[/* instanceVars */4][/* domRef */0] = /* Some */[el];
	  el.addEventListener("timeupdate", function () {
	        return Curry._1(state[/* onTimeUpdated */0], el);
	      });
	  return /* () */0;
	}

	function render(param) {
	  var props = param[/* props */1];
	  var match = props[/* channel */1][/* media */5][/* src */1];
	  return React.createElement("div", {
	              style: {
	                display: "block"
	              }
	            }, React.createElement("audio", {
	                  ref: Curry._1(param[/* handler */3], setAudioRef),
	                  className: "audio-player audio-" + Pervasives.string_of_int(props[/* channel */1][/* id */0]),
	                  src: match ? match[0] : ""
	                }));
	}

	var Audio_player_005 = /* JsProps */include[6];

	var Audio_player = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* jsPropsToReasonProps */jsPropsToReasonProps,
	  Audio_player_005,
	  /* getInitialState */getInitialState,
	  /* name */name,
	  /* getInstanceVars */getInstanceVars,
	  /* componentDidUpdate */componentDidUpdate,
	  /* setAudioRef */setAudioRef,
	  /* render */render
	];

	var include$1 = ReactRe.CreateComponent([
	      name,
	      getInstanceVars,
	      getInitialState,
	      componentDidMount,
	      componentWillReceiveProps,
	      componentWillUpdate,
	      componentDidUpdate,
	      componentWillUnmount,
	      jsPropsToReasonProps,
	      render
	    ]);

	var wrapProps = include$1[1];

	function createElement(channel, id, volume, audioState, onTimeUpdated) {
	  return Curry._1(wrapProps, /* record */[
	              /* id */id,
	              /* channel */channel,
	              /* audioState */audioState,
	              /* volume */volume,
	              /* onTimeUpdated */onTimeUpdated
	            ]);
	}

	var comp = include$1[0];

	exports.AudioElement        = AudioElement;
	exports.setAudioPlayerMedia = setAudioPlayerMedia;
	exports.Audio_player        = Audio_player;
	exports.comp                = comp;
	exports.wrapProps           = wrapProps;
	exports.createElement       = createElement;
	/* include Not a pure module */


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(78);


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactDefaultInjection = __webpack_require__(83);
	var ReactMount = __webpack_require__(211);
	var ReactReconciler = __webpack_require__(104);
	var ReactUpdates = __webpack_require__(101);
	var ReactVersion = __webpack_require__(216);

	var findDOMNode = __webpack_require__(217);
	var getHostComponentFromComposite = __webpack_require__(218);
	var renderSubtreeIntoContainer = __webpack_require__(219);
	var warning = __webpack_require__(50);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(93);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(107);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(220);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(221);
	  var ReactDOMInvalidARIAHook = __webpack_require__(222);

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}

	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var DOMProperty = __webpack_require__(81);
	var ReactDOMComponentFlags = __webpack_require__(82);

	var invariant = __webpack_require__(47);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 80 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = __webpack_require__(84);
	var BeforeInputEventPlugin = __webpack_require__(85);
	var ChangeEventPlugin = __webpack_require__(100);
	var DefaultEventPluginOrder = __webpack_require__(117);
	var EnterLeaveEventPlugin = __webpack_require__(118);
	var HTMLDOMPropertyConfig = __webpack_require__(123);
	var ReactComponentBrowserEnvironment = __webpack_require__(124);
	var ReactDOMComponent = __webpack_require__(137);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactDOMEmptyComponent = __webpack_require__(182);
	var ReactDOMTreeTraversal = __webpack_require__(183);
	var ReactDOMTextComponent = __webpack_require__(184);
	var ReactDefaultBatchingStrategy = __webpack_require__(185);
	var ReactEventListener = __webpack_require__(186);
	var ReactInjection = __webpack_require__(189);
	var ReactReconcileTransaction = __webpack_require__(190);
	var SVGDOMPropertyConfig = __webpack_require__(198);
	var SelectEventPlugin = __webpack_require__(199);
	var SimpleEventPlugin = __webpack_require__(200);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};

	module.exports = ARIADOMPropertyConfig;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(86);
	var ExecutionEnvironment = __webpack_require__(93);
	var FallbackCompositionState = __webpack_require__(94);
	var SyntheticCompositionEvent = __webpack_require__(97);
	var SyntheticInputEvent = __webpack_require__(99);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(87);
	var EventPluginUtils = __webpack_require__(89);

	var accumulateInto = __webpack_require__(91);
	var forEachAccumulated = __webpack_require__(92);
	var warning = __webpack_require__(50);

	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var EventPluginRegistry = __webpack_require__(88);
	var EventPluginUtils = __webpack_require__(89);
	var ReactErrorUtils = __webpack_require__(90);

	var accumulateInto = __webpack_require__(91);
	var forEachAccumulated = __webpack_require__(92);
	var invariant = __webpack_require__(47);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var ReactErrorUtils = __webpack_require__(90);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}

	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      // $FlowFixMe https://github.com/facebook/flow/issues/2336
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 92 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 93 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var PooledClass = __webpack_require__(95);

	var getTextContentAccessor = __webpack_require__(96);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(98);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var PooledClass = __webpack_require__(95);

	var emptyFunction = __webpack_require__(51);
	var warning = __webpack_require__(50);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(98);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(87);
	var EventPropagators = __webpack_require__(86);
	var ExecutionEnvironment = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactUpdates = __webpack_require__(101);
	var SyntheticEvent = __webpack_require__(98);

	var getEventTarget = __webpack_require__(114);
	var isEventSupported = __webpack_require__(115);
	var isTextInputElement = __webpack_require__(116);

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var CallbackQueue = __webpack_require__(102);
	var PooledClass = __webpack_require__(95);
	var ReactFeatureFlags = __webpack_require__(103);
	var ReactReconciler = __webpack_require__(104);
	var Transaction = __webpack_require__(113);

	var invariant = __webpack_require__(47);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PooledClass = __webpack_require__(95);

	var invariant = __webpack_require__(47);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */

	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);

	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */


	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };

	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };

	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };

	  /**
	   * `PooledClass` looks for this.
	   */


	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };

	  return CallbackQueue;
	}();

	module.exports = PooledClass.addPoolingTo(CallbackQueue);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactRef = __webpack_require__(105);
	var ReactInstrumentation = __webpack_require__(107);

	var warning = __webpack_require__(50);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactOwner = __webpack_require__(106);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }

	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }

	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// Trust the developer to only use ReactInstrumentation with a __DEV__ check

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(108);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactInvalidSetStateWarningHook = __webpack_require__(109);
	var ReactHostOperationHistoryHook = __webpack_require__(110);
	var ReactComponentTreeHook = __webpack_require__(65);
	var ExecutionEnvironment = __webpack_require__(93);

	var performanceNow = __webpack_require__(111);
	var warning = __webpack_require__(50);

	var hooks = [];
	var didHookThrowForEvent = {};

	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}

	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}

	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure =
	// $FlowFixMe https://github.com/facebook/flow/issues/2345
	typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}

	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }

	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}

	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }

	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }

	  performance.clearMarks(markName);
	  performance.clearMeasures(measurementName);
	}

	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }

	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }

	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};

	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var warning = __webpack_require__(50);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(112);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	var OBSERVED_ERROR = {};

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	module.exports = TransactionImpl;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 114 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 116 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 117 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */

	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(86);
	var ReactDOMComponentTree = __webpack_require__(79);
	var SyntheticMouseEvent = __webpack_require__(119);

	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(120);
	var ViewportMetrics = __webpack_require__(121);

	var getEventModifierState = __webpack_require__(122);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(98);

	var getEventTarget = __webpack_require__(114);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 121 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 122 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(81);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(125);
	var ReactDOMIDOperations = __webpack_require__(136);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(126);
	var Danger = __webpack_require__(132);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactInstrumentation = __webpack_require__(107);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(129);
	var setInnerHTML = __webpack_require__(128);
	var setTextContent = __webpack_require__(130);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(127);
	var setInnerHTML = __webpack_require__(128);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(129);
	var setTextContent = __webpack_require__(130);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);
	var DOMNamespaces = __webpack_require__(127);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(129);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 129 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);
	var escapeTextContentForBrowser = __webpack_require__(131);
	var setInnerHTML = __webpack_require__(128);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html


	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var DOMLazyTree = __webpack_require__(126);
	var ExecutionEnvironment = __webpack_require__(93);

	var createNodesFromMarkup = __webpack_require__(133);
	var emptyFunction = __webpack_require__(51);
	var invariant = __webpack_require__(47);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(93);

	var createArrayFromMixed = __webpack_require__(134);
	var getMarkupWrap = __webpack_require__(135);
	var invariant = __webpack_require__(47);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(47);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(93);

	var invariant = __webpack_require__(47);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(125);
	var ReactDOMComponentTree = __webpack_require__(79);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var AutoFocusUtils = __webpack_require__(138);
	var CSSPropertyOperations = __webpack_require__(140);
	var DOMLazyTree = __webpack_require__(126);
	var DOMNamespaces = __webpack_require__(127);
	var DOMProperty = __webpack_require__(81);
	var DOMPropertyOperations = __webpack_require__(148);
	var EventPluginHub = __webpack_require__(87);
	var EventPluginRegistry = __webpack_require__(88);
	var ReactBrowserEventEmitter = __webpack_require__(150);
	var ReactDOMComponentFlags = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactDOMInput = __webpack_require__(153);
	var ReactDOMOption = __webpack_require__(156);
	var ReactDOMSelect = __webpack_require__(157);
	var ReactDOMTextarea = __webpack_require__(158);
	var ReactInstrumentation = __webpack_require__(107);
	var ReactMultiChild = __webpack_require__(159);
	var ReactServerRenderingTransaction = __webpack_require__(178);

	var emptyFunction = __webpack_require__(51);
	var escapeTextContentForBrowser = __webpack_require__(131);
	var invariant = __webpack_require__(47);
	var isEventSupported = __webpack_require__(115);
	var shallowEqual = __webpack_require__(168);
	var validateDOMNesting = __webpack_require__(181);
	var warning = __webpack_require__(50);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setAndValidateContentChildDev = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (process.env.NODE_ENV !== 'production') {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setAndValidateContentChildDev.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(79);

	var focusNode = __webpack_require__(139);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 139 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(141);
	var ExecutionEnvironment = __webpack_require__(93);
	var ReactInstrumentation = __webpack_require__(107);

	var camelizeStyleName = __webpack_require__(142);
	var dangerousStyleValue = __webpack_require__(144);
	var hyphenateStyleName = __webpack_require__(145);
	var memoizeStringOnly = __webpack_require__(147);
	var warning = __webpack_require__(50);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(143);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 143 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(141);
	var warning = __webpack_require__(50);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(146);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 146 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactInstrumentation = __webpack_require__(107);

	var quoteAttributeValueForBrowser = __webpack_require__(149);
	var warning = __webpack_require__(50);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }

	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(131);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var EventPluginRegistry = __webpack_require__(88);
	var ReactEventEmitterMixin = __webpack_require__(151);
	var ViewportMetrics = __webpack_require__(121);

	var getVendorPrefixedEventName = __webpack_require__(152);
	var isEventSupported = __webpack_require__(115);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(87);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var DOMPropertyOperations = __webpack_require__(148);
	var LinkedValueUtils = __webpack_require__(154);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactUpdates = __webpack_require__(101);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var React = __webpack_require__(42);
	var ReactPropTypesSecret = __webpack_require__(155);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: React.PropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 155 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var React = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactDOMSelect = __webpack_require__(157);

	var warning = __webpack_require__(50);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var LinkedValueUtils = __webpack_require__(154);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactUpdates = __webpack_require__(101);

	var warning = __webpack_require__(50);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var LinkedValueUtils = __webpack_require__(154);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactUpdates = __webpack_require__(101);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;

	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var ReactComponentEnvironment = __webpack_require__(160);
	var ReactInstanceMap = __webpack_require__(161);
	var ReactInstrumentation = __webpack_require__(107);

	var ReactCurrentOwner = __webpack_require__(49);
	var ReactReconciler = __webpack_require__(104);
	var ReactChildReconciler = __webpack_require__(162);

	var emptyFunction = __webpack_require__(51);
	var flattenChildren = __webpack_require__(177);
	var invariant = __webpack_require__(47);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 161 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(104);

	var instantiateReactComponent = __webpack_require__(163);
	var KeyEscapeUtils = __webpack_require__(173);
	var shouldUpdateReactComponent = __webpack_require__(169);
	var traverseAllChildren = __webpack_require__(174);
	var warning = __webpack_require__(50);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(65);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(65);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var ReactCompositeComponent = __webpack_require__(164);
	var ReactEmptyComponent = __webpack_require__(170);
	var ReactHostComponent = __webpack_require__(171);

	var getNextDebugID = __webpack_require__(172);
	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (process.env.NODE_ENV !== 'production') {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var React = __webpack_require__(42);
	var ReactComponentEnvironment = __webpack_require__(160);
	var ReactCurrentOwner = __webpack_require__(49);
	var ReactErrorUtils = __webpack_require__(90);
	var ReactInstanceMap = __webpack_require__(161);
	var ReactInstrumentation = __webpack_require__(107);
	var ReactNodeTypes = __webpack_require__(165);
	var ReactReconciler = __webpack_require__(104);

	if (process.env.NODE_ENV !== 'production') {
	  var checkReactTypeSpec = __webpack_require__(166);
	}

	var emptyObject = __webpack_require__(59);
	var invariant = __webpack_require__(47);
	var shallowEqual = __webpack_require__(168);
	var shouldUpdateReactComponent = __webpack_require__(169);
	var warning = __webpack_require__(50);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }

	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;

	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }

	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (process.env.NODE_ENV !== 'production') {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;

	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

	    if (process.env.NODE_ENV !== 'production') {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }

	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;

	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;

	    if (inst.getChildContext) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }

	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();

	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

	      if (process.env.NODE_ENV !== 'production') {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;

	    if (process.env.NODE_ENV !== 'production') {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }

	    return renderedElement;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedElement;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var React = __webpack_require__(42);

	var invariant = __webpack_require__(47);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var ReactPropTypeLocationNames = __webpack_require__(167);
	var ReactPropTypesSecret = __webpack_require__(155);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(65);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(65);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 168 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 169 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 170 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	var genericComponentClass = null;
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 172 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var nextDebugID = 1;

	function getNextDebugID() {
	  return nextDebugID++;
	}

	module.exports = getNextDebugID;

/***/ },
/* 173 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var ReactCurrentOwner = __webpack_require__(49);
	var REACT_ELEMENT_TYPE = __webpack_require__(175);

	var getIteratorFn = __webpack_require__(176);
	var invariant = __webpack_require__(47);
	var KeyEscapeUtils = __webpack_require__(173);
	var warning = __webpack_require__(50);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 175 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 176 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(173);
	var traverseAllChildren = __webpack_require__(174);
	var warning = __webpack_require__(50);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(65);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(65);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var PooledClass = __webpack_require__(95);
	var Transaction = __webpack_require__(113);
	var ReactInstrumentation = __webpack_require__(107);
	var ReactServerUpdateQueue = __webpack_require__(179);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(180);

	var warning = __webpack_require__(50);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var ReactCurrentOwner = __webpack_require__(49);
	var ReactInstanceMap = __webpack_require__(161);
	var ReactInstrumentation = __webpack_require__(107);
	var ReactUpdates = __webpack_require__(101);

	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var emptyFunction = __webpack_require__(51);
	var warning = __webpack_require__(50);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var DOMLazyTree = __webpack_require__(126);
	var ReactDOMComponentTree = __webpack_require__(79);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var invariant = __webpack_require__(47);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80),
	    _assign = __webpack_require__(43);

	var DOMChildrenOperations = __webpack_require__(125);
	var DOMLazyTree = __webpack_require__(126);
	var ReactDOMComponentTree = __webpack_require__(79);

	var escapeTextContentForBrowser = __webpack_require__(131);
	var invariant = __webpack_require__(47);
	var validateDOMNesting = __webpack_require__(181);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var ReactUpdates = __webpack_require__(101);
	var Transaction = __webpack_require__(113);

	var emptyFunction = __webpack_require__(51);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var EventListener = __webpack_require__(187);
	var ExecutionEnvironment = __webpack_require__(93);
	var PooledClass = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactUpdates = __webpack_require__(101);

	var getEventTarget = __webpack_require__(114);
	var getUnboundedScrollPosition = __webpack_require__(188);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(51);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 188 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(81);
	var EventPluginHub = __webpack_require__(87);
	var EventPluginUtils = __webpack_require__(89);
	var ReactComponentEnvironment = __webpack_require__(160);
	var ReactEmptyComponent = __webpack_require__(170);
	var ReactBrowserEventEmitter = __webpack_require__(150);
	var ReactHostComponent = __webpack_require__(171);
	var ReactUpdates = __webpack_require__(101);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(43);

	var CallbackQueue = __webpack_require__(102);
	var PooledClass = __webpack_require__(95);
	var ReactBrowserEventEmitter = __webpack_require__(150);
	var ReactInputSelection = __webpack_require__(191);
	var ReactInstrumentation = __webpack_require__(107);
	var Transaction = __webpack_require__(113);
	var ReactUpdateQueue = __webpack_require__(180);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(192);

	var containsNode = __webpack_require__(194);
	var focusNode = __webpack_require__(139);
	var getActiveElement = __webpack_require__(197);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(93);

	var getNodeForCharacterOffset = __webpack_require__(193);
	var getTextContentAccessor = __webpack_require__(96);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 193 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(195);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(196);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 196 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 197 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || global.document;
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 198 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(86);
	var ExecutionEnvironment = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactInputSelection = __webpack_require__(191);
	var SyntheticEvent = __webpack_require__(98);

	var getActiveElement = __webpack_require__(197);
	var isTextInputElement = __webpack_require__(116);
	var shallowEqual = __webpack_require__(168);

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var EventListener = __webpack_require__(187);
	var EventPropagators = __webpack_require__(86);
	var ReactDOMComponentTree = __webpack_require__(79);
	var SyntheticAnimationEvent = __webpack_require__(201);
	var SyntheticClipboardEvent = __webpack_require__(202);
	var SyntheticEvent = __webpack_require__(98);
	var SyntheticFocusEvent = __webpack_require__(203);
	var SyntheticKeyboardEvent = __webpack_require__(204);
	var SyntheticMouseEvent = __webpack_require__(119);
	var SyntheticDragEvent = __webpack_require__(207);
	var SyntheticTouchEvent = __webpack_require__(208);
	var SyntheticTransitionEvent = __webpack_require__(209);
	var SyntheticUIEvent = __webpack_require__(120);
	var SyntheticWheelEvent = __webpack_require__(210);

	var emptyFunction = __webpack_require__(51);
	var getEventCharCode = __webpack_require__(205);
	var invariant = __webpack_require__(47);

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});

	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(98);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(98);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(120);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(120);

	var getEventCharCode = __webpack_require__(205);
	var getEventKey = __webpack_require__(206);
	var getEventModifierState = __webpack_require__(122);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 205 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(205);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(119);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(120);

	var getEventModifierState = __webpack_require__(122);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(98);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(119);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var DOMLazyTree = __webpack_require__(126);
	var DOMProperty = __webpack_require__(81);
	var React = __webpack_require__(42);
	var ReactBrowserEventEmitter = __webpack_require__(150);
	var ReactCurrentOwner = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactDOMContainerInfo = __webpack_require__(212);
	var ReactDOMFeatureFlags = __webpack_require__(213);
	var ReactFeatureFlags = __webpack_require__(103);
	var ReactInstanceMap = __webpack_require__(161);
	var ReactInstrumentation = __webpack_require__(107);
	var ReactMarkupChecksum = __webpack_require__(214);
	var ReactReconciler = __webpack_require__(104);
	var ReactUpdateQueue = __webpack_require__(180);
	var ReactUpdates = __webpack_require__(101);

	var emptyObject = __webpack_require__(59);
	var instantiateReactComponent = __webpack_require__(163);
	var invariant = __webpack_require__(47);
	var setInnerHTML = __webpack_require__(128);
	var shouldUpdateReactComponent = __webpack_require__(169);
	var warning = __webpack_require__(50);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(181);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 213 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var adler32 = __webpack_require__(215);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 215 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 216 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	module.exports = '15.4.2';

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(80);

	var ReactCurrentOwner = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(79);
	var ReactInstanceMap = __webpack_require__(161);

	var getHostComponentFromComposite = __webpack_require__(218);
	var invariant = __webpack_require__(47);
	var warning = __webpack_require__(50);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(165);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactMount = __webpack_require__(211);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(81);
	var EventPluginRegistry = __webpack_require__(88);
	var ReactComponentTreeHook = __webpack_require__(65);

	var warning = __webpack_require__(50);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(65);

	var warning = __webpack_require__(50);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(81);
	var ReactComponentTreeHook = __webpack_require__(65);

	var warning = __webpack_require__(50);

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];

	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }

	  warnInvalidARIAProps(debugID, element);
	}

	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  }
	};

	module.exports = ReactDOMInvalidARIAHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ },
/* 223 */
/***/ function(module, exports) {

	'use strict';


	function caml_int32_float_of_bits(x) {
	  var int32 = new Int32Array(/* array */[x]);
	  var float32 = new Float32Array(int32.buffer);
	  return float32[0];
	}

	function caml_int32_bits_of_float(x) {
	  var float32 = new Float32Array(/* float array */[x]);
	  return new Int32Array(float32.buffer)[0];
	}

	function caml_classify_float(x) {
	  if (isFinite(x)) {
	    if (Math.abs(x) >= 2.2250738585072014e-308) {
	      return /* FP_normal */0;
	    } else if (x !== 0) {
	      return /* FP_subnormal */1;
	    } else {
	      return /* FP_zero */2;
	    }
	  } else if (isNaN(x)) {
	    return /* FP_nan */4;
	  } else {
	    return /* FP_infinite */3;
	  }
	}

	function caml_modf_float(x) {
	  if (isFinite(x)) {
	    var neg = +(1 / x < 0);
	    var x$1 = Math.abs(x);
	    var i = Math.floor(x$1);
	    var f = x$1 - i;
	    if (neg) {
	      return /* tuple */[
	              -f,
	              -i
	            ];
	    } else {
	      return /* tuple */[
	              f,
	              i
	            ];
	    }
	  } else if (isNaN(x)) {
	    return /* tuple */[
	            NaN,
	            NaN
	          ];
	  } else {
	    return /* tuple */[
	            1 / x,
	            x
	          ];
	  }
	}

	function caml_ldexp_float(x, exp) {
	  var match_000 = [x];
	  var match_001 = [exp];
	  var exp$prime = match_001;
	  var x$prime = match_000;
	  if (exp$prime[0] > 1023) {
	    exp$prime[0] -= 1023;
	    x$prime[0] = x$prime[0] * Math.pow(2, 1023);
	    if (exp$prime[0] > 1023) {
	      exp$prime[0] -= 1023;
	      x$prime[0] = x$prime[0] * Math.pow(2, 1023);
	    }
	    
	  } else if (exp$prime[0] < -1023) {
	    exp$prime[0] += 1023;
	    x$prime[0] = x$prime[0] * Math.pow(2, -1023);
	  }
	  return x$prime[0] * Math.pow(2, exp$prime[0]);
	}

	function caml_frexp_float(x) {
	  if (x === 0 || !isFinite(x)) {
	    return /* tuple */[
	            x,
	            0
	          ];
	  } else {
	    var neg = +(x < 0);
	    var x$prime = Math.abs(x);
	    var exp = Math.floor(Math.LOG2E * Math.log(x$prime)) + 1;
	    x$prime = x$prime * Math.pow(2, -exp);
	    if (x$prime < 0.5) {
	      x$prime = x$prime * 2;
	      exp -= 1;
	    }
	    if (neg) {
	      x$prime = -x$prime;
	    }
	    return /* tuple */[
	            x$prime,
	            exp | 0
	          ];
	  }
	}

	function caml_float_compare(x, y) {
	  if (x === y) {
	    return 0;
	  } else if (x < y) {
	    return -1;
	  } else if (x > y || x === x) {
	    return 1;
	  } else if (y === y) {
	    return -1;
	  } else {
	    return 0;
	  }
	}

	function caml_copysign_float(x, y) {
	  var x$1 = Math.abs(x);
	  var y$1 = y === 0 ? 1 / y : y;
	  if (y$1 < 0) {
	    return -x$1;
	  } else {
	    return x$1;
	  }
	}

	function caml_expm1_float(x) {
	  var y = Math.exp(x);
	  var z = y - 1;
	  if (Math.abs(x) > 1) {
	    return z;
	  } else if (z === 0) {
	    return x;
	  } else {
	    return x * z / Math.log(y);
	  }
	}

	function caml_hypot_float(x, y) {
	  var match_000 = Math.abs(x);
	  var match_001 = Math.abs(y);
	  var y0 = match_001;
	  var x0 = match_000;
	  var a = Math.max(x0, y0);
	  var b = Math.min(x0, y0) / (
	    a !== 0 ? a : 1
	  );
	  return a * Math.sqrt(1 + b * b);
	}

	function caml_log10_float(x) {
	  return Math.LOG10E * Math.log(x);
	}

	exports.caml_int32_float_of_bits = caml_int32_float_of_bits;
	exports.caml_int32_bits_of_float = caml_int32_bits_of_float;
	exports.caml_classify_float      = caml_classify_float;
	exports.caml_modf_float          = caml_modf_float;
	exports.caml_ldexp_float         = caml_ldexp_float;
	exports.caml_frexp_float         = caml_frexp_float;
	exports.caml_float_compare       = caml_float_compare;
	exports.caml_copysign_float      = caml_copysign_float;
	exports.caml_expm1_float         = caml_expm1_float;
	exports.caml_hypot_float         = caml_hypot_float;
	exports.caml_log10_float         = caml_log10_float;
	/* No side effect */


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var List                    = __webpack_require__(5);
	var $$Array                 = __webpack_require__(24);
	var Block                   = __webpack_require__(7);
	var Curry                   = __webpack_require__(1);
	var React                   = __webpack_require__(41);
	var ReactRe                 = __webpack_require__(71);
	var Caml_obj                = __webpack_require__(6);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function codeOfKey($$event) {
	  var code = $$event.key;
	  switch (code) {
	    case "/" : 
	        return /* Special */Block.__(0, [/* Slash */8]);
	    case ";" : 
	        return /* Special */Block.__(0, [/* Semicolon */7]);
	    case "ArrowDown" : 
	        return /* Special */Block.__(0, [/* Down */5]);
	    case "ArrowLeft" : 
	        return /* Special */Block.__(0, [/* Left */2]);
	    case "ArrowRight" : 
	        return /* Special */Block.__(0, [/* Right */4]);
	    case "ArrowUp" : 
	        return /* Special */Block.__(0, [/* Up */3]);
	    case "BracketLeft" : 
	        return /* Special */Block.__(0, [/* BracketLeft */10]);
	    case "BracketRigth" : 
	        return /* Special */Block.__(0, [/* BracketRight */11]);
	    case "Delete" : 
	        return /* Special */Block.__(0, [/* Del */6]);
	    case "Enter" : 
	        return /* Special */Block.__(0, [/* Enter */0]);
	    case "Escape" : 
	        return /* Special */Block.__(0, [/* Esc */1]);
	    default:
	      return /* Literal */Block.__(1, [code]);
	  }
	}

	function stroke($staropt$star, $staropt$star$1, $staropt$star$2, $staropt$star$3, code) {
	  var shift = $staropt$star ? $staropt$star[0] : /* false */0;
	  var alt = $staropt$star$1 ? $staropt$star$1[0] : /* false */0;
	  var ctrl = $staropt$star$2 ? $staropt$star$2[0] : /* false */0;
	  var meta = $staropt$star$3 ? $staropt$star$3[0] : /* false */0;
	  return /* record */[
	          /* code */code,
	          /* shift */shift,
	          /* alt */alt,
	          /* ctrl */ctrl,
	          /* meta */meta
	        ];
	}

	function parseStroke(keyStroke) {
	  var tokens = keyStroke.split((/\+/));
	  var _$staropt$star = /* None */0;
	  var _$staropt$star$1 = /* None */0;
	  var _$staropt$star$2 = /* None */0;
	  var _$staropt$star$3 = /* None */0;
	  var _$staropt$star$4 = /* None */0;
	  var _tokens = $$Array.to_list(tokens);
	  while(true) {
	    var tokens$1 = _tokens;
	    var $staropt$star = _$staropt$star$4;
	    var $staropt$star$1 = _$staropt$star$3;
	    var $staropt$star$2 = _$staropt$star$2;
	    var $staropt$star$3 = _$staropt$star$1;
	    var $staropt$star$4 = _$staropt$star;
	    var shift = $staropt$star$4 ? $staropt$star$4[0] : /* false */0;
	    var alt = $staropt$star$3 ? $staropt$star$3[0] : /* false */0;
	    var ctrl = $staropt$star$2 ? $staropt$star$2[0] : /* false */0;
	    var meta = $staropt$star$1 ? $staropt$star$1[0] : /* false */0;
	    var code = $staropt$star ? $staropt$star[0] : /* None */0;
	    if (tokens$1) {
	      var xs = tokens$1[1];
	      var token = tokens$1[0];
	      switch (token) {
	        case "/" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Slash */8])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "alt" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[code];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[/* true */1];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "ctrl" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[code];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[/* true */1];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "down" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Down */5])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "esc" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Esc */1])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "left" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Left */2])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "meta" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[code];
	            _$staropt$star$3 = /* Some */[/* true */1];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "plus" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Plus */9])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "right" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Right */4])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "shift" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[code];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[/* true */1];
	            continue ;
	            case "up" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* Up */3])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "{" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* BracketLeft */10])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            case "}" : 
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Special */Block.__(0, [/* BracketRight */11])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            default:
	          if (token.length === 1) {
	            _tokens = xs;
	            _$staropt$star$4 = /* Some */[/* Some */[/* Literal */Block.__(1, [token])]];
	            _$staropt$star$3 = /* Some */[meta];
	            _$staropt$star$2 = /* Some */[ctrl];
	            _$staropt$star$1 = /* Some */[alt];
	            _$staropt$star = /* Some */[shift];
	            continue ;
	            
	          } else {
	            throw [
	                  Caml_builtin_exceptions.failure,
	                  "Invalid keymap character length, non-modifiers should be one char long, is: " + token
	                ];
	          }
	      }
	    } else if (code) {
	      return stroke(/* Some */[shift], /* Some */[alt], /* Some */[ctrl], /* Some */[meta], code[0]);
	    } else {
	      throw [
	            Caml_builtin_exceptions.failure,
	            "No code provided for key stroke: " + keyStroke
	          ];
	    }
	  };
	}

	function parseStrokes(keyStrokes) {
	  return List.map(parseStroke, keyStrokes);
	}

	function stringOfStroke(stroke) {
	  var match = stroke[/* ctrl */3];
	  var match$1 = stroke[/* alt */2];
	  var match$2 = stroke[/* meta */4];
	  var match$3 = stroke[/* shift */1];
	  var match$4 = stroke[/* code */0];
	  var $js;
	  if (match$4.tag) {
	    $js = match$4[0];
	  } else {
	    switch (match$4[0]) {
	      case 0 : 
	          $js = "enter";
	          break;
	      case 1 : 
	          $js = "esc";
	          break;
	      case 2 : 
	          $js = "left";
	          break;
	      case 3 : 
	          $js = "up";
	          break;
	      case 4 : 
	          $js = "right";
	          break;
	      case 5 : 
	          $js = "down";
	          break;
	      case 6 : 
	          $js = "del";
	          break;
	      case 7 : 
	          $js = "semicolon";
	          break;
	      case 8 : 
	          $js = "slash";
	          break;
	      case 9 : 
	          $js = "plus";
	          break;
	      case 10 : 
	          $js = "{";
	          break;
	      case 11 : 
	          $js = "}";
	          break;
	      
	    }
	  }
	  return (
	          match !== 0 ? "ctrl+" : ""
	        ) + ((
	            match$1 !== 0 ? "alt+" : ""
	          ) + ((
	              match$2 !== 0 ? "meta+" : ""
	            ) + ((
	                match$3 !== 0 ? "shift+" : ""
	              ) + $js)));
	}

	function headMatches(_haystack, _needle, _matches) {
	  while(true) {
	    var matches = _matches;
	    var needle = _needle;
	    var haystack = _haystack;
	    if (haystack) {
	      if (needle) {
	        var match = Caml_obj.caml_equal(haystack[0], needle[0]);
	        if (match !== 0) {
	          _matches = /* true */1;
	          _needle = needle[1];
	          _haystack = haystack[1];
	          continue ;
	          
	        } else {
	          return /* false */0;
	        }
	      } else {
	        return /* false */0;
	      }
	    } else {
	      return matches;
	    }
	  };
	}

	function matchKeySequence(keyMap, strokes) {
	  var matches = List.filter(function (param) {
	          return headMatches(List.rev(param[0]), strokes, /* false */0);
	        })(keyMap);
	  return List.map(function (param) {
	              return param[1];
	            }, matches);
	}

	function nativeModifiers($$event) {
	  return /* record */[
	          /* code */codeOfKey($$event),
	          /* shift */+$$event.shiftKey,
	          /* alt */+$$event.altKey,
	          /* ctrl */+$$event.ctrlKey,
	          /* meta */+$$event.metaKey
	        ];
	}

	var include = ReactRe.Component[/* Stateful */8];

	var componentWillUpdate = include[1];

	var componentDidUpdate = include[2];

	var getInstanceVars = include[5];

	var jsPropsToReasonProps = include[6];

	var name = "KeyQueue";

	function propsToKeyMap(someProps) {
	  var keyMap = someProps[/* keyMap */0];
	  return /* record */[
	          /* counter */0,
	          /* processedKeyMap */List.map(function (param) {
	                return /* tuple */[
	                        List.map(parseStroke, param[0]),
	                        param[1]
	                      ];
	              }, keyMap),
	          /* keyPresses : [] */0,
	          /* keyListener : None */0
	        ];
	}

	var getInitialState = propsToKeyMap;

	function stateSetter(newStroke, param) {
	  var props = param[/* props */1];
	  var state = param[/* state */0];
	  var now = Date.now() | 0;
	  var match = props[/* timeout */2];
	  var strokes;
	  if (match) {
	    var timeout = match[0];
	    strokes = /* :: */[
	      /* tuple */[
	        newStroke,
	        now
	      ],
	      List.filter(function (param) {
	              return +((now - param[1] | 0) < timeout);
	            })(state[/* keyPresses */2])
	    ];
	  } else {
	    strokes = /* :: */[
	      /* tuple */[
	        newStroke,
	        now
	      ],
	      state[/* keyPresses */2]
	    ];
	  }
	  var matches = matchKeySequence(state[/* processedKeyMap */1], List.map(function (param) {
	            return param[0];
	          }, strokes));
	  List.iter(function (action) {
	        return Curry._2(props[/* onMatch */1], action, /* () */0);
	      }, matches);
	  var matchOccurred = +(0 < List.length(matches));
	  return /* record */[
	          /* counter */state[/* counter */0] + 1 | 0,
	          /* processedKeyMap */state[/* processedKeyMap */1],
	          /* keyPresses */matchOccurred !== 0 ? /* [] */0 : strokes,
	          /* keyListener */state[/* keyListener */3]
	        ];
	}

	function keyLogger(props, setState, rawEvent) {
	  var match = props[/* filter */3];
	  if (match) {
	    var stroke = nativeModifiers(rawEvent);
	    var match$1 = Curry._2(match[0], rawEvent, stroke);
	    if (match$1 !== 0) {
	      return Curry._1(setState, function (param) {
	                  return stateSetter(stroke, param);
	                });
	    } else {
	      return /* () */0;
	    }
	  } else if (rawEvent.repeat) {
	    return 0;
	  } else {
	    var target = rawEvent.target;
	    var type_ = target.tagName;
	    var match$2 = type_.toLowerCase();
	    var isInputEl;
	    switch (match$2) {
	      case "input" : 
	      case "text" : 
	      case "textarea" : 
	          isInputEl = /* true */1;
	          break;
	      default:
	        isInputEl = /* false */0;
	    }
	    if (isInputEl) {
	      return 0;
	    } else {
	      var stroke$1 = nativeModifiers(rawEvent);
	      return Curry._1(setState, function (param) {
	                  return stateSetter(stroke$1, param);
	                });
	    }
	  }
	}

	function componentDidMount(param) {
	  var setState = param[/* setState */5];
	  var props = param[/* props */1];
	  var state = param[/* state */0];
	  var keyListener = function (param) {
	    return keyLogger(props, setState, param);
	  };
	  window.addEventListener("keydown", keyListener);
	  return /* Some */[/* record */[
	            /* counter */state[/* counter */0],
	            /* processedKeyMap */state[/* processedKeyMap */1],
	            /* keyPresses */state[/* keyPresses */2],
	            /* keyListener : Some */[keyListener]
	          ]];
	}

	function componentWillUnmount(param) {
	  var match = param[/* state */0][/* keyListener */3];
	  if (match) {
	    window.removeEventListener("keydown", match[0]);
	    return /* () */0;
	  } else {
	    return /* () */0;
	  }
	}

	function componentWillReceiveProps(param, nextProps) {
	  var match = Caml_obj.caml_equal(param[/* props */1][/* keyMap */0], nextProps[/* keyMap */0]);
	  if (match !== 0) {
	    return /* None */0;
	  } else {
	    return /* Some */[propsToKeyMap(nextProps)];
	  }
	}

	function render() {
	  return React.createElement("div", {
	              className: "key_queue"
	            });
	}

	var Key_queue_004 = /* JsProps */include[7];

	var Key_queue_005 = /* InstanceVars */include[8];

	var Key_queue = /* module */[
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* getInstanceVars */getInstanceVars,
	  /* jsPropsToReasonProps */jsPropsToReasonProps,
	  Key_queue_004,
	  Key_queue_005,
	  /* name */name,
	  /* propsToKeyMap */propsToKeyMap,
	  /* getInitialState */getInitialState,
	  /* stateSetter */stateSetter,
	  /* keyLogger */keyLogger,
	  /* componentDidMount */componentDidMount,
	  /* componentWillUnmount */componentWillUnmount,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* render */render
	];

	var include$1 = ReactRe.CreateComponent([
	      name,
	      getInstanceVars,
	      getInitialState,
	      componentDidMount,
	      componentWillReceiveProps,
	      componentWillUpdate,
	      componentDidUpdate,
	      componentWillUnmount,
	      jsPropsToReasonProps,
	      render
	    ]);

	var wrapProps = include$1[1];

	function createElement(keyMap, onMatch, timeout, filter) {
	  return Curry._1(wrapProps, /* record */[
	              /* keyMap */keyMap,
	              /* onMatch */onMatch,
	              /* timeout */timeout,
	              /* filter */filter
	            ]);
	}

	var comp = include$1[0];

	exports.codeOfKey        = codeOfKey;
	exports.stroke           = stroke;
	exports.parseStroke      = parseStroke;
	exports.parseStrokes     = parseStrokes;
	exports.stringOfStroke   = stringOfStroke;
	exports.headMatches      = headMatches;
	exports.matchKeySequence = matchKeySequence;
	exports.nativeModifiers  = nativeModifiers;
	exports.Key_queue        = Key_queue;
	exports.comp             = comp;
	exports.wrapProps        = wrapProps;
	exports.createElement    = createElement;
	/* include Not a pure module */


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var List                    = __webpack_require__(5);
	var $$Array                 = __webpack_require__(24);
	var Block                   = __webpack_require__(7);
	var Curry                   = __webpack_require__(1);
	var State                   = __webpack_require__(73);
	var React                   = __webpack_require__(41);
	var Emojis                  = __webpack_require__(226);
	var $$String                = __webpack_require__(20);
	var Caml_array              = __webpack_require__(2);
	var Local_string            = __webpack_require__(227);
	var Caml_builtin_exceptions = __webpack_require__(3);

	function dummyEmbed(_, _$1, _$2, _$3, activityPieces) {
	  return /* tuple */[
	          /* Continue */1,
	          activityPieces
	        ];
	}

	var pastieRe = (/\n/);

	function pastie(message) {
	  var match = Local_string.matchRegex(message[/* content */0], (/\n/));
	  if (match) {
	    var lines = message[/* content */0].split((/\n/));
	    var previewTrimmedLines = lines.length > 4 ? $$Array.sub(lines, 0, 4).join("\n") : lines.join("\n");
	    var finalPreview = previewTrimmedLines.length > 300 ? previewTrimmedLines.substring(0, 300) : previewTrimmedLines;
	    return /* Elem */Block.__(1, [React.createElement("pre", {
	                    className: "pastie"
	                  }, finalPreview, message[/* content */0] !== finalPreview ? "..." : "", React.createElement("br", undefined), React.createElement("a", {
	                        className: "pastie-link",
	                        style: {
	                          cursor: "pointer"
	                        },
	                        href: "#",
	                        onClick: function () {
	                          return /* () */0;
	                        }
	                      }, "View pastie"))]);
	  } else {
	    return /* String */Block.__(0, [message[/* content */0]]);
	  }
	}

	function embedPastie(_, _$1, _$2, message, activityPieces) {
	  var match = Local_string.matchRegex(message[/* content */0], (/\n/));
	  if (match) {
	    try {
	      return /* tuple */[
	              /* Terminate */0,
	              /* array */[pastie(message)]
	            ];
	    }
	    catch (exn){
	      if (exn === Caml_builtin_exceptions.not_found) {
	        return /* tuple */[
	                /* Continue */1,
	                activityPieces
	              ];
	      } else {
	        throw exn;
	      }
	    }
	  } else {
	    return /* tuple */[
	            /* Continue */1,
	            activityPieces
	          ];
	  }
	}

	function embedEmoticon(_, _$1, _$2, _$3, activityPieces) {
	  return /* tuple */[
	          /* Continue */1,
	          $$Array.map(function (piece) {
	                if (piece.tag) {
	                  return /* Elem */Block.__(1, [piece[0]]);
	                } else {
	                  var s = piece[0];
	                  try {
	                    var emoji = Curry._2(State.EmojiPairs[/* find */21], $$String.trim(s), Emojis.emojiMap);
	                    return /* Elem */Block.__(1, [React.createElement("img", {
	                                    className: "emoticon-embed " + emoji[/* css */2],
	                                    title: emoji[/* src */1],
	                                    src: emoji[/* src */1]
	                                  })]);
	                  }
	                  catch (exn){
	                    if (exn === Caml_builtin_exceptions.not_found) {
	                      return /* String */Block.__(0, [s]);
	                    } else {
	                      throw exn;
	                    }
	                  }
	                }
	              }, activityPieces)
	        ];
	}

	var spaceRe = (/ /);

	var dummyElement = "";

	var reactSpaceEl = " ";

	var mentionRe = (/(.*)@(\w+)(.*)/);

	function embedMention(_, users, _$1, _$2, activityPieces) {
	  return /* tuple */[
	          /* Continue */1,
	          $$Array.map(function (piece) {
	                if (piece.tag) {
	                  return /* Elem */Block.__(1, [piece[0]]);
	                } else {
	                  var s = piece[0];
	                  var match = Local_string.matchRegex(s, mentionRe);
	                  if (match) {
	                    var _damn = match[0];
	                    var len = _damn.length;
	                    if (len !== 4) {
	                      if (len !== 0) {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                143,
	                                26
	                              ]
	                            ];
	                      } else {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                130,
	                                25
	                              ]
	                            ];
	                      }
	                    } else {
	                      var pre = _damn[1];
	                      var username = _damn[2];
	                      var post = _damn[3];
	                      try {
	                        List.find(function (user) {
	                              return +(user[/* username */4] === username);
	                            }, users);
	                        return /* Elem */Block.__(1, [React.createElement("span", undefined, pre, React.createElement("span", {
	                                            className: "mention"
	                                          }, username), " ", post)]);
	                      }
	                      catch (exn){
	                        if (exn === Caml_builtin_exceptions.not_found) {
	                          return /* String */Block.__(0, [s]);
	                        } else {
	                          throw exn;
	                        }
	                      }
	                    }
	                  } else {
	                    return /* String */Block.__(0, [s]);
	                  }
	                }
	              }, activityPieces)
	        ];
	}

	var linkRe = (/https?:\/\/.*/);

	function embedLink(_, _$1, _$2, _$3, activityPieces) {
	  return /* tuple */[
	          /* Continue */1,
	          $$Array.map(function (piece) {
	                if (piece.tag) {
	                  return /* Elem */Block.__(1, [piece[0]]);
	                } else {
	                  var s = piece[0];
	                  var match = Local_string.matchRegex(s, linkRe);
	                  if (match) {
	                    var _damn = match[0];
	                    var len = _damn.length;
	                    if (len !== 1) {
	                      if (len !== 0) {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                170,
	                                26
	                              ]
	                            ];
	                      } else {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                168,
	                                25
	                              ]
	                            ];
	                      }
	                    } else {
	                      var link = _damn[0];
	                      return /* Elem */Block.__(1, [React.createElement("a", {
	                                      href: link,
	                                      target: "_blank"
	                                    }, link)]);
	                    }
	                  } else {
	                    return /* String */Block.__(0, [s]);
	                  }
	                }
	              }, activityPieces)
	        ];
	}

	var rgbRe = (/(.*)rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)(.*)/);

	function embedRgb(_, _$1, _$2, _$3, activityPieces) {
	  return /* tuple */[
	          /* Continue */1,
	          $$Array.map(function (piece) {
	                if (piece.tag) {
	                  return /* Elem */Block.__(1, [piece[0]]);
	                } else {
	                  var s = piece[0];
	                  var match = Local_string.matchRegex(s, rgbRe);
	                  if (match) {
	                    var _damn = match[0];
	                    var len = _damn.length;
	                    if (len !== 6) {
	                      if (len !== 0) {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                208,
	                                26
	                              ]
	                            ];
	                      } else {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                195,
	                                25
	                              ]
	                            ];
	                      }
	                    } else {
	                      var r = _damn[2];
	                      var g = _damn[3];
	                      var b = _damn[4];
	                      return /* Elem */Block.__(1, [React.createElement("span", {
	                                      className: "color-preview",
	                                      style: {
	                                        backgroundColor: "rgb(" + (r + ("," + (g + ("," + (b + ")"))))),
	                                        borderRadius: "12px"
	                                      },
	                                      title: "rgb(" + (r + ("," + (g + ("," + (b + ")")))))
	                                    })]);
	                    }
	                  } else {
	                    return /* String */Block.__(0, [s]);
	                  }
	                }
	              }, activityPieces)
	        ];
	}

	var hexRe = (/(.*)#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})(.*)/);

	function embedHex(_, _$1, _$2, _$3, activityPieces) {
	  return /* tuple */[
	          /* Continue */1,
	          $$Array.map(function (piece) {
	                if (piece.tag) {
	                  return /* Elem */Block.__(1, [piece[0]]);
	                } else {
	                  var s = piece[0];
	                  var match = Local_string.matchRegex(s, hexRe);
	                  if (match) {
	                    var _damn = match[0];
	                    var len = _damn.length;
	                    if (len !== 4) {
	                      if (len !== 0) {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                241,
	                                26
	                              ]
	                            ];
	                      } else {
	                        throw [
	                              Caml_builtin_exceptions.assert_failure,
	                              [
	                                "plugins.re",
	                                233,
	                                25
	                              ]
	                            ];
	                      }
	                    } else {
	                      var hex = _damn[2];
	                      return /* Elem */Block.__(1, [React.createElement("span", {
	                                      className: "color-preview",
	                                      style: {
	                                        backgroundColor: "#" + hex,
	                                        borderRadius: "12px"
	                                      },
	                                      title: "#" + hex
	                                    })]);
	                    }
	                  } else {
	                    return /* String */Block.__(0, [s]);
	                  }
	                }
	              }, activityPieces)
	        ];
	}

	function renderableOfActivityPieces(pieces) {
	  return $$Array.map(function (piece) {
	              return piece[0];
	            }, pieces);
	}

	function processPlugins(me, users, channel, message, messageContentPieces, plugins) {
	  return List.fold_left(function (param, f) {
	              var messageContentPieces = param[1];
	              if (param[0] !== 0) {
	                return Curry._5(f, me, users, channel, message, messageContentPieces);
	              } else {
	                return /* tuple */[
	                        /* Terminate */0,
	                        messageContentPieces
	                      ];
	              }
	            }, /* tuple */[
	              /* Continue */1,
	              messageContentPieces
	            ], plugins);
	}

	var mePlugins_001 = /* :: */[
	  embedEmoticon,
	  /* :: */[
	    embedLink,
	    /* :: */[
	      embedRgb,
	      /* :: */[
	        embedHex,
	        /* [] */0
	      ]
	    ]
	  ]
	];

	var mePlugins = /* :: */[
	  embedMention,
	  mePlugins_001
	];

	var meRe = (/^\/me /);

	function embedMe(me, users, channel, message, activityPieces) {
	  var match = Local_string.matchRegex(message[/* content */0], meRe);
	  if (match) {
	    var len = match[0].length;
	    if (len !== 1) {
	      if (len !== 0) {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "plugins.re",
	                304,
	                18
	              ]
	            ];
	      } else {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "plugins.re",
	                286,
	                17
	              ]
	            ];
	      }
	    } else {
	      var match$1 = processPlugins(me, users, channel, message, activityPieces, mePlugins);
	      var pieces = renderableOfActivityPieces(match$1[1]);
	      Caml_array.caml_array_set(pieces, 0, React.createElement("span", undefined, me[/* username */4]));
	      var $$final = Caml_array.caml_make_vect((pieces.length << 1) - 1 | 0, dummyElement);
	      $$Array.iteri(function (index, item) {
	            Caml_array.caml_array_set($$final, (index << 1), item);
	            if (((index << 1) + 1 | 0) < $$final.length) {
	              return Caml_array.caml_array_set($$final, (index << 1) + 1 | 0, reactSpaceEl);
	            } else {
	              return 0;
	            }
	          }, pieces);
	      var elem = /* array */[/* Elem */Block.__(1, [React.createElement("em", undefined, $$final)])];
	      return /* tuple */[
	              /* Terminate */0,
	              elem
	            ];
	    }
	  } else {
	    return /* tuple */[
	            /* Continue */1,
	            activityPieces
	          ];
	  }
	}

	var quotePlugins_001 = /* :: */[
	  embedEmoticon,
	  /* :: */[
	    embedLink,
	    /* :: */[
	      embedRgb,
	      /* :: */[
	        embedHex,
	        /* [] */0
	      ]
	    ]
	  ]
	];

	var quotePlugins = /* :: */[
	  embedMention,
	  quotePlugins_001
	];

	var quoteRe = (/^> /);

	function embedQuote(me, users, channel, message, activityPieces) {
	  var match = Local_string.matchRegex(message[/* content */0], quoteRe);
	  if (match) {
	    var len = match[0].length;
	    if (len !== 1) {
	      if (len !== 0) {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "plugins.re",
	                343,
	                18
	              ]
	            ];
	      } else {
	        throw [
	              Caml_builtin_exceptions.assert_failure,
	              [
	                "plugins.re",
	                320,
	                17
	              ]
	            ];
	      }
	    } else {
	      var match$1 = processPlugins(me, users, channel, message, activityPieces, quotePlugins);
	      var pieces = renderableOfActivityPieces(match$1[1]);
	      Caml_array.caml_array_set(pieces, 0, React.createElement("div", {
	                className: "quote-color",
	                style: {
	                  backgroundColor: "rgb(131, 104, 214)"
	                }
	              }, ""));
	      var $$final = Caml_array.caml_make_vect((pieces.length << 1) - 1 | 0, dummyElement);
	      $$Array.iteri(function (index, item) {
	            Caml_array.caml_array_set($$final, (index << 1), item);
	            if (((index << 1) + 1 | 0) < $$final.length) {
	              return Caml_array.caml_array_set($$final, (index << 1) + 1 | 0, reactSpaceEl);
	            } else {
	              return 0;
	            }
	          }, pieces);
	      var elem = /* array */[/* Elem */Block.__(1, [React.createElement("div", {
	                  className: "quote-wrapper"
	                }, $$final)])];
	      return /* tuple */[
	              /* Terminate */0,
	              elem
	            ];
	    }
	  } else {
	    return /* tuple */[
	            /* Continue */1,
	            activityPieces
	          ];
	  }
	}

	var allPlugins_001 = /* :: */[
	  embedMe,
	  /* :: */[
	    embedPastie,
	    /* :: */[
	      embedMention,
	      /* :: */[
	        dummyEmbed,
	        /* :: */[
	          embedEmoticon,
	          /* :: */[
	            embedLink,
	            /* :: */[
	              embedRgb,
	              /* :: */[
	                embedHex,
	                /* [] */0
	              ]
	            ]
	          ]
	        ]
	      ]
	    ]
	  ]
	];

	var allPlugins = /* :: */[
	  embedQuote,
	  allPlugins_001
	];

	var imageRe = (/(https?:\/\/[\w|\.\/]+[jpg|jpeg|gif|png|svg]{3,4})/gi);

	function extractImages(message) {
	  var match = Local_string.matchRegex(message[/* content */0], imageRe);
	  if (match) {
	    return $$Array.map(function (src) {
	                return React.createElement("div", {
	                            className: "image-preview"
	                          }, React.createElement("a", {
	                                href: src,
	                                target: "_blank"
	                              }, React.createElement("img", {
	                                    className: "image-embed",
	                                    style: {
	                                      maxHeight: "10%",
	                                      maxWidth: "100%"
	                                    },
	                                    title: src,
	                                    src: src
	                                  })), React.createElement("div", {
	                                name: src
	                              }));
	              }, match[0]);
	  } else {
	    return /* array */[];
	  }
	}

	var youtubeTopRe = (/https?:\/\/www.youtube.com\/watch.+v=([a-zA-Z0-9\-]+)/);

	function extractYoutubes(message) {
	  var match = Local_string.matchRegex(message[/* content */0], youtubeTopRe);
	  if (match) {
	    var _damn = match[0];
	    if (_damn.length !== 2) {
	      throw [
	            Caml_builtin_exceptions.assert_failure,
	            [
	              "plugins.re",
	              398,
	              18
	            ]
	          ];
	    } else {
	      var videoId = _damn[1];
	      return /* array */[React.createElement("div", {
	                    className: "youtube-preview"
	                  }, React.createElement("iframe", {
	                        height: "315",
	                        src: "http://www.youtube.com/embed/" + videoId,
	                        width: "560"
	                      }))];
	    }
	  } else {
	    return /* array */[];
	  }
	}

	function extractMedia(message) {
	  var images = extractImages(message);
	  var youtubes = extractYoutubes(message);
	  return Curry._1($$Array.concat, /* :: */[
	              images,
	              /* :: */[
	                youtubes,
	                /* [] */0
	              ]
	            ]);
	}

	function renderableOfMessage(me, users, channel, message) {
	  var messageContentPieces = $$Array.map(function (piece) {
	        return /* String */Block.__(0, [piece]);
	      }, message[/* content */0].split(spaceRe));
	  var match = processPlugins(me, users, channel, message, messageContentPieces, allPlugins);
	  var pieces = renderableOfActivityPieces(match[1]);
	  var $$final = Caml_array.caml_make_vect((pieces.length << 1) - 1 | 0, dummyElement);
	  $$Array.iteri(function (index, item) {
	        Caml_array.caml_array_set($$final, (index << 1), item);
	        if (((index << 1) + 1 | 0) < $$final.length && ((index << 1) + 1 | 0) < $$final.length) {
	          return Caml_array.caml_array_set($$final, (index << 1) + 1 | 0, reactSpaceEl);
	        } else {
	          return 0;
	        }
	      }, pieces);
	  var media = extractMedia(message);
	  var mediaEl = React.createElement("div", {
	        className: "media-section"
	      }, media);
	  return /* tuple */[
	          $$final,
	          mediaEl,
	          media.length
	        ];
	}

	var slashPlay = dummyEmbed;

	exports.dummyEmbed                 = dummyEmbed;
	exports.pastieRe                   = pastieRe;
	exports.pastie                     = pastie;
	exports.embedPastie                = embedPastie;
	exports.slashPlay                  = slashPlay;
	exports.embedEmoticon              = embedEmoticon;
	exports.spaceRe                    = spaceRe;
	exports.dummyElement               = dummyElement;
	exports.reactSpaceEl               = reactSpaceEl;
	exports.mentionRe                  = mentionRe;
	exports.embedMention               = embedMention;
	exports.linkRe                     = linkRe;
	exports.embedLink                  = embedLink;
	exports.rgbRe                      = rgbRe;
	exports.embedRgb                   = embedRgb;
	exports.hexRe                      = hexRe;
	exports.embedHex                   = embedHex;
	exports.renderableOfActivityPieces = renderableOfActivityPieces;
	exports.processPlugins             = processPlugins;
	exports.mePlugins                  = mePlugins;
	exports.meRe                       = meRe;
	exports.embedMe                    = embedMe;
	exports.quotePlugins               = quotePlugins;
	exports.quoteRe                    = quoteRe;
	exports.embedQuote                 = embedQuote;
	exports.allPlugins                 = allPlugins;
	exports.imageRe                    = imageRe;
	exports.extractImages              = extractImages;
	exports.youtubeTopRe               = youtubeTopRe;
	exports.extractYoutubes            = extractYoutubes;
	exports.extractMedia               = extractMedia;
	exports.renderableOfMessage        = renderableOfMessage;
	/* pastieRe Not a pure module */


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var $$Array  = __webpack_require__(24);
	var Curry    = __webpack_require__(1);
	var State    = __webpack_require__(73);
	var Caml_obj = __webpack_require__(6);

	var emoticons = Caml_obj.caml_obj_dup(/* array */[
	      /* record */[
	        /* key */"(alone)",
	        /* src */"images/emoticons/alone.jpg",
	        /* css */"big",
	        /* title */"alone"
	      ],
	      /* record */[
	        /* key */"(awwyea)",
	        /* src */"images/emoticons/awwyea.jpg",
	        /* css */"big",
	        /* title */"awwyea"
	      ],
	      /* record */[
	        /* key */"(badass)",
	        /* src */"images/emoticons/badass.png",
	        /* css */"big",
	        /* title */"badass"
	      ],
	      /* record */[
	        /* key */"(bitchplease)",
	        /* src */"images/emoticons/bitchplease.jpg",
	        /* css */"big",
	        /* title */"bitchplease"
	      ],
	      /* record */[
	        /* key */"(cereal)",
	        /* src */"images/emoticons/cereal.jpg",
	        /* css */"big",
	        /* title */"cereal"
	      ],
	      /* record */[
	        /* key */"(challenge)",
	        /* src */"images/emoticons/challenge.jpg",
	        /* css */"big",
	        /* title */"challenge"
	      ],
	      /* record */[
	        /* key */"(fuckyeah)",
	        /* src */"images/emoticons/fuckyeah.jpg",
	        /* css */"big",
	        /* title */"fuckyeah"
	      ],
	      /* record */[
	        /* key */"(gtfo)",
	        /* src */"images/emoticons/gtfo.png",
	        /* css */"big",
	        /* title */"gtfo"
	      ],
	      /* record */[
	        /* key */"(ilied)",
	        /* src */"images/emoticons/ilied.jpg",
	        /* css */"big",
	        /* title */"ilied"
	      ],
	      /* record */[
	        /* key */"(megusta)",
	        /* src */"images/emoticons/megusta.jpg",
	        /* css */"big",
	        /* title */"megusta"
	      ],
	      /* record */[
	        /* key */"(notbad)",
	        /* src */"images/emoticons/notbad.jpg",
	        /* css */"big",
	        /* title */"notbad"
	      ],
	      /* record */[
	        /* key */"(okay)",
	        /* src */"images/emoticons/okay.jpg",
	        /* css */"big",
	        /* title */"okay"
	      ],
	      /* record */[
	        /* key */"(omgface)",
	        /* src */"images/emoticons/omgface.jpg",
	        /* css */"big",
	        /* title */"omgface"
	      ],
	      /* record */[
	        /* key */"(pokerface)",
	        /* src */"images/emoticons/pokerface.jpg",
	        /* css */"big",
	        /* title */"pokerface"
	      ],
	      /* record */[
	        /* key */"(problem)",
	        /* src */"images/emoticons/trollface.jpg",
	        /* css */"big",
	        /* title */"problem"
	      ],
	      /* record */[
	        /* key */"(rageguy)",
	        /* src */"images/emoticons/rageguy.jpg",
	        /* css */"big",
	        /* title */"rageguy"
	      ],
	      /* record */[
	        /* key */"(seriously)",
	        /* src */"images/emoticons/seriously.jpg",
	        /* css */"big",
	        /* title */"seriously"
	      ],
	      /* record */[
	        /* key */"(sweetjesus)",
	        /* src */"images/emoticons/sweetjesus.jpg",
	        /* css */"big",
	        /* title */"sweetjesus"
	      ],
	      /* record */[
	        /* key */"(trollface)",
	        /* src */"images/emoticons/trollface.jpg",
	        /* css */"big",
	        /* title */"trollface"
	      ],
	      /* record */[
	        /* key */"(truestory)",
	        /* src */"images/emoticons/truestory.png",
	        /* css */"big",
	        /* title */"truestory"
	      ],
	      /* record */[
	        /* key */"(youdontsay)",
	        /* src */"images/emoticons/youdontsay.png",
	        /* css */"big",
	        /* title */"youdontsay"
	      ],
	      /* record */[
	        /* key */"(yuno)",
	        /* src */"images/emoticons/yuno.jpg",
	        /* css */"big",
	        /* title */"yuno"
	      ],
	      /* record */[
	        /* key */":(",
	        /* src */"images/emoticons/sad.png",
	        /* css */"small",
	        /* title */"sad"
	      ],
	      /* record */[
	        /* key */"=(",
	        /* src */"images/emoticons/sad.png",
	        /* css */"small",
	        /* title */"sad"
	      ],
	      /* record */[
	        /* key */":)",
	        /* src */"images/emoticons/happy.png",
	        /* css */"small",
	        /* title */"happy"
	      ],
	      /* record */[
	        /* key */"=)",
	        /* src */"images/emoticons/happy.png",
	        /* css */"small",
	        /* title */"happy"
	      ],
	      /* record */[
	        /* key */":p",
	        /* src */"images/emoticons/tongue.png",
	        /* css */"small",
	        /* title */":p"
	      ],
	      /* record */[
	        /* key */"=p",
	        /* src */"images/emoticons/tongue.png",
	        /* css */"small",
	        /* title */"=p"
	      ],
	      /* record */[
	        /* key */":bowtie:",
	        /* src */"images/emoticons/emojis/bowtie.png",
	        /* css */"small",
	        /* title */"bowtie"
	      ],
	      /* record */[
	        /* key */":smile:",
	        /* src */"images/emoticons/emojis/smile.png",
	        /* css */"small",
	        /* title */"smile"
	      ],
	      /* record */[
	        /* key */":laughing:",
	        /* src */"images/emoticons/emojis/laughing.png",
	        /* css */"small",
	        /* title */"laughing"
	      ],
	      /* record */[
	        /* key */":blush:",
	        /* src */"images/emoticons/emojis/blush.png",
	        /* css */"small",
	        /* title */"blush"
	      ],
	      /* record */[
	        /* key */":smiley:",
	        /* src */"images/emoticons/emojis/smiley.png",
	        /* css */"small",
	        /* title */"smiley"
	      ],
	      /* record */[
	        /* key */":relaxed:",
	        /* src */"images/emoticons/emojis/relaxed.png",
	        /* css */"small",
	        /* title */"relaxed"
	      ],
	      /* record */[
	        /* key */":smirk:",
	        /* src */"images/emoticons/emojis/smirk.png",
	        /* css */"small",
	        /* title */"smirk"
	      ],
	      /* record */[
	        /* key */":heart_eyes:",
	        /* src */"images/emoticons/emojis/heart_eyes.png",
	        /* css */"small",
	        /* title */"heart_eyes"
	      ],
	      /* record */[
	        /* key */":kissing_heart:",
	        /* src */"images/emoticons/emojis/kissing_heart.png",
	        /* css */"small",
	        /* title */"kissing_heart"
	      ],
	      /* record */[
	        /* key */":kissing_closed_eyes:",
	        /* src */"images/emoticons/emojis/kissing_closed_eyes.png",
	        /* css */"small",
	        /* title */"kissing_closed_eyes"
	      ],
	      /* record */[
	        /* key */":flushed:",
	        /* src */"images/emoticons/emojis/flushed.png",
	        /* css */"small",
	        /* title */"flushed"
	      ],
	      /* record */[
	        /* key */":relieved:",
	        /* src */"images/emoticons/emojis/relieved.png",
	        /* css */"small",
	        /* title */"relieved"
	      ],
	      /* record */[
	        /* key */":satisfied:",
	        /* src */"images/emoticons/emojis/satisfied.png",
	        /* css */"small",
	        /* title */"satisfied"
	      ],
	      /* record */[
	        /* key */":grin:",
	        /* src */"images/emoticons/emojis/grin.png",
	        /* css */"small",
	        /* title */"grin"
	      ],
	      /* record */[
	        /* key */":wink:",
	        /* src */"images/emoticons/emojis/wink.png",
	        /* css */"small",
	        /* title */"wink"
	      ],
	      /* record */[
	        /* key */":stuck_out_tongue_winking_eye:",
	        /* src */"images/emoticons/emojis/stuck_out_tongue_winking_eye.png",
	        /* css */"small",
	        /* title */"stuck_out_tongue_winking_eye"
	      ],
	      /* record */[
	        /* key */":stuck_out_tongue_closed_eyes:",
	        /* src */"images/emoticons/emojis/stuck_out_tongue_closed_eyes.png",
	        /* css */"small",
	        /* title */"stuck_out_tongue_closed_eyes"
	      ],
	      /* record */[
	        /* key */":grinning:",
	        /* src */"images/emoticons/emojis/grinning.png",
	        /* css */"small",
	        /* title */"grinning"
	      ],
	      /* record */[
	        /* key */":kissing:",
	        /* src */"images/emoticons/emojis/kissing.png",
	        /* css */"small",
	        /* title */"kissing"
	      ],
	      /* record */[
	        /* key */":kissing_smiling_eyes:",
	        /* src */"images/emoticons/emojis/kissing_smiling_eyes.png",
	        /* css */"small",
	        /* title */"kissing_smiling_eyes"
	      ],
	      /* record */[
	        /* key */":stuck_out_tongue:",
	        /* src */"images/emoticons/emojis/stuck_out_tongue.png",
	        /* css */"small",
	        /* title */"stuck_out_tongue"
	      ],
	      /* record */[
	        /* key */":sleeping:",
	        /* src */"images/emoticons/emojis/sleeping.png",
	        /* css */"small",
	        /* title */"sleeping"
	      ],
	      /* record */[
	        /* key */":worried:",
	        /* src */"images/emoticons/emojis/worried.png",
	        /* css */"small",
	        /* title */"worried"
	      ],
	      /* record */[
	        /* key */":frowning:",
	        /* src */"images/emoticons/emojis/frowning.png",
	        /* css */"small",
	        /* title */"frowning"
	      ],
	      /* record */[
	        /* key */":anguished:",
	        /* src */"images/emoticons/emojis/anguished.png",
	        /* css */"small",
	        /* title */"anguished"
	      ],
	      /* record */[
	        /* key */":open_mouth:",
	        /* src */"images/emoticons/emojis/open_mouth.png",
	        /* css */"small",
	        /* title */"open_mouth"
	      ],
	      /* record */[
	        /* key */":grimacing:",
	        /* src */"images/emoticons/emojis/grimacing.png",
	        /* css */"small",
	        /* title */"grimacing"
	      ],
	      /* record */[
	        /* key */":confused:",
	        /* src */"images/emoticons/emojis/confused.png",
	        /* css */"small",
	        /* title */"confused"
	      ],
	      /* record */[
	        /* key */":hushed:",
	        /* src */"images/emoticons/emojis/hushed.png",
	        /* css */"small",
	        /* title */"hushed"
	      ],
	      /* record */[
	        /* key */":expressionless:",
	        /* src */"images/emoticons/emojis/expressionless.png",
	        /* css */"small",
	        /* title */"expressionless"
	      ],
	      /* record */[
	        /* key */":unamused:",
	        /* src */"images/emoticons/emojis/unamused.png",
	        /* css */"small",
	        /* title */"unamused"
	      ],
	      /* record */[
	        /* key */":sweat_smile:",
	        /* src */"images/emoticons/emojis/sweat_smile.png",
	        /* css */"small",
	        /* title */"sweat_smile"
	      ],
	      /* record */[
	        /* key */":sweat:",
	        /* src */"images/emoticons/emojis/sweat.png",
	        /* css */"small",
	        /* title */"sweat"
	      ],
	      /* record */[
	        /* key */":disappointed_relieved:",
	        /* src */"images/emoticons/emojis/disappointed_relieved.png",
	        /* css */"small",
	        /* title */"disappointed_relieved"
	      ],
	      /* record */[
	        /* key */":weary:",
	        /* src */"images/emoticons/emojis/weary.png",
	        /* css */"small",
	        /* title */"weary"
	      ],
	      /* record */[
	        /* key */":pensive:",
	        /* src */"images/emoticons/emojis/pensive.png",
	        /* css */"small",
	        /* title */"pensive"
	      ],
	      /* record */[
	        /* key */":disappointed:",
	        /* src */"images/emoticons/emojis/disappointed.png",
	        /* css */"small",
	        /* title */"disappointed"
	      ],
	      /* record */[
	        /* key */":confounded:",
	        /* src */"images/emoticons/emojis/confounded.png",
	        /* css */"small",
	        /* title */"confounded"
	      ],
	      /* record */[
	        /* key */":fearful:",
	        /* src */"images/emoticons/emojis/fearful.png",
	        /* css */"small",
	        /* title */"fearful"
	      ],
	      /* record */[
	        /* key */":cold_sweat:",
	        /* src */"images/emoticons/emojis/cold_sweat.png",
	        /* css */"small",
	        /* title */"cold_sweat"
	      ],
	      /* record */[
	        /* key */":persevere:",
	        /* src */"images/emoticons/emojis/persevere.png",
	        /* css */"small",
	        /* title */"persevere"
	      ],
	      /* record */[
	        /* key */":cry:",
	        /* src */"images/emoticons/emojis/cry.png",
	        /* css */"small",
	        /* title */"cry"
	      ],
	      /* record */[
	        /* key */":sob:",
	        /* src */"images/emoticons/emojis/sob.png",
	        /* css */"small",
	        /* title */"sob"
	      ],
	      /* record */[
	        /* key */":joy:",
	        /* src */"images/emoticons/emojis/joy.png",
	        /* css */"small",
	        /* title */"joy"
	      ],
	      /* record */[
	        /* key */":astonished:",
	        /* src */"images/emoticons/emojis/astonished.png",
	        /* css */"small",
	        /* title */"astonished"
	      ],
	      /* record */[
	        /* key */":scream:",
	        /* src */"images/emoticons/emojis/scream.png",
	        /* css */"small",
	        /* title */"scream"
	      ],
	      /* record */[
	        /* key */":neckbeard:",
	        /* src */"images/emoticons/emojis/neckbeard.png",
	        /* css */"small",
	        /* title */"neckbeard"
	      ],
	      /* record */[
	        /* key */":tired_face:",
	        /* src */"images/emoticons/emojis/tired_face.png",
	        /* css */"small",
	        /* title */"tired_face"
	      ],
	      /* record */[
	        /* key */":angry:",
	        /* src */"images/emoticons/emojis/angry.png",
	        /* css */"small",
	        /* title */"angry"
	      ],
	      /* record */[
	        /* key */":rage:",
	        /* src */"images/emoticons/emojis/rage.png",
	        /* css */"small",
	        /* title */"rage"
	      ],
	      /* record */[
	        /* key */":triumph:",
	        /* src */"images/emoticons/emojis/triumph.png",
	        /* css */"small",
	        /* title */"triumph"
	      ],
	      /* record */[
	        /* key */":sleepy:",
	        /* src */"images/emoticons/emojis/sleepy.png",
	        /* css */"small",
	        /* title */"sleepy"
	      ],
	      /* record */[
	        /* key */":yum:",
	        /* src */"images/emoticons/emojis/yum.png",
	        /* css */"small",
	        /* title */"yum"
	      ],
	      /* record */[
	        /* key */":mask:",
	        /* src */"images/emoticons/emojis/mask.png",
	        /* css */"small",
	        /* title */"mask"
	      ],
	      /* record */[
	        /* key */":sunglasses:",
	        /* src */"images/emoticons/emojis/sunglasses.png",
	        /* css */"small",
	        /* title */"sunglasses"
	      ],
	      /* record */[
	        /* key */":dizzy_face:",
	        /* src */"images/emoticons/emojis/dizzy_face.png",
	        /* css */"small",
	        /* title */"dizzy_face"
	      ],
	      /* record */[
	        /* key */":imp:",
	        /* src */"images/emoticons/emojis/imp.png",
	        /* css */"small",
	        /* title */"imp"
	      ],
	      /* record */[
	        /* key */":smiling_imp:",
	        /* src */"images/emoticons/emojis/smiling_imp.png",
	        /* css */"small",
	        /* title */"smiling_imp"
	      ],
	      /* record */[
	        /* key */":neutral_face:",
	        /* src */"images/emoticons/emojis/neutral_face.png",
	        /* css */"small",
	        /* title */"neutral_face"
	      ],
	      /* record */[
	        /* key */":no_mouth:",
	        /* src */"images/emoticons/emojis/no_mouth.png",
	        /* css */"small",
	        /* title */"no_mouth"
	      ],
	      /* record */[
	        /* key */":innocent:",
	        /* src */"images/emoticons/emojis/innocent.png",
	        /* css */"small",
	        /* title */"innocent"
	      ],
	      /* record */[
	        /* key */":alien:",
	        /* src */"images/emoticons/emojis/alien.png",
	        /* css */"small",
	        /* title */"alien"
	      ],
	      /* record */[
	        /* key */":yellow_heart:",
	        /* src */"images/emoticons/emojis/yellow_heart.png",
	        /* css */"small",
	        /* title */"yellow_heart"
	      ],
	      /* record */[
	        /* key */":blue_heart:",
	        /* src */"images/emoticons/emojis/blue_heart.png",
	        /* css */"small",
	        /* title */"blue_heart"
	      ],
	      /* record */[
	        /* key */":purple_heart:",
	        /* src */"images/emoticons/emojis/purple_heart.png",
	        /* css */"small",
	        /* title */"purple_heart"
	      ],
	      /* record */[
	        /* key */":heart:",
	        /* src */"images/emoticons/emojis/heart.png",
	        /* css */"small",
	        /* title */"heart"
	      ],
	      /* record */[
	        /* key */":green_heart:",
	        /* src */"images/emoticons/emojis/green_heart.png",
	        /* css */"small",
	        /* title */"green_heart"
	      ],
	      /* record */[
	        /* key */":broken_heart:",
	        /* src */"images/emoticons/emojis/broken_heart.png",
	        /* css */"small",
	        /* title */"broken_heart"
	      ],
	      /* record */[
	        /* key */":heartbeat:",
	        /* src */"images/emoticons/emojis/heartbeat.png",
	        /* css */"small",
	        /* title */"heartbeat"
	      ],
	      /* record */[
	        /* key */":heartpulse:",
	        /* src */"images/emoticons/emojis/heartpulse.png",
	        /* css */"small",
	        /* title */"heartpulse"
	      ],
	      /* record */[
	        /* key */":two_hearts:",
	        /* src */"images/emoticons/emojis/two_hearts.png",
	        /* css */"small",
	        /* title */"two_hearts"
	      ],
	      /* record */[
	        /* key */":revolving_hearts:",
	        /* src */"images/emoticons/emojis/revolving_hearts.png",
	        /* css */"small",
	        /* title */"revolving_hearts"
	      ],
	      /* record */[
	        /* key */":cupid:",
	        /* src */"images/emoticons/emojis/cupid.png",
	        /* css */"small",
	        /* title */"cupid"
	      ],
	      /* record */[
	        /* key */":sparkling_heart:",
	        /* src */"images/emoticons/emojis/sparkling_heart.png",
	        /* css */"small",
	        /* title */"sparkling_heart"
	      ],
	      /* record */[
	        /* key */":sparkles:",
	        /* src */"images/emoticons/emojis/sparkles.png",
	        /* css */"small",
	        /* title */"sparkles"
	      ],
	      /* record */[
	        /* key */":star:",
	        /* src */"images/emoticons/emojis/star.png",
	        /* css */"small",
	        /* title */"star"
	      ],
	      /* record */[
	        /* key */":star2:",
	        /* src */"images/emoticons/emojis/star2.png",
	        /* css */"small",
	        /* title */"star2"
	      ],
	      /* record */[
	        /* key */":dizzy:",
	        /* src */"images/emoticons/emojis/dizzy.png",
	        /* css */"small",
	        /* title */"dizzy"
	      ],
	      /* record */[
	        /* key */":boom:",
	        /* src */"images/emoticons/emojis/boom.png",
	        /* css */"small",
	        /* title */"boom"
	      ],
	      /* record */[
	        /* key */":collision:",
	        /* src */"images/emoticons/emojis/collision.png",
	        /* css */"small",
	        /* title */"collision"
	      ],
	      /* record */[
	        /* key */":anger:",
	        /* src */"images/emoticons/emojis/anger.png",
	        /* css */"small",
	        /* title */"anger"
	      ],
	      /* record */[
	        /* key */":exclamation:",
	        /* src */"images/emoticons/emojis/exclamation.png",
	        /* css */"small",
	        /* title */"exclamation"
	      ],
	      /* record */[
	        /* key */":question:",
	        /* src */"images/emoticons/emojis/question.png",
	        /* css */"small",
	        /* title */"question"
	      ],
	      /* record */[
	        /* key */":grey_exclamation:",
	        /* src */"images/emoticons/emojis/grey_exclamation.png",
	        /* css */"small",
	        /* title */"grey_exclamation"
	      ],
	      /* record */[
	        /* key */":grey_question:",
	        /* src */"images/emoticons/emojis/grey_question.png",
	        /* css */"small",
	        /* title */"grey_question"
	      ],
	      /* record */[
	        /* key */":zzz:",
	        /* src */"images/emoticons/emojis/zzz.png",
	        /* css */"small",
	        /* title */"zzz"
	      ],
	      /* record */[
	        /* key */":dash:",
	        /* src */"images/emoticons/emojis/dash.png",
	        /* css */"small",
	        /* title */"dash"
	      ],
	      /* record */[
	        /* key */":sweat_drops:",
	        /* src */"images/emoticons/emojis/sweat_drops.png",
	        /* css */"small",
	        /* title */"sweat_drops"
	      ],
	      /* record */[
	        /* key */":notes:",
	        /* src */"images/emoticons/emojis/notes.png",
	        /* css */"small",
	        /* title */"notes"
	      ],
	      /* record */[
	        /* key */":musical_note:",
	        /* src */"images/emoticons/emojis/musical_note.png",
	        /* css */"small",
	        /* title */"musical_note"
	      ],
	      /* record */[
	        /* key */":fire:",
	        /* src */"images/emoticons/emojis/fire.png",
	        /* css */"small",
	        /* title */"fire"
	      ],
	      /* record */[
	        /* key */":hankey:",
	        /* src */"images/emoticons/emojis/hankey.png",
	        /* css */"small",
	        /* title */"hankey"
	      ],
	      /* record */[
	        /* key */":poop:",
	        /* src */"images/emoticons/emojis/poop.png",
	        /* css */"small",
	        /* title */"poop"
	      ],
	      /* record */[
	        /* key */":shit:",
	        /* src */"images/emoticons/emojis/shit.png",
	        /* css */"small",
	        /* title */"shit"
	      ],
	      /* record */[
	        /* key */":+1:",
	        /* src */"images/emoticons/emojis/plus1.png",
	        /* css */"small",
	        /* title */"+1"
	      ],
	      /* record */[
	        /* key */":thumbsup:",
	        /* src */"images/emoticons/emojis/thumbsup.png",
	        /* css */"small",
	        /* title */"thumbsup"
	      ],
	      /* record */[
	        /* key */":-1:",
	        /* src */"images/emoticons/emojis/-1.png",
	        /* css */"small",
	        /* title */"-1"
	      ],
	      /* record */[
	        /* key */":thumbsdown:",
	        /* src */"images/emoticons/emojis/thumbsdown.png",
	        /* css */"small",
	        /* title */"thumbsdown"
	      ],
	      /* record */[
	        /* key */":ok_hand:",
	        /* src */"images/emoticons/emojis/ok_hand.png",
	        /* css */"small",
	        /* title */"ok_hand"
	      ],
	      /* record */[
	        /* key */":punch:",
	        /* src */"images/emoticons/emojis/punch.png",
	        /* css */"small",
	        /* title */"punch"
	      ],
	      /* record */[
	        /* key */":facepunch:",
	        /* src */"images/emoticons/emojis/facepunch.png",
	        /* css */"small",
	        /* title */"facepunch"
	      ],
	      /* record */[
	        /* key */":fist:",
	        /* src */"images/emoticons/emojis/fist.png",
	        /* css */"small",
	        /* title */"fist"
	      ],
	      /* record */[
	        /* key */":v:",
	        /* src */"images/emoticons/emojis/v.png",
	        /* css */"small",
	        /* title */"v"
	      ],
	      /* record */[
	        /* key */":wave:",
	        /* src */"images/emoticons/emojis/wave.png",
	        /* css */"small",
	        /* title */"wave"
	      ],
	      /* record */[
	        /* key */":hand:",
	        /* src */"images/emoticons/emojis/hand.png",
	        /* css */"small",
	        /* title */"hand"
	      ],
	      /* record */[
	        /* key */":open_hands:",
	        /* src */"images/emoticons/emojis/open_hands.png",
	        /* css */"small",
	        /* title */"open_hands"
	      ],
	      /* record */[
	        /* key */":point_up:",
	        /* src */"images/emoticons/emojis/point_up.png",
	        /* css */"small",
	        /* title */"point_up"
	      ],
	      /* record */[
	        /* key */":point_down:",
	        /* src */"images/emoticons/emojis/point_down.png",
	        /* css */"small",
	        /* title */"point_down"
	      ],
	      /* record */[
	        /* key */":point_left:",
	        /* src */"images/emoticons/emojis/point_left.png",
	        /* css */"small",
	        /* title */"point_left"
	      ],
	      /* record */[
	        /* key */":point_right:",
	        /* src */"images/emoticons/emojis/point_right.png",
	        /* css */"small",
	        /* title */"point_right"
	      ],
	      /* record */[
	        /* key */":raised_hands:",
	        /* src */"images/emoticons/emojis/raised_hands.png",
	        /* css */"small",
	        /* title */"raised_hands"
	      ],
	      /* record */[
	        /* key */":pray:",
	        /* src */"images/emoticons/emojis/pray.png",
	        /* css */"small",
	        /* title */"pray"
	      ],
	      /* record */[
	        /* key */":point_up_2:",
	        /* src */"images/emoticons/emojis/point_up_2.png",
	        /* css */"small",
	        /* title */"point_up_2"
	      ],
	      /* record */[
	        /* key */":clap:",
	        /* src */"images/emoticons/emojis/clap.png",
	        /* css */"small",
	        /* title */"clap"
	      ],
	      /* record */[
	        /* key */":muscle:",
	        /* src */"images/emoticons/emojis/muscle.png",
	        /* css */"small",
	        /* title */"muscle"
	      ],
	      /* record */[
	        /* key */":metal:",
	        /* src */"images/emoticons/emojis/metal.png",
	        /* css */"small",
	        /* title */"metal"
	      ],
	      /* record */[
	        /* key */":fu:",
	        /* src */"images/emoticons/emojis/fu.png",
	        /* css */"small",
	        /* title */"fu"
	      ],
	      /* record */[
	        /* key */":walking:",
	        /* src */"images/emoticons/emojis/walking.png",
	        /* css */"small",
	        /* title */"walking"
	      ],
	      /* record */[
	        /* key */":runner:",
	        /* src */"images/emoticons/emojis/runner.png",
	        /* css */"small",
	        /* title */"runner"
	      ],
	      /* record */[
	        /* key */":running:",
	        /* src */"images/emoticons/emojis/running.png",
	        /* css */"small",
	        /* title */"running"
	      ],
	      /* record */[
	        /* key */":couple:",
	        /* src */"images/emoticons/emojis/couple.png",
	        /* css */"small",
	        /* title */"couple"
	      ],
	      /* record */[
	        /* key */":family:",
	        /* src */"images/emoticons/emojis/family.png",
	        /* css */"small",
	        /* title */"family"
	      ],
	      /* record */[
	        /* key */":two_men_holding_hands:",
	        /* src */"images/emoticons/emojis/two_men_holding_hands.png",
	        /* css */"small",
	        /* title */"two_men_holding_hands"
	      ],
	      /* record */[
	        /* key */":two_women_holding_hands:",
	        /* src */"images/emoticons/emojis/two_women_holding_hands.png",
	        /* css */"small",
	        /* title */"two_women_holding_hands"
	      ],
	      /* record */[
	        /* key */":dancer:",
	        /* src */"images/emoticons/emojis/dancer.png",
	        /* css */"small",
	        /* title */"dancer"
	      ],
	      /* record */[
	        /* key */":dancers:",
	        /* src */"images/emoticons/emojis/dancers.png",
	        /* css */"small",
	        /* title */"dancers"
	      ],
	      /* record */[
	        /* key */":ok_woman:",
	        /* src */"images/emoticons/emojis/ok_woman.png",
	        /* css */"small",
	        /* title */"ok_woman"
	      ],
	      /* record */[
	        /* key */":no_good:",
	        /* src */"images/emoticons/emojis/no_good.png",
	        /* css */"small",
	        /* title */"no_good"
	      ],
	      /* record */[
	        /* key */":information_desk_person:",
	        /* src */"images/emoticons/emojis/information_desk_person.png",
	        /* css */"small",
	        /* title */"information_desk_person"
	      ],
	      /* record */[
	        /* key */":raised_hand:",
	        /* src */"images/emoticons/emojis/raised_hand.png",
	        /* css */"small",
	        /* title */"raised_hand"
	      ],
	      /* record */[
	        /* key */":bride_with_veil:",
	        /* src */"images/emoticons/emojis/bride_with_veil.png",
	        /* css */"small",
	        /* title */"bride_with_veil"
	      ],
	      /* record */[
	        /* key */":person_with_pouting_face:",
	        /* src */"images/emoticons/emojis/person_with_pouting_face.png",
	        /* css */"small",
	        /* title */"person_with_pouting_face"
	      ],
	      /* record */[
	        /* key */":person_frowning:",
	        /* src */"images/emoticons/emojis/person_frowning.png",
	        /* css */"small",
	        /* title */"person_frowning"
	      ],
	      /* record */[
	        /* key */":bow:",
	        /* src */"images/emoticons/emojis/bow.png",
	        /* css */"small",
	        /* title */"bow"
	      ],
	      /* record */[
	        /* key */":couplekiss:",
	        /* src */"images/emoticons/emojis/couplekiss.png",
	        /* css */"small",
	        /* title */"couplekiss"
	      ],
	      /* record */[
	        /* key */":couple_with_heart:",
	        /* src */"images/emoticons/emojis/couple_with_heart.png",
	        /* css */"small",
	        /* title */"couple_with_heart"
	      ],
	      /* record */[
	        /* key */":massage:",
	        /* src */"images/emoticons/emojis/massage.png",
	        /* css */"small",
	        /* title */"massage"
	      ],
	      /* record */[
	        /* key */":haircut:",
	        /* src */"images/emoticons/emojis/haircut.png",
	        /* css */"small",
	        /* title */"haircut"
	      ],
	      /* record */[
	        /* key */":nail_care:",
	        /* src */"images/emoticons/emojis/nail_care.png",
	        /* css */"small",
	        /* title */"nail_care"
	      ],
	      /* record */[
	        /* key */":boy:",
	        /* src */"images/emoticons/emojis/boy.png",
	        /* css */"small",
	        /* title */"boy"
	      ],
	      /* record */[
	        /* key */":girl:",
	        /* src */"images/emoticons/emojis/girl.png",
	        /* css */"small",
	        /* title */"girl"
	      ],
	      /* record */[
	        /* key */":woman:",
	        /* src */"images/emoticons/emojis/woman.png",
	        /* css */"small",
	        /* title */"woman"
	      ],
	      /* record */[
	        /* key */":man:",
	        /* src */"images/emoticons/emojis/man.png",
	        /* css */"small",
	        /* title */"man"
	      ],
	      /* record */[
	        /* key */":baby:",
	        /* src */"images/emoticons/emojis/baby.png",
	        /* css */"small",
	        /* title */"baby"
	      ],
	      /* record */[
	        /* key */":older_woman:",
	        /* src */"images/emoticons/emojis/older_woman.png",
	        /* css */"small",
	        /* title */"older_woman"
	      ],
	      /* record */[
	        /* key */":older_man:",
	        /* src */"images/emoticons/emojis/older_man.png",
	        /* css */"small",
	        /* title */"older_man"
	      ],
	      /* record */[
	        /* key */":person_with_blond_hair:",
	        /* src */"images/emoticons/emojis/person_with_blond_hair.png",
	        /* css */"small",
	        /* title */"person_with_blond_hair"
	      ],
	      /* record */[
	        /* key */":man_with_gua_pi_mao:",
	        /* src */"images/emoticons/emojis/man_with_gua_pi_mao.png",
	        /* css */"small",
	        /* title */"man_with_gua_pi_mao"
	      ],
	      /* record */[
	        /* key */":man_with_turban:",
	        /* src */"images/emoticons/emojis/man_with_turban.png",
	        /* css */"small",
	        /* title */"man_with_turban"
	      ],
	      /* record */[
	        /* key */":construction_worker:",
	        /* src */"images/emoticons/emojis/construction_worker.png",
	        /* css */"small",
	        /* title */"construction_worker"
	      ],
	      /* record */[
	        /* key */":cop:",
	        /* src */"images/emoticons/emojis/cop.png",
	        /* css */"small",
	        /* title */"cop"
	      ],
	      /* record */[
	        /* key */":angel:",
	        /* src */"images/emoticons/emojis/angel.png",
	        /* css */"small",
	        /* title */"angel"
	      ],
	      /* record */[
	        /* key */":princess:",
	        /* src */"images/emoticons/emojis/princess.png",
	        /* css */"small",
	        /* title */"princess"
	      ],
	      /* record */[
	        /* key */":smiley_cat:",
	        /* src */"images/emoticons/emojis/smiley_cat.png",
	        /* css */"small",
	        /* title */"smiley_cat"
	      ],
	      /* record */[
	        /* key */":smile_cat:",
	        /* src */"images/emoticons/emojis/smile_cat.png",
	        /* css */"small",
	        /* title */"smile_cat"
	      ],
	      /* record */[
	        /* key */":heart_eyes_cat:",
	        /* src */"images/emoticons/emojis/heart_eyes_cat.png",
	        /* css */"small",
	        /* title */"heart_eyes_cat"
	      ],
	      /* record */[
	        /* key */":kissing_cat:",
	        /* src */"images/emoticons/emojis/kissing_cat.png",
	        /* css */"small",
	        /* title */"kissing_cat"
	      ],
	      /* record */[
	        /* key */":smirk_cat:",
	        /* src */"images/emoticons/emojis/smirk_cat.png",
	        /* css */"small",
	        /* title */"smirk_cat"
	      ],
	      /* record */[
	        /* key */":scream_cat:",
	        /* src */"images/emoticons/emojis/scream_cat.png",
	        /* css */"small",
	        /* title */"scream_cat"
	      ],
	      /* record */[
	        /* key */":crying_cat_face:",
	        /* src */"images/emoticons/emojis/crying_cat_face.png",
	        /* css */"small",
	        /* title */"crying_cat_face"
	      ],
	      /* record */[
	        /* key */":joy_cat:",
	        /* src */"images/emoticons/emojis/joy_cat.png",
	        /* css */"small",
	        /* title */"joy_cat"
	      ],
	      /* record */[
	        /* key */":pouting_cat:",
	        /* src */"images/emoticons/emojis/pouting_cat.png",
	        /* css */"small",
	        /* title */"pouting_cat"
	      ],
	      /* record */[
	        /* key */":japanese_ogre:",
	        /* src */"images/emoticons/emojis/japanese_ogre.png",
	        /* css */"small",
	        /* title */"japanese_ogre"
	      ],
	      /* record */[
	        /* key */":japanese_goblin:",
	        /* src */"images/emoticons/emojis/japanese_goblin.png",
	        /* css */"small",
	        /* title */"japanese_goblin"
	      ],
	      /* record */[
	        /* key */":see_no_evil:",
	        /* src */"images/emoticons/emojis/see_no_evil.png",
	        /* css */"small",
	        /* title */"see_no_evil"
	      ],
	      /* record */[
	        /* key */":hear_no_evil:",
	        /* src */"images/emoticons/emojis/hear_no_evil.png",
	        /* css */"small",
	        /* title */"hear_no_evil"
	      ],
	      /* record */[
	        /* key */":speak_no_evil:",
	        /* src */"images/emoticons/emojis/speak_no_evil.png",
	        /* css */"small",
	        /* title */"speak_no_evil"
	      ],
	      /* record */[
	        /* key */":guardsman:",
	        /* src */"images/emoticons/emojis/guardsman.png",
	        /* css */"small",
	        /* title */"guardsman"
	      ],
	      /* record */[
	        /* key */":skull:",
	        /* src */"images/emoticons/emojis/skull.png",
	        /* css */"small",
	        /* title */"skull"
	      ],
	      /* record */[
	        /* key */":feet:",
	        /* src */"images/emoticons/emojis/feet.png",
	        /* css */"small",
	        /* title */"feet"
	      ],
	      /* record */[
	        /* key */":lips:",
	        /* src */"images/emoticons/emojis/lips.png",
	        /* css */"small",
	        /* title */"lips"
	      ],
	      /* record */[
	        /* key */":kiss:",
	        /* src */"images/emoticons/emojis/kiss.png",
	        /* css */"small",
	        /* title */"kiss"
	      ],
	      /* record */[
	        /* key */":droplet:",
	        /* src */"images/emoticons/emojis/droplet.png",
	        /* css */"small",
	        /* title */"droplet"
	      ],
	      /* record */[
	        /* key */":ear:",
	        /* src */"images/emoticons/emojis/ear.png",
	        /* css */"small",
	        /* title */"ear"
	      ],
	      /* record */[
	        /* key */":eyes:",
	        /* src */"images/emoticons/emojis/eyes.png",
	        /* css */"small",
	        /* title */"eyes"
	      ],
	      /* record */[
	        /* key */":nose:",
	        /* src */"images/emoticons/emojis/nose.png",
	        /* css */"small",
	        /* title */"nose"
	      ],
	      /* record */[
	        /* key */":tongue:",
	        /* src */"images/emoticons/emojis/tongue.png",
	        /* css */"small",
	        /* title */"tongue"
	      ],
	      /* record */[
	        /* key */":love_letter:",
	        /* src */"images/emoticons/emojis/love_letter.png",
	        /* css */"small",
	        /* title */"love_letter"
	      ],
	      /* record */[
	        /* key */":bust_in_silhouette:",
	        /* src */"images/emoticons/emojis/bust_in_silhouette.png",
	        /* css */"small",
	        /* title */"bust_in_silhouette"
	      ],
	      /* record */[
	        /* key */":busts_in_silhouette:",
	        /* src */"images/emoticons/emojis/busts_in_silhouette.png",
	        /* css */"small",
	        /* title */"busts_in_silhouette"
	      ],
	      /* record */[
	        /* key */":speech_balloon:",
	        /* src */"images/emoticons/emojis/speech_balloon.png",
	        /* css */"small",
	        /* title */"speech_balloon"
	      ],
	      /* record */[
	        /* key */":thought_balloon:",
	        /* src */"images/emoticons/emojis/thought_balloon.png",
	        /* css */"small",
	        /* title */"thought_balloon"
	      ],
	      /* record */[
	        /* key */":feelsgood:",
	        /* src */"images/emoticons/emojis/feelsgood.png",
	        /* css */"small",
	        /* title */"feelsgood"
	      ],
	      /* record */[
	        /* key */":finnadie:",
	        /* src */"images/emoticons/emojis/finnadie.png",
	        /* css */"small",
	        /* title */"finnadie"
	      ],
	      /* record */[
	        /* key */":goberserk:",
	        /* src */"images/emoticons/emojis/goberserk.png",
	        /* css */"small",
	        /* title */"goberserk"
	      ],
	      /* record */[
	        /* key */":godmode:",
	        /* src */"images/emoticons/emojis/godmode.png",
	        /* css */"small",
	        /* title */"godmode"
	      ],
	      /* record */[
	        /* key */":hurtrealbad:",
	        /* src */"images/emoticons/emojis/hurtrealbad.png",
	        /* css */"small",
	        /* title */"hurtrealbad"
	      ],
	      /* record */[
	        /* key */":rage1:",
	        /* src */"images/emoticons/emojis/rage1.png",
	        /* css */"small",
	        /* title */"rage1"
	      ],
	      /* record */[
	        /* key */":rage2:",
	        /* src */"images/emoticons/emojis/rage2.png",
	        /* css */"small",
	        /* title */"rage2"
	      ],
	      /* record */[
	        /* key */":rage3:",
	        /* src */"images/emoticons/emojis/rage3.png",
	        /* css */"small",
	        /* title */"rage3"
	      ],
	      /* record */[
	        /* key */":rage4:",
	        /* src */"images/emoticons/emojis/rage4.png",
	        /* css */"small",
	        /* title */"rage4"
	      ],
	      /* record */[
	        /* key */":suspect:",
	        /* src */"images/emoticons/emojis/suspect.png",
	        /* css */"small",
	        /* title */"suspect"
	      ],
	      /* record */[
	        /* key */":trollface:",
	        /* src */"images/emoticons/emojis/trollface.png",
	        /* css */"small",
	        /* title */"trollface"
	      ],
	      /* record */[
	        /* key */":sunny:",
	        /* src */"images/emoticons/emojis/sunny.png",
	        /* css */"small",
	        /* title */"sunny"
	      ],
	      /* record */[
	        /* key */":umbrella:",
	        /* src */"images/emoticons/emojis/umbrella.png",
	        /* css */"small",
	        /* title */"umbrella"
	      ],
	      /* record */[
	        /* key */":cloud:",
	        /* src */"images/emoticons/emojis/cloud.png",
	        /* css */"small",
	        /* title */"cloud"
	      ],
	      /* record */[
	        /* key */":snowflake:",
	        /* src */"images/emoticons/emojis/snowflake.png",
	        /* css */"small",
	        /* title */"snowflake"
	      ],
	      /* record */[
	        /* key */":snowman:",
	        /* src */"images/emoticons/emojis/snowman.png",
	        /* css */"small",
	        /* title */"snowman"
	      ],
	      /* record */[
	        /* key */":zap:",
	        /* src */"images/emoticons/emojis/zap.png",
	        /* css */"small",
	        /* title */"zap"
	      ],
	      /* record */[
	        /* key */":cyclone:",
	        /* src */"images/emoticons/emojis/cyclone.png",
	        /* css */"small",
	        /* title */"cyclone"
	      ],
	      /* record */[
	        /* key */":foggy:",
	        /* src */"images/emoticons/emojis/foggy.png",
	        /* css */"small",
	        /* title */"foggy"
	      ],
	      /* record */[
	        /* key */":ocean:",
	        /* src */"images/emoticons/emojis/ocean.png",
	        /* css */"small",
	        /* title */"ocean"
	      ],
	      /* record */[
	        /* key */":cat:",
	        /* src */"images/emoticons/emojis/cat.png",
	        /* css */"small",
	        /* title */"cat"
	      ],
	      /* record */[
	        /* key */":dog:",
	        /* src */"images/emoticons/emojis/dog.png",
	        /* css */"small",
	        /* title */"dog"
	      ],
	      /* record */[
	        /* key */":mouse:",
	        /* src */"images/emoticons/emojis/mouse.png",
	        /* css */"small",
	        /* title */"mouse"
	      ],
	      /* record */[
	        /* key */":hamster:",
	        /* src */"images/emoticons/emojis/hamster.png",
	        /* css */"small",
	        /* title */"hamster"
	      ],
	      /* record */[
	        /* key */":rabbit:",
	        /* src */"images/emoticons/emojis/rabbit.png",
	        /* css */"small",
	        /* title */"rabbit"
	      ],
	      /* record */[
	        /* key */":wolf:",
	        /* src */"images/emoticons/emojis/wolf.png",
	        /* css */"small",
	        /* title */"wolf"
	      ],
	      /* record */[
	        /* key */":frog:",
	        /* src */"images/emoticons/emojis/frog.png",
	        /* css */"small",
	        /* title */"frog"
	      ],
	      /* record */[
	        /* key */":tiger:",
	        /* src */"images/emoticons/emojis/tiger.png",
	        /* css */"small",
	        /* title */"tiger"
	      ],
	      /* record */[
	        /* key */":koala:",
	        /* src */"images/emoticons/emojis/koala.png",
	        /* css */"small",
	        /* title */"koala"
	      ],
	      /* record */[
	        /* key */":bear:",
	        /* src */"images/emoticons/emojis/bear.png",
	        /* css */"small",
	        /* title */"bear"
	      ],
	      /* record */[
	        /* key */":pig:",
	        /* src */"images/emoticons/emojis/pig.png",
	        /* css */"small",
	        /* title */"pig"
	      ],
	      /* record */[
	        /* key */":pig_nose:",
	        /* src */"images/emoticons/emojis/pig_nose.png",
	        /* css */"small",
	        /* title */"pig_nose"
	      ],
	      /* record */[
	        /* key */":cow:",
	        /* src */"images/emoticons/emojis/cow.png",
	        /* css */"small",
	        /* title */"cow"
	      ],
	      /* record */[
	        /* key */":boar:",
	        /* src */"images/emoticons/emojis/boar.png",
	        /* css */"small",
	        /* title */"boar"
	      ],
	      /* record */[
	        /* key */":monkey_face:",
	        /* src */"images/emoticons/emojis/monkey_face.png",
	        /* css */"small",
	        /* title */"monkey_face"
	      ],
	      /* record */[
	        /* key */":monkey:",
	        /* src */"images/emoticons/emojis/monkey.png",
	        /* css */"small",
	        /* title */"monkey"
	      ],
	      /* record */[
	        /* key */":horse:",
	        /* src */"images/emoticons/emojis/horse.png",
	        /* css */"small",
	        /* title */"horse"
	      ],
	      /* record */[
	        /* key */":racehorse:",
	        /* src */"images/emoticons/emojis/racehorse.png",
	        /* css */"small",
	        /* title */"racehorse"
	      ],
	      /* record */[
	        /* key */":camel:",
	        /* src */"images/emoticons/emojis/camel.png",
	        /* css */"small",
	        /* title */"camel"
	      ],
	      /* record */[
	        /* key */":sheep:",
	        /* src */"images/emoticons/emojis/sheep.png",
	        /* css */"small",
	        /* title */"sheep"
	      ],
	      /* record */[
	        /* key */":elephant:",
	        /* src */"images/emoticons/emojis/elephant.png",
	        /* css */"small",
	        /* title */"elephant"
	      ],
	      /* record */[
	        /* key */":panda_face:",
	        /* src */"images/emoticons/emojis/panda_face.png",
	        /* css */"small",
	        /* title */"panda_face"
	      ],
	      /* record */[
	        /* key */":snake:",
	        /* src */"images/emoticons/emojis/snake.png",
	        /* css */"small",
	        /* title */"snake"
	      ],
	      /* record */[
	        /* key */":bird:",
	        /* src */"images/emoticons/emojis/bird.png",
	        /* css */"small",
	        /* title */"bird"
	      ],
	      /* record */[
	        /* key */":baby_chick:",
	        /* src */"images/emoticons/emojis/baby_chick.png",
	        /* css */"small",
	        /* title */"baby_chick"
	      ],
	      /* record */[
	        /* key */":hatched_chick:",
	        /* src */"images/emoticons/emojis/hatched_chick.png",
	        /* css */"small",
	        /* title */"hatched_chick"
	      ],
	      /* record */[
	        /* key */":hatching_chick:",
	        /* src */"images/emoticons/emojis/hatching_chick.png",
	        /* css */"small",
	        /* title */"hatching_chick"
	      ],
	      /* record */[
	        /* key */":chicken:",
	        /* src */"images/emoticons/emojis/chicken.png",
	        /* css */"small",
	        /* title */"chicken"
	      ],
	      /* record */[
	        /* key */":penguin:",
	        /* src */"images/emoticons/emojis/penguin.png",
	        /* css */"small",
	        /* title */"penguin"
	      ],
	      /* record */[
	        /* key */":turtle:",
	        /* src */"images/emoticons/emojis/turtle.png",
	        /* css */"small",
	        /* title */"turtle"
	      ],
	      /* record */[
	        /* key */":bug:",
	        /* src */"images/emoticons/emojis/bug.png",
	        /* css */"small",
	        /* title */"bug"
	      ],
	      /* record */[
	        /* key */":honeybee:",
	        /* src */"images/emoticons/emojis/honeybee.png",
	        /* css */"small",
	        /* title */"honeybee"
	      ],
	      /* record */[
	        /* key */":ant:",
	        /* src */"images/emoticons/emojis/ant.png",
	        /* css */"small",
	        /* title */"ant"
	      ],
	      /* record */[
	        /* key */":beetle:",
	        /* src */"images/emoticons/emojis/beetle.png",
	        /* css */"small",
	        /* title */"beetle"
	      ],
	      /* record */[
	        /* key */":snail:",
	        /* src */"images/emoticons/emojis/snail.png",
	        /* css */"small",
	        /* title */"snail"
	      ],
	      /* record */[
	        /* key */":octopus:",
	        /* src */"images/emoticons/emojis/octopus.png",
	        /* css */"small",
	        /* title */"octopus"
	      ],
	      /* record */[
	        /* key */":tropical_fish:",
	        /* src */"images/emoticons/emojis/tropical_fish.png",
	        /* css */"small",
	        /* title */"tropical_fish"
	      ],
	      /* record */[
	        /* key */":fish:",
	        /* src */"images/emoticons/emojis/fish.png",
	        /* css */"small",
	        /* title */"fish"
	      ],
	      /* record */[
	        /* key */":whale:",
	        /* src */"images/emoticons/emojis/whale.png",
	        /* css */"small",
	        /* title */"whale"
	      ],
	      /* record */[
	        /* key */":whale2:",
	        /* src */"images/emoticons/emojis/whale2.png",
	        /* css */"small",
	        /* title */"whale2"
	      ],
	      /* record */[
	        /* key */":dolphin:",
	        /* src */"images/emoticons/emojis/dolphin.png",
	        /* css */"small",
	        /* title */"dolphin"
	      ],
	      /* record */[
	        /* key */":cow2:",
	        /* src */"images/emoticons/emojis/cow2.png",
	        /* css */"small",
	        /* title */"cow2"
	      ],
	      /* record */[
	        /* key */":ram:",
	        /* src */"images/emoticons/emojis/ram.png",
	        /* css */"small",
	        /* title */"ram"
	      ],
	      /* record */[
	        /* key */":rat:",
	        /* src */"images/emoticons/emojis/rat.png",
	        /* css */"small",
	        /* title */"rat"
	      ],
	      /* record */[
	        /* key */":water_buffalo:",
	        /* src */"images/emoticons/emojis/water_buffalo.png",
	        /* css */"small",
	        /* title */"water_buffalo"
	      ],
	      /* record */[
	        /* key */":tiger2:",
	        /* src */"images/emoticons/emojis/tiger2.png",
	        /* css */"small",
	        /* title */"tiger2"
	      ],
	      /* record */[
	        /* key */":rabbit2:",
	        /* src */"images/emoticons/emojis/rabbit2.png",
	        /* css */"small",
	        /* title */"rabbit2"
	      ],
	      /* record */[
	        /* key */":dragon:",
	        /* src */"images/emoticons/emojis/dragon.png",
	        /* css */"small",
	        /* title */"dragon"
	      ],
	      /* record */[
	        /* key */":goat:",
	        /* src */"images/emoticons/emojis/goat.png",
	        /* css */"small",
	        /* title */"goat"
	      ],
	      /* record */[
	        /* key */":rooster:",
	        /* src */"images/emoticons/emojis/rooster.png",
	        /* css */"small",
	        /* title */"rooster"
	      ],
	      /* record */[
	        /* key */":dog2:",
	        /* src */"images/emoticons/emojis/dog2.png",
	        /* css */"small",
	        /* title */"dog2"
	      ],
	      /* record */[
	        /* key */":pig2:",
	        /* src */"images/emoticons/emojis/pig2.png",
	        /* css */"small",
	        /* title */"pig2"
	      ],
	      /* record */[
	        /* key */":mouse2:",
	        /* src */"images/emoticons/emojis/mouse2.png",
	        /* css */"small",
	        /* title */"mouse2"
	      ],
	      /* record */[
	        /* key */":ox:",
	        /* src */"images/emoticons/emojis/ox.png",
	        /* css */"small",
	        /* title */"ox"
	      ],
	      /* record */[
	        /* key */":dragon_face:",
	        /* src */"images/emoticons/emojis/dragon_face.png",
	        /* css */"small",
	        /* title */"dragon_face"
	      ],
	      /* record */[
	        /* key */":blowfish:",
	        /* src */"images/emoticons/emojis/blowfish.png",
	        /* css */"small",
	        /* title */"blowfish"
	      ],
	      /* record */[
	        /* key */":crocodile:",
	        /* src */"images/emoticons/emojis/crocodile.png",
	        /* css */"small",
	        /* title */"crocodile"
	      ],
	      /* record */[
	        /* key */":dromedary_camel:",
	        /* src */"images/emoticons/emojis/dromedary_camel.png",
	        /* css */"small",
	        /* title */"dromedary_camel"
	      ],
	      /* record */[
	        /* key */":leopard:",
	        /* src */"images/emoticons/emojis/leopard.png",
	        /* css */"small",
	        /* title */"leopard"
	      ],
	      /* record */[
	        /* key */":cat2:",
	        /* src */"images/emoticons/emojis/cat2.png",
	        /* css */"small",
	        /* title */"cat2"
	      ],
	      /* record */[
	        /* key */":poodle:",
	        /* src */"images/emoticons/emojis/poodle.png",
	        /* css */"small",
	        /* title */"poodle"
	      ],
	      /* record */[
	        /* key */":paw_prints:",
	        /* src */"images/emoticons/emojis/paw_prints.png",
	        /* css */"small",
	        /* title */"paw_prints"
	      ],
	      /* record */[
	        /* key */":bouquet:",
	        /* src */"images/emoticons/emojis/bouquet.png",
	        /* css */"small",
	        /* title */"bouquet"
	      ],
	      /* record */[
	        /* key */":cherry_blossom:",
	        /* src */"images/emoticons/emojis/cherry_blossom.png",
	        /* css */"small",
	        /* title */"cherry_blossom"
	      ],
	      /* record */[
	        /* key */":tulip:",
	        /* src */"images/emoticons/emojis/tulip.png",
	        /* css */"small",
	        /* title */"tulip"
	      ],
	      /* record */[
	        /* key */":four_leaf_clover:",
	        /* src */"images/emoticons/emojis/four_leaf_clover.png",
	        /* css */"small",
	        /* title */"four_leaf_clover"
	      ],
	      /* record */[
	        /* key */":rose:",
	        /* src */"images/emoticons/emojis/rose.png",
	        /* css */"small",
	        /* title */"rose"
	      ],
	      /* record */[
	        /* key */":sunflower:",
	        /* src */"images/emoticons/emojis/sunflower.png",
	        /* css */"small",
	        /* title */"sunflower"
	      ],
	      /* record */[
	        /* key */":hibiscus:",
	        /* src */"images/emoticons/emojis/hibiscus.png",
	        /* css */"small",
	        /* title */"hibiscus"
	      ],
	      /* record */[
	        /* key */":maple_leaf:",
	        /* src */"images/emoticons/emojis/maple_leaf.png",
	        /* css */"small",
	        /* title */"maple_leaf"
	      ],
	      /* record */[
	        /* key */":leaves:",
	        /* src */"images/emoticons/emojis/leaves.png",
	        /* css */"small",
	        /* title */"leaves"
	      ],
	      /* record */[
	        /* key */":fallen_leaf:",
	        /* src */"images/emoticons/emojis/fallen_leaf.png",
	        /* css */"small",
	        /* title */"fallen_leaf"
	      ],
	      /* record */[
	        /* key */":herb:",
	        /* src */"images/emoticons/emojis/herb.png",
	        /* css */"small",
	        /* title */"herb"
	      ],
	      /* record */[
	        /* key */":mushroom:",
	        /* src */"images/emoticons/emojis/mushroom.png",
	        /* css */"small",
	        /* title */"mushroom"
	      ],
	      /* record */[
	        /* key */":cactus:",
	        /* src */"images/emoticons/emojis/cactus.png",
	        /* css */"small",
	        /* title */"cactus"
	      ],
	      /* record */[
	        /* key */":palm_tree:",
	        /* src */"images/emoticons/emojis/palm_tree.png",
	        /* css */"small",
	        /* title */"palm_tree"
	      ],
	      /* record */[
	        /* key */":evergreen_tree:",
	        /* src */"images/emoticons/emojis/evergreen_tree.png",
	        /* css */"small",
	        /* title */"evergreen_tree"
	      ],
	      /* record */[
	        /* key */":deciduous_tree:",
	        /* src */"images/emoticons/emojis/deciduous_tree.png",
	        /* css */"small",
	        /* title */"deciduous_tree"
	      ],
	      /* record */[
	        /* key */":chestnut:",
	        /* src */"images/emoticons/emojis/chestnut.png",
	        /* css */"small",
	        /* title */"chestnut"
	      ],
	      /* record */[
	        /* key */":seedling:",
	        /* src */"images/emoticons/emojis/seedling.png",
	        /* css */"small",
	        /* title */"seedling"
	      ],
	      /* record */[
	        /* key */":blossom:",
	        /* src */"images/emoticons/emojis/blossom.png",
	        /* css */"small",
	        /* title */"blossom"
	      ],
	      /* record */[
	        /* key */":ear_of_rice:",
	        /* src */"images/emoticons/emojis/ear_of_rice.png",
	        /* css */"small",
	        /* title */"ear_of_rice"
	      ],
	      /* record */[
	        /* key */":shell:",
	        /* src */"images/emoticons/emojis/shell.png",
	        /* css */"small",
	        /* title */"shell"
	      ],
	      /* record */[
	        /* key */":globe_with_meridians:",
	        /* src */"images/emoticons/emojis/globe_with_meridians.png",
	        /* css */"small",
	        /* title */"globe_with_meridians"
	      ],
	      /* record */[
	        /* key */":sun_with_face:",
	        /* src */"images/emoticons/emojis/sun_with_face.png",
	        /* css */"small",
	        /* title */"sun_with_face"
	      ],
	      /* record */[
	        /* key */":full_moon_with_face:",
	        /* src */"images/emoticons/emojis/full_moon_with_face.png",
	        /* css */"small",
	        /* title */"full_moon_with_face"
	      ],
	      /* record */[
	        /* key */":new_moon_with_face:",
	        /* src */"images/emoticons/emojis/new_moon_with_face.png",
	        /* css */"small",
	        /* title */"new_moon_with_face"
	      ],
	      /* record */[
	        /* key */":new_moon:",
	        /* src */"images/emoticons/emojis/new_moon.png",
	        /* css */"small",
	        /* title */"new_moon"
	      ],
	      /* record */[
	        /* key */":waxing_crescent_moon:",
	        /* src */"images/emoticons/emojis/waxing_crescent_moon.png",
	        /* css */"small",
	        /* title */"waxing_crescent_moon"
	      ],
	      /* record */[
	        /* key */":first_quarter_moon:",
	        /* src */"images/emoticons/emojis/first_quarter_moon.png",
	        /* css */"small",
	        /* title */"first_quarter_moon"
	      ],
	      /* record */[
	        /* key */":waxing_gibbous_moon:",
	        /* src */"images/emoticons/emojis/waxing_gibbous_moon.png",
	        /* css */"small",
	        /* title */"waxing_gibbous_moon"
	      ],
	      /* record */[
	        /* key */":full_moon:",
	        /* src */"images/emoticons/emojis/full_moon.png",
	        /* css */"small",
	        /* title */"full_moon"
	      ],
	      /* record */[
	        /* key */":waning_gibbous_moon:",
	        /* src */"images/emoticons/emojis/waning_gibbous_moon.png",
	        /* css */"small",
	        /* title */"waning_gibbous_moon"
	      ],
	      /* record */[
	        /* key */":last_quarter_moon:",
	        /* src */"images/emoticons/emojis/last_quarter_moon.png",
	        /* css */"small",
	        /* title */"last_quarter_moon"
	      ],
	      /* record */[
	        /* key */":waning_crescent_moon:",
	        /* src */"images/emoticons/emojis/waning_crescent_moon.png",
	        /* css */"small",
	        /* title */"waning_crescent_moon"
	      ],
	      /* record */[
	        /* key */":last_quarter_moon_with_face:",
	        /* src */"images/emoticons/emojis/last_quarter_moon_with_face.png",
	        /* css */"small",
	        /* title */"last_quarter_moon_with_face"
	      ],
	      /* record */[
	        /* key */":first_quarter_moon_with_face:",
	        /* src */"images/emoticons/emojis/first_quarter_moon_with_face.png",
	        /* css */"small",
	        /* title */"first_quarter_moon_with_face"
	      ],
	      /* record */[
	        /* key */":moon:",
	        /* src */"images/emoticons/emojis/moon.png",
	        /* css */"small",
	        /* title */"moon"
	      ],
	      /* record */[
	        /* key */":earth_africa:",
	        /* src */"images/emoticons/emojis/earth_africa.png",
	        /* css */"small",
	        /* title */"earth_africa"
	      ],
	      /* record */[
	        /* key */":earth_americas:",
	        /* src */"images/emoticons/emojis/earth_americas.png",
	        /* css */"small",
	        /* title */"earth_americas"
	      ],
	      /* record */[
	        /* key */":earth_asia:",
	        /* src */"images/emoticons/emojis/earth_asia.png",
	        /* css */"small",
	        /* title */"earth_asia"
	      ],
	      /* record */[
	        /* key */":volcano:",
	        /* src */"images/emoticons/emojis/volcano.png",
	        /* css */"small",
	        /* title */"volcano"
	      ],
	      /* record */[
	        /* key */":milky_way:",
	        /* src */"images/emoticons/emojis/milky_way.png",
	        /* css */"small",
	        /* title */"milky_way"
	      ],
	      /* record */[
	        /* key */":partly_sunny:",
	        /* src */"images/emoticons/emojis/partly_sunny.png",
	        /* css */"small",
	        /* title */"partly_sunny"
	      ],
	      /* record */[
	        /* key */":octocat:",
	        /* src */"images/emoticons/emojis/octocat.png",
	        /* css */"small",
	        /* title */"octocat"
	      ],
	      /* record */[
	        /* key */":squirrel:",
	        /* src */"images/emoticons/emojis/squirrel.png",
	        /* css */"small",
	        /* title */"squirrel"
	      ],
	      /* record */[
	        /* key */":bamboo:",
	        /* src */"images/emoticons/emojis/bamboo.png",
	        /* css */"small",
	        /* title */"bamboo"
	      ],
	      /* record */[
	        /* key */":gift_heart:",
	        /* src */"images/emoticons/emojis/gift_heart.png",
	        /* css */"small",
	        /* title */"gift_heart"
	      ],
	      /* record */[
	        /* key */":dolls:",
	        /* src */"images/emoticons/emojis/dolls.png",
	        /* css */"small",
	        /* title */"dolls"
	      ],
	      /* record */[
	        /* key */":school_satchel:",
	        /* src */"images/emoticons/emojis/school_satchel.png",
	        /* css */"small",
	        /* title */"school_satchel"
	      ],
	      /* record */[
	        /* key */":mortar_board:",
	        /* src */"images/emoticons/emojis/mortar_board.png",
	        /* css */"small",
	        /* title */"mortar_board"
	      ],
	      /* record */[
	        /* key */":flags:",
	        /* src */"images/emoticons/emojis/flags.png",
	        /* css */"small",
	        /* title */"flags"
	      ],
	      /* record */[
	        /* key */":fireworks:",
	        /* src */"images/emoticons/emojis/fireworks.png",
	        /* css */"small",
	        /* title */"fireworks"
	      ],
	      /* record */[
	        /* key */":sparkler:",
	        /* src */"images/emoticons/emojis/sparkler.png",
	        /* css */"small",
	        /* title */"sparkler"
	      ],
	      /* record */[
	        /* key */":wind_chime:",
	        /* src */"images/emoticons/emojis/wind_chime.png",
	        /* css */"small",
	        /* title */"wind_chime"
	      ],
	      /* record */[
	        /* key */":rice_scene:",
	        /* src */"images/emoticons/emojis/rice_scene.png",
	        /* css */"small",
	        /* title */"rice_scene"
	      ],
	      /* record */[
	        /* key */":jack_o_lantern:",
	        /* src */"images/emoticons/emojis/jack_o_lantern.png",
	        /* css */"small",
	        /* title */"jack_o_lantern"
	      ],
	      /* record */[
	        /* key */":ghost:",
	        /* src */"images/emoticons/emojis/ghost.png",
	        /* css */"small",
	        /* title */"ghost"
	      ],
	      /* record */[
	        /* key */":santa:",
	        /* src */"images/emoticons/emojis/santa.png",
	        /* css */"small",
	        /* title */"santa"
	      ],
	      /* record */[
	        /* key */":christmas_tree:",
	        /* src */"images/emoticons/emojis/christmas_tree.png",
	        /* css */"small",
	        /* title */"christmas_tree"
	      ],
	      /* record */[
	        /* key */":gift:",
	        /* src */"images/emoticons/emojis/gift.png",
	        /* css */"small",
	        /* title */"gift"
	      ],
	      /* record */[
	        /* key */":bell:",
	        /* src */"images/emoticons/emojis/bell.png",
	        /* css */"small",
	        /* title */"bell"
	      ],
	      /* record */[
	        /* key */":no_bell:",
	        /* src */"images/emoticons/emojis/no_bell.png",
	        /* css */"small",
	        /* title */"no_bell"
	      ],
	      /* record */[
	        /* key */":tanabata_tree:",
	        /* src */"images/emoticons/emojis/tanabata_tree.png",
	        /* css */"small",
	        /* title */"tanabata_tree"
	      ],
	      /* record */[
	        /* key */":tada:",
	        /* src */"images/emoticons/emojis/tada.png",
	        /* css */"small",
	        /* title */"tada"
	      ],
	      /* record */[
	        /* key */":confetti_ball:",
	        /* src */"images/emoticons/emojis/confetti_ball.png",
	        /* css */"small",
	        /* title */"confetti_ball"
	      ],
	      /* record */[
	        /* key */":balloon:",
	        /* src */"images/emoticons/emojis/balloon.png",
	        /* css */"small",
	        /* title */"balloon"
	      ],
	      /* record */[
	        /* key */":crystal_ball:",
	        /* src */"images/emoticons/emojis/crystal_ball.png",
	        /* css */"small",
	        /* title */"crystal_ball"
	      ],
	      /* record */[
	        /* key */":cd:",
	        /* src */"images/emoticons/emojis/cd.png",
	        /* css */"small",
	        /* title */"cd"
	      ],
	      /* record */[
	        /* key */":dvd:",
	        /* src */"images/emoticons/emojis/dvd.png",
	        /* css */"small",
	        /* title */"dvd"
	      ],
	      /* record */[
	        /* key */":floppy_disk:",
	        /* src */"images/emoticons/emojis/floppy_disk.png",
	        /* css */"small",
	        /* title */"floppy_disk"
	      ],
	      /* record */[
	        /* key */":camera:",
	        /* src */"images/emoticons/emojis/camera.png",
	        /* css */"small",
	        /* title */"camera"
	      ],
	      /* record */[
	        /* key */":video_camera:",
	        /* src */"images/emoticons/emojis/video_camera.png",
	        /* css */"small",
	        /* title */"video_camera"
	      ],
	      /* record */[
	        /* key */":movie_camera:",
	        /* src */"images/emoticons/emojis/movie_camera.png",
	        /* css */"small",
	        /* title */"movie_camera"
	      ],
	      /* record */[
	        /* key */":computer:",
	        /* src */"images/emoticons/emojis/computer.png",
	        /* css */"small",
	        /* title */"computer"
	      ],
	      /* record */[
	        /* key */":tv:",
	        /* src */"images/emoticons/emojis/tv.png",
	        /* css */"small",
	        /* title */"tv"
	      ],
	      /* record */[
	        /* key */":iphone:",
	        /* src */"images/emoticons/emojis/iphone.png",
	        /* css */"small",
	        /* title */"iphone"
	      ],
	      /* record */[
	        /* key */":phone:",
	        /* src */"images/emoticons/emojis/phone.png",
	        /* css */"small",
	        /* title */"phone"
	      ],
	      /* record */[
	        /* key */":telephone:",
	        /* src */"images/emoticons/emojis/telephone.png",
	        /* css */"small",
	        /* title */"telephone"
	      ],
	      /* record */[
	        /* key */":telephone_receiver:",
	        /* src */"images/emoticons/emojis/telephone_receiver.png",
	        /* css */"small",
	        /* title */"telephone_receiver"
	      ],
	      /* record */[
	        /* key */":pager:",
	        /* src */"images/emoticons/emojis/pager.png",
	        /* css */"small",
	        /* title */"pager"
	      ],
	      /* record */[
	        /* key */":fax:",
	        /* src */"images/emoticons/emojis/fax.png",
	        /* css */"small",
	        /* title */"fax"
	      ],
	      /* record */[
	        /* key */":minidisc:",
	        /* src */"images/emoticons/emojis/minidisc.png",
	        /* css */"small",
	        /* title */"minidisc"
	      ],
	      /* record */[
	        /* key */":vhs:",
	        /* src */"images/emoticons/emojis/vhs.png",
	        /* css */"small",
	        /* title */"vhs"
	      ],
	      /* record */[
	        /* key */":sound:",
	        /* src */"images/emoticons/emojis/sound.png",
	        /* css */"small",
	        /* title */"sound"
	      ],
	      /* record */[
	        /* key */":speaker:",
	        /* src */"images/emoticons/emojis/speaker.png",
	        /* css */"small",
	        /* title */"speaker"
	      ],
	      /* record */[
	        /* key */":mute:",
	        /* src */"images/emoticons/emojis/mute.png",
	        /* css */"small",
	        /* title */"mute"
	      ],
	      /* record */[
	        /* key */":loudspeaker:",
	        /* src */"images/emoticons/emojis/loudspeaker.png",
	        /* css */"small",
	        /* title */"loudspeaker"
	      ],
	      /* record */[
	        /* key */":mega:",
	        /* src */"images/emoticons/emojis/mega.png",
	        /* css */"small",
	        /* title */"mega"
	      ],
	      /* record */[
	        /* key */":hourglass:",
	        /* src */"images/emoticons/emojis/hourglass.png",
	        /* css */"small",
	        /* title */"hourglass"
	      ],
	      /* record */[
	        /* key */":hourglass_flowing_sand:",
	        /* src */"images/emoticons/emojis/hourglass_flowing_sand.png",
	        /* css */"small",
	        /* title */"hourglass_flowing_sand"
	      ],
	      /* record */[
	        /* key */":alarm_clock:",
	        /* src */"images/emoticons/emojis/alarm_clock.png",
	        /* css */"small",
	        /* title */"alarm_clock"
	      ],
	      /* record */[
	        /* key */":watch:",
	        /* src */"images/emoticons/emojis/watch.png",
	        /* css */"small",
	        /* title */"watch"
	      ],
	      /* record */[
	        /* key */":radio:",
	        /* src */"images/emoticons/emojis/radio.png",
	        /* css */"small",
	        /* title */"radio"
	      ],
	      /* record */[
	        /* key */":satellite:",
	        /* src */"images/emoticons/emojis/satellite.png",
	        /* css */"small",
	        /* title */"satellite"
	      ],
	      /* record */[
	        /* key */":loop:",
	        /* src */"images/emoticons/emojis/loop.png",
	        /* css */"small",
	        /* title */"loop"
	      ],
	      /* record */[
	        /* key */":mag:",
	        /* src */"images/emoticons/emojis/mag.png",
	        /* css */"small",
	        /* title */"mag"
	      ],
	      /* record */[
	        /* key */":mag_right:",
	        /* src */"images/emoticons/emojis/mag_right.png",
	        /* css */"small",
	        /* title */"mag_right"
	      ],
	      /* record */[
	        /* key */":unlock:",
	        /* src */"images/emoticons/emojis/unlock.png",
	        /* css */"small",
	        /* title */"unlock"
	      ],
	      /* record */[
	        /* key */":lock:",
	        /* src */"images/emoticons/emojis/lock.png",
	        /* css */"small",
	        /* title */"lock"
	      ],
	      /* record */[
	        /* key */":lock_with_ink_pen:",
	        /* src */"images/emoticons/emojis/lock_with_ink_pen.png",
	        /* css */"small",
	        /* title */"lock_with_ink_pen"
	      ],
	      /* record */[
	        /* key */":closed_lock_with_key:",
	        /* src */"images/emoticons/emojis/closed_lock_with_key.png",
	        /* css */"small",
	        /* title */"closed_lock_with_key"
	      ],
	      /* record */[
	        /* key */":key:",
	        /* src */"images/emoticons/emojis/key.png",
	        /* css */"small",
	        /* title */"key"
	      ],
	      /* record */[
	        /* key */":bulb:",
	        /* src */"images/emoticons/emojis/bulb.png",
	        /* css */"small",
	        /* title */"bulb"
	      ],
	      /* record */[
	        /* key */":flashlight:",
	        /* src */"images/emoticons/emojis/flashlight.png",
	        /* css */"small",
	        /* title */"flashlight"
	      ],
	      /* record */[
	        /* key */":high_brightness:",
	        /* src */"images/emoticons/emojis/high_brightness.png",
	        /* css */"small",
	        /* title */"high_brightness"
	      ],
	      /* record */[
	        /* key */":low_brightness:",
	        /* src */"images/emoticons/emojis/low_brightness.png",
	        /* css */"small",
	        /* title */"low_brightness"
	      ],
	      /* record */[
	        /* key */":electric_plug:",
	        /* src */"images/emoticons/emojis/electric_plug.png",
	        /* css */"small",
	        /* title */"electric_plug"
	      ],
	      /* record */[
	        /* key */":battery:",
	        /* src */"images/emoticons/emojis/battery.png",
	        /* css */"small",
	        /* title */"battery"
	      ],
	      /* record */[
	        /* key */":calling:",
	        /* src */"images/emoticons/emojis/calling.png",
	        /* css */"small",
	        /* title */"calling"
	      ],
	      /* record */[
	        /* key */":email:",
	        /* src */"images/emoticons/emojis/email.png",
	        /* css */"small",
	        /* title */"email"
	      ],
	      /* record */[
	        /* key */":mailbox:",
	        /* src */"images/emoticons/emojis/mailbox.png",
	        /* css */"small",
	        /* title */"mailbox"
	      ],
	      /* record */[
	        /* key */":postbox:",
	        /* src */"images/emoticons/emojis/postbox.png",
	        /* css */"small",
	        /* title */"postbox"
	      ],
	      /* record */[
	        /* key */":bath:",
	        /* src */"images/emoticons/emojis/bath.png",
	        /* css */"small",
	        /* title */"bath"
	      ],
	      /* record */[
	        /* key */":bathtub:",
	        /* src */"images/emoticons/emojis/bathtub.png",
	        /* css */"small",
	        /* title */"bathtub"
	      ],
	      /* record */[
	        /* key */":shower:",
	        /* src */"images/emoticons/emojis/shower.png",
	        /* css */"small",
	        /* title */"shower"
	      ],
	      /* record */[
	        /* key */":toilet:",
	        /* src */"images/emoticons/emojis/toilet.png",
	        /* css */"small",
	        /* title */"toilet"
	      ],
	      /* record */[
	        /* key */":wrench:",
	        /* src */"images/emoticons/emojis/wrench.png",
	        /* css */"small",
	        /* title */"wrench"
	      ],
	      /* record */[
	        /* key */":nut_and_bolt:",
	        /* src */"images/emoticons/emojis/nut_and_bolt.png",
	        /* css */"small",
	        /* title */"nut_and_bolt"
	      ],
	      /* record */[
	        /* key */":hammer:",
	        /* src */"images/emoticons/emojis/hammer.png",
	        /* css */"small",
	        /* title */"hammer"
	      ],
	      /* record */[
	        /* key */":seat:",
	        /* src */"images/emoticons/emojis/seat.png",
	        /* css */"small",
	        /* title */"seat"
	      ],
	      /* record */[
	        /* key */":moneybag:",
	        /* src */"images/emoticons/emojis/moneybag.png",
	        /* css */"small",
	        /* title */"moneybag"
	      ],
	      /* record */[
	        /* key */":yen:",
	        /* src */"images/emoticons/emojis/yen.png",
	        /* css */"small",
	        /* title */"yen"
	      ],
	      /* record */[
	        /* key */":dollar:",
	        /* src */"images/emoticons/emojis/dollar.png",
	        /* css */"small",
	        /* title */"dollar"
	      ],
	      /* record */[
	        /* key */":pound:",
	        /* src */"images/emoticons/emojis/pound.png",
	        /* css */"small",
	        /* title */"pound"
	      ],
	      /* record */[
	        /* key */":euro:",
	        /* src */"images/emoticons/emojis/euro.png",
	        /* css */"small",
	        /* title */"euro"
	      ],
	      /* record */[
	        /* key */":credit_card:",
	        /* src */"images/emoticons/emojis/credit_card.png",
	        /* css */"small",
	        /* title */"credit_card"
	      ],
	      /* record */[
	        /* key */":money_with_wings:",
	        /* src */"images/emoticons/emojis/money_with_wings.png",
	        /* css */"small",
	        /* title */"money_with_wings"
	      ],
	      /* record */[
	        /* key */":e-mail:",
	        /* src */"images/emoticons/emojis/e-mail.png",
	        /* css */"small",
	        /* title */"e-mail"
	      ],
	      /* record */[
	        /* key */":inbox_tray:",
	        /* src */"images/emoticons/emojis/inbox_tray.png",
	        /* css */"small",
	        /* title */"inbox_tray"
	      ],
	      /* record */[
	        /* key */":outbox_tray:",
	        /* src */"images/emoticons/emojis/outbox_tray.png",
	        /* css */"small",
	        /* title */"outbox_tray"
	      ],
	      /* record */[
	        /* key */":envelope:",
	        /* src */"images/emoticons/emojis/envelope.png",
	        /* css */"small",
	        /* title */"envelope"
	      ],
	      /* record */[
	        /* key */":incoming_envelope:",
	        /* src */"images/emoticons/emojis/incoming_envelope.png",
	        /* css */"small",
	        /* title */"incoming_envelope"
	      ],
	      /* record */[
	        /* key */":postal_horn:",
	        /* src */"images/emoticons/emojis/postal_horn.png",
	        /* css */"small",
	        /* title */"postal_horn"
	      ],
	      /* record */[
	        /* key */":mailbox_closed:",
	        /* src */"images/emoticons/emojis/mailbox_closed.png",
	        /* css */"small",
	        /* title */"mailbox_closed"
	      ],
	      /* record */[
	        /* key */":mailbox_with_mail:",
	        /* src */"images/emoticons/emojis/mailbox_with_mail.png",
	        /* css */"small",
	        /* title */"mailbox_with_mail"
	      ],
	      /* record */[
	        /* key */":mailbox_with_no_mail:",
	        /* src */"images/emoticons/emojis/mailbox_with_no_mail.png",
	        /* css */"small",
	        /* title */"mailbox_with_no_mail"
	      ],
	      /* record */[
	        /* key */":door:",
	        /* src */"images/emoticons/emojis/door.png",
	        /* css */"small",
	        /* title */"door"
	      ],
	      /* record */[
	        /* key */":smoking:",
	        /* src */"images/emoticons/emojis/smoking.png",
	        /* css */"small",
	        /* title */"smoking"
	      ],
	      /* record */[
	        /* key */":bomb:",
	        /* src */"images/emoticons/emojis/bomb.png",
	        /* css */"small",
	        /* title */"bomb"
	      ],
	      /* record */[
	        /* key */":gun:",
	        /* src */"images/emoticons/emojis/gun.png",
	        /* css */"small",
	        /* title */"gun"
	      ],
	      /* record */[
	        /* key */":hocho:",
	        /* src */"images/emoticons/emojis/hocho.png",
	        /* css */"small",
	        /* title */"hocho"
	      ],
	      /* record */[
	        /* key */":pill:",
	        /* src */"images/emoticons/emojis/pill.png",
	        /* css */"small",
	        /* title */"pill"
	      ],
	      /* record */[
	        /* key */":syringe:",
	        /* src */"images/emoticons/emojis/syringe.png",
	        /* css */"small",
	        /* title */"syringe"
	      ],
	      /* record */[
	        /* key */":page_facing_up:",
	        /* src */"images/emoticons/emojis/page_facing_up.png",
	        /* css */"small",
	        /* title */"page_facing_up"
	      ],
	      /* record */[
	        /* key */":page_with_curl:",
	        /* src */"images/emoticons/emojis/page_with_curl.png",
	        /* css */"small",
	        /* title */"page_with_curl"
	      ],
	      /* record */[
	        /* key */":bookmark_tabs:",
	        /* src */"images/emoticons/emojis/bookmark_tabs.png",
	        /* css */"small",
	        /* title */"bookmark_tabs"
	      ],
	      /* record */[
	        /* key */":bar_chart:",
	        /* src */"images/emoticons/emojis/bar_chart.png",
	        /* css */"small",
	        /* title */"bar_chart"
	      ],
	      /* record */[
	        /* key */":chart_with_upwards_trend:",
	        /* src */"images/emoticons/emojis/chart_with_upwards_trend.png",
	        /* css */"small",
	        /* title */"chart_with_upwards_trend"
	      ],
	      /* record */[
	        /* key */":chart_with_downwards_trend:",
	        /* src */"images/emoticons/emojis/chart_with_downwards_trend.png",
	        /* css */"small",
	        /* title */"chart_with_downwards_trend"
	      ],
	      /* record */[
	        /* key */":scroll:",
	        /* src */"images/emoticons/emojis/scroll.png",
	        /* css */"small",
	        /* title */"scroll"
	      ],
	      /* record */[
	        /* key */":clipboard:",
	        /* src */"images/emoticons/emojis/clipboard.png",
	        /* css */"small",
	        /* title */"clipboard"
	      ],
	      /* record */[
	        /* key */":calendar:",
	        /* src */"images/emoticons/emojis/calendar.png",
	        /* css */"small",
	        /* title */"calendar"
	      ],
	      /* record */[
	        /* key */":date:",
	        /* src */"images/emoticons/emojis/date.png",
	        /* css */"small",
	        /* title */"date"
	      ],
	      /* record */[
	        /* key */":card_index:",
	        /* src */"images/emoticons/emojis/card_index.png",
	        /* css */"small",
	        /* title */"card_index"
	      ],
	      /* record */[
	        /* key */":file_folder:",
	        /* src */"images/emoticons/emojis/file_folder.png",
	        /* css */"small",
	        /* title */"file_folder"
	      ],
	      /* record */[
	        /* key */":open_file_folder:",
	        /* src */"images/emoticons/emojis/open_file_folder.png",
	        /* css */"small",
	        /* title */"open_file_folder"
	      ],
	      /* record */[
	        /* key */":scissors:",
	        /* src */"images/emoticons/emojis/scissors.png",
	        /* css */"small",
	        /* title */"scissors"
	      ],
	      /* record */[
	        /* key */":pushpin:",
	        /* src */"images/emoticons/emojis/pushpin.png",
	        /* css */"small",
	        /* title */"pushpin"
	      ],
	      /* record */[
	        /* key */":paperclip:",
	        /* src */"images/emoticons/emojis/paperclip.png",
	        /* css */"small",
	        /* title */"paperclip"
	      ],
	      /* record */[
	        /* key */":black_nib:",
	        /* src */"images/emoticons/emojis/black_nib.png",
	        /* css */"small",
	        /* title */"black_nib"
	      ],
	      /* record */[
	        /* key */":pencil2:",
	        /* src */"images/emoticons/emojis/pencil2.png",
	        /* css */"small",
	        /* title */"pencil2"
	      ],
	      /* record */[
	        /* key */":straight_ruler:",
	        /* src */"images/emoticons/emojis/straight_ruler.png",
	        /* css */"small",
	        /* title */"straight_ruler"
	      ],
	      /* record */[
	        /* key */":triangular_ruler:",
	        /* src */"images/emoticons/emojis/triangular_ruler.png",
	        /* css */"small",
	        /* title */"triangular_ruler"
	      ],
	      /* record */[
	        /* key */":closed_book:",
	        /* src */"images/emoticons/emojis/closed_book.png",
	        /* css */"small",
	        /* title */"closed_book"
	      ],
	      /* record */[
	        /* key */":green_book:",
	        /* src */"images/emoticons/emojis/green_book.png",
	        /* css */"small",
	        /* title */"green_book"
	      ],
	      /* record */[
	        /* key */":blue_book:",
	        /* src */"images/emoticons/emojis/blue_book.png",
	        /* css */"small",
	        /* title */"blue_book"
	      ],
	      /* record */[
	        /* key */":orange_book:",
	        /* src */"images/emoticons/emojis/orange_book.png",
	        /* css */"small",
	        /* title */"orange_book"
	      ],
	      /* record */[
	        /* key */":notebook:",
	        /* src */"images/emoticons/emojis/notebook.png",
	        /* css */"small",
	        /* title */"notebook"
	      ],
	      /* record */[
	        /* key */":notebook_with_decorative_cover:",
	        /* src */"images/emoticons/emojis/notebook_with_decorative_cover.png",
	        /* css */"small",
	        /* title */"notebook_with_decorative_cover"
	      ],
	      /* record */[
	        /* key */":ledger:",
	        /* src */"images/emoticons/emojis/ledger.png",
	        /* css */"small",
	        /* title */"ledger"
	      ],
	      /* record */[
	        /* key */":books:",
	        /* src */"images/emoticons/emojis/books.png",
	        /* css */"small",
	        /* title */"books"
	      ],
	      /* record */[
	        /* key */":bookmark:",
	        /* src */"images/emoticons/emojis/bookmark.png",
	        /* css */"small",
	        /* title */"bookmark"
	      ],
	      /* record */[
	        /* key */":name_badge:",
	        /* src */"images/emoticons/emojis/name_badge.png",
	        /* css */"small",
	        /* title */"name_badge"
	      ],
	      /* record */[
	        /* key */":microscope:",
	        /* src */"images/emoticons/emojis/microscope.png",
	        /* css */"small",
	        /* title */"microscope"
	      ],
	      /* record */[
	        /* key */":telescope:",
	        /* src */"images/emoticons/emojis/telescope.png",
	        /* css */"small",
	        /* title */"telescope"
	      ],
	      /* record */[
	        /* key */":newspaper:",
	        /* src */"images/emoticons/emojis/newspaper.png",
	        /* css */"small",
	        /* title */"newspaper"
	      ],
	      /* record */[
	        /* key */":football:",
	        /* src */"images/emoticons/emojis/football.png",
	        /* css */"small",
	        /* title */"football"
	      ],
	      /* record */[
	        /* key */":basketball:",
	        /* src */"images/emoticons/emojis/basketball.png",
	        /* css */"small",
	        /* title */"basketball"
	      ],
	      /* record */[
	        /* key */":soccer:",
	        /* src */"images/emoticons/emojis/soccer.png",
	        /* css */"small",
	        /* title */"soccer"
	      ],
	      /* record */[
	        /* key */":baseball:",
	        /* src */"images/emoticons/emojis/baseball.png",
	        /* css */"small",
	        /* title */"baseball"
	      ],
	      /* record */[
	        /* key */":tennis:",
	        /* src */"images/emoticons/emojis/tennis.png",
	        /* css */"small",
	        /* title */"tennis"
	      ],
	      /* record */[
	        /* key */":8ball:",
	        /* src */"images/emoticons/emojis/8ball.png",
	        /* css */"small",
	        /* title */"8ball"
	      ],
	      /* record */[
	        /* key */":rugby_football:",
	        /* src */"images/emoticons/emojis/rugby_football.png",
	        /* css */"small",
	        /* title */"rugby_football"
	      ],
	      /* record */[
	        /* key */":bowling:",
	        /* src */"images/emoticons/emojis/bowling.png",
	        /* css */"small",
	        /* title */"bowling"
	      ],
	      /* record */[
	        /* key */":golf:",
	        /* src */"images/emoticons/emojis/golf.png",
	        /* css */"small",
	        /* title */"golf"
	      ],
	      /* record */[
	        /* key */":mountain_bicyclist:",
	        /* src */"images/emoticons/emojis/mountain_bicyclist.png",
	        /* css */"small",
	        /* title */"mountain_bicyclist"
	      ],
	      /* record */[
	        /* key */":bicyclist:",
	        /* src */"images/emoticons/emojis/bicyclist.png",
	        /* css */"small",
	        /* title */"bicyclist"
	      ],
	      /* record */[
	        /* key */":horse_racing:",
	        /* src */"images/emoticons/emojis/horse_racing.png",
	        /* css */"small",
	        /* title */"horse_racing"
	      ],
	      /* record */[
	        /* key */":snowboarder:",
	        /* src */"images/emoticons/emojis/snowboarder.png",
	        /* css */"small",
	        /* title */"snowboarder"
	      ],
	      /* record */[
	        /* key */":swimmer:",
	        /* src */"images/emoticons/emojis/swimmer.png",
	        /* css */"small",
	        /* title */"swimmer"
	      ],
	      /* record */[
	        /* key */":surfer:",
	        /* src */"images/emoticons/emojis/surfer.png",
	        /* css */"small",
	        /* title */"surfer"
	      ],
	      /* record */[
	        /* key */":ski:",
	        /* src */"images/emoticons/emojis/ski.png",
	        /* css */"small",
	        /* title */"ski"
	      ],
	      /* record */[
	        /* key */":spades:",
	        /* src */"images/emoticons/emojis/spades.png",
	        /* css */"small",
	        /* title */"spades"
	      ],
	      /* record */[
	        /* key */":hearts:",
	        /* src */"images/emoticons/emojis/hearts.png",
	        /* css */"small",
	        /* title */"hearts"
	      ],
	      /* record */[
	        /* key */":clubs:",
	        /* src */"images/emoticons/emojis/clubs.png",
	        /* css */"small",
	        /* title */"clubs"
	      ],
	      /* record */[
	        /* key */":diamonds:",
	        /* src */"images/emoticons/emojis/diamonds.png",
	        /* css */"small",
	        /* title */"diamonds"
	      ],
	      /* record */[
	        /* key */":gem:",
	        /* src */"images/emoticons/emojis/gem.png",
	        /* css */"small",
	        /* title */"gem"
	      ],
	      /* record */[
	        /* key */":ring:",
	        /* src */"images/emoticons/emojis/ring.png",
	        /* css */"small",
	        /* title */"ring"
	      ],
	      /* record */[
	        /* key */":trophy:",
	        /* src */"images/emoticons/emojis/trophy.png",
	        /* css */"small",
	        /* title */"trophy"
	      ],
	      /* record */[
	        /* key */":musical_score:",
	        /* src */"images/emoticons/emojis/musical_score.png",
	        /* css */"small",
	        /* title */"musical_score"
	      ],
	      /* record */[
	        /* key */":musical_keyboard:",
	        /* src */"images/emoticons/emojis/musical_keyboard.png",
	        /* css */"small",
	        /* title */"musical_keyboard"
	      ],
	      /* record */[
	        /* key */":violin:",
	        /* src */"images/emoticons/emojis/violin.png",
	        /* css */"small",
	        /* title */"violin"
	      ],
	      /* record */[
	        /* key */":space_invader:",
	        /* src */"images/emoticons/emojis/space_invader.png",
	        /* css */"small",
	        /* title */"space_invader"
	      ],
	      /* record */[
	        /* key */":video_game:",
	        /* src */"images/emoticons/emojis/video_game.png",
	        /* css */"small",
	        /* title */"video_game"
	      ],
	      /* record */[
	        /* key */":black_joker:",
	        /* src */"images/emoticons/emojis/black_joker.png",
	        /* css */"small",
	        /* title */"black_joker"
	      ],
	      /* record */[
	        /* key */":flower_playing_cards:",
	        /* src */"images/emoticons/emojis/flower_playing_cards.png",
	        /* css */"small",
	        /* title */"flower_playing_cards"
	      ],
	      /* record */[
	        /* key */":game_die:",
	        /* src */"images/emoticons/emojis/game_die.png",
	        /* css */"small",
	        /* title */"game_die"
	      ],
	      /* record */[
	        /* key */":dart:",
	        /* src */"images/emoticons/emojis/dart.png",
	        /* css */"small",
	        /* title */"dart"
	      ],
	      /* record */[
	        /* key */":mahjong:",
	        /* src */"images/emoticons/emojis/mahjong.png",
	        /* css */"small",
	        /* title */"mahjong"
	      ],
	      /* record */[
	        /* key */":clapper:",
	        /* src */"images/emoticons/emojis/clapper.png",
	        /* css */"small",
	        /* title */"clapper"
	      ],
	      /* record */[
	        /* key */":memo:",
	        /* src */"images/emoticons/emojis/memo.png",
	        /* css */"small",
	        /* title */"memo"
	      ],
	      /* record */[
	        /* key */":pencil:",
	        /* src */"images/emoticons/emojis/pencil.png",
	        /* css */"small",
	        /* title */"pencil"
	      ],
	      /* record */[
	        /* key */":book:",
	        /* src */"images/emoticons/emojis/book.png",
	        /* css */"small",
	        /* title */"book"
	      ],
	      /* record */[
	        /* key */":art:",
	        /* src */"images/emoticons/emojis/art.png",
	        /* css */"small",
	        /* title */"art"
	      ],
	      /* record */[
	        /* key */":microphone:",
	        /* src */"images/emoticons/emojis/microphone.png",
	        /* css */"small",
	        /* title */"microphone"
	      ],
	      /* record */[
	        /* key */":headphones:",
	        /* src */"images/emoticons/emojis/headphones.png",
	        /* css */"small",
	        /* title */"headphones"
	      ],
	      /* record */[
	        /* key */":trumpet:",
	        /* src */"images/emoticons/emojis/trumpet.png",
	        /* css */"small",
	        /* title */"trumpet"
	      ],
	      /* record */[
	        /* key */":saxophone:",
	        /* src */"images/emoticons/emojis/saxophone.png",
	        /* css */"small",
	        /* title */"saxophone"
	      ],
	      /* record */[
	        /* key */":guitar:",
	        /* src */"images/emoticons/emojis/guitar.png",
	        /* css */"small",
	        /* title */"guitar"
	      ],
	      /* record */[
	        /* key */":shoe:",
	        /* src */"images/emoticons/emojis/shoe.png",
	        /* css */"small",
	        /* title */"shoe"
	      ],
	      /* record */[
	        /* key */":sandal:",
	        /* src */"images/emoticons/emojis/sandal.png",
	        /* css */"small",
	        /* title */"sandal"
	      ],
	      /* record */[
	        /* key */":high_heel:",
	        /* src */"images/emoticons/emojis/high_heel.png",
	        /* css */"small",
	        /* title */"high_heel"
	      ],
	      /* record */[
	        /* key */":lipstick:",
	        /* src */"images/emoticons/emojis/lipstick.png",
	        /* css */"small",
	        /* title */"lipstick"
	      ],
	      /* record */[
	        /* key */":boot:",
	        /* src */"images/emoticons/emojis/boot.png",
	        /* css */"small",
	        /* title */"boot"
	      ],
	      /* record */[
	        /* key */":shirt:",
	        /* src */"images/emoticons/emojis/shirt.png",
	        /* css */"small",
	        /* title */"shirt"
	      ],
	      /* record */[
	        /* key */":tshirt:",
	        /* src */"images/emoticons/emojis/tshirt.png",
	        /* css */"small",
	        /* title */"tshirt"
	      ],
	      /* record */[
	        /* key */":necktie:",
	        /* src */"images/emoticons/emojis/necktie.png",
	        /* css */"small",
	        /* title */"necktie"
	      ],
	      /* record */[
	        /* key */":womans_clothes:",
	        /* src */"images/emoticons/emojis/womans_clothes.png",
	        /* css */"small",
	        /* title */"womans_clothes"
	      ],
	      /* record */[
	        /* key */":dress:",
	        /* src */"images/emoticons/emojis/dress.png",
	        /* css */"small",
	        /* title */"dress"
	      ],
	      /* record */[
	        /* key */":running_shirt_with_sash:",
	        /* src */"images/emoticons/emojis/running_shirt_with_sash.png",
	        /* css */"small",
	        /* title */"running_shirt_with_sash"
	      ],
	      /* record */[
	        /* key */":jeans:",
	        /* src */"images/emoticons/emojis/jeans.png",
	        /* css */"small",
	        /* title */"jeans"
	      ],
	      /* record */[
	        /* key */":kimono:",
	        /* src */"images/emoticons/emojis/kimono.png",
	        /* css */"small",
	        /* title */"kimono"
	      ],
	      /* record */[
	        /* key */":bikini:",
	        /* src */"images/emoticons/emojis/bikini.png",
	        /* css */"small",
	        /* title */"bikini"
	      ],
	      /* record */[
	        /* key */":ribbon:",
	        /* src */"images/emoticons/emojis/ribbon.png",
	        /* css */"small",
	        /* title */"ribbon"
	      ],
	      /* record */[
	        /* key */":tophat:",
	        /* src */"images/emoticons/emojis/tophat.png",
	        /* css */"small",
	        /* title */"tophat"
	      ],
	      /* record */[
	        /* key */":crown:",
	        /* src */"images/emoticons/emojis/crown.png",
	        /* css */"small",
	        /* title */"crown"
	      ],
	      /* record */[
	        /* key */":womans_hat:",
	        /* src */"images/emoticons/emojis/womans_hat.png",
	        /* css */"small",
	        /* title */"womans_hat"
	      ],
	      /* record */[
	        /* key */":mans_shoe:",
	        /* src */"images/emoticons/emojis/mans_shoe.png",
	        /* css */"small",
	        /* title */"mans_shoe"
	      ],
	      /* record */[
	        /* key */":closed_umbrella:",
	        /* src */"images/emoticons/emojis/closed_umbrella.png",
	        /* css */"small",
	        /* title */"closed_umbrella"
	      ],
	      /* record */[
	        /* key */":briefcase:",
	        /* src */"images/emoticons/emojis/briefcase.png",
	        /* css */"small",
	        /* title */"briefcase"
	      ],
	      /* record */[
	        /* key */":handbag:",
	        /* src */"images/emoticons/emojis/handbag.png",
	        /* css */"small",
	        /* title */"handbag"
	      ],
	      /* record */[
	        /* key */":pouch:",
	        /* src */"images/emoticons/emojis/pouch.png",
	        /* css */"small",
	        /* title */"pouch"
	      ],
	      /* record */[
	        /* key */":purse:",
	        /* src */"images/emoticons/emojis/purse.png",
	        /* css */"small",
	        /* title */"purse"
	      ],
	      /* record */[
	        /* key */":eyeglasses:",
	        /* src */"images/emoticons/emojis/eyeglasses.png",
	        /* css */"small",
	        /* title */"eyeglasses"
	      ],
	      /* record */[
	        /* key */":fishing_pole_and_fish:",
	        /* src */"images/emoticons/emojis/fishing_pole_and_fish.png",
	        /* css */"small",
	        /* title */"fishing_pole_and_fish"
	      ],
	      /* record */[
	        /* key */":coffee:",
	        /* src */"images/emoticons/emojis/coffee.png",
	        /* css */"small",
	        /* title */"coffee"
	      ],
	      /* record */[
	        /* key */":tea:",
	        /* src */"images/emoticons/emojis/tea.png",
	        /* css */"small",
	        /* title */"tea"
	      ],
	      /* record */[
	        /* key */":sake:",
	        /* src */"images/emoticons/emojis/sake.png",
	        /* css */"small",
	        /* title */"sake"
	      ],
	      /* record */[
	        /* key */":baby_bottle:",
	        /* src */"images/emoticons/emojis/baby_bottle.png",
	        /* css */"small",
	        /* title */"baby_bottle"
	      ],
	      /* record */[
	        /* key */":beer:",
	        /* src */"images/emoticons/emojis/beer.png",
	        /* css */"small",
	        /* title */"beer"
	      ],
	      /* record */[
	        /* key */":beers:",
	        /* src */"images/emoticons/emojis/beers.png",
	        /* css */"small",
	        /* title */"beers"
	      ],
	      /* record */[
	        /* key */":cocktail:",
	        /* src */"images/emoticons/emojis/cocktail.png",
	        /* css */"small",
	        /* title */"cocktail"
	      ],
	      /* record */[
	        /* key */":tropical_drink:",
	        /* src */"images/emoticons/emojis/tropical_drink.png",
	        /* css */"small",
	        /* title */"tropical_drink"
	      ],
	      /* record */[
	        /* key */":wine_glass:",
	        /* src */"images/emoticons/emojis/wine_glass.png",
	        /* css */"small",
	        /* title */"wine_glass"
	      ],
	      /* record */[
	        /* key */":fork_and_knife:",
	        /* src */"images/emoticons/emojis/fork_and_knife.png",
	        /* css */"small",
	        /* title */"fork_and_knife"
	      ],
	      /* record */[
	        /* key */":pizza:",
	        /* src */"images/emoticons/emojis/pizza.png",
	        /* css */"small",
	        /* title */"pizza"
	      ],
	      /* record */[
	        /* key */":hamburger:",
	        /* src */"images/emoticons/emojis/hamburger.png",
	        /* css */"small",
	        /* title */"hamburger"
	      ],
	      /* record */[
	        /* key */":fries:",
	        /* src */"images/emoticons/emojis/fries.png",
	        /* css */"small",
	        /* title */"fries"
	      ],
	      /* record */[
	        /* key */":poultry_leg:",
	        /* src */"images/emoticons/emojis/poultry_leg.png",
	        /* css */"small",
	        /* title */"poultry_leg"
	      ],
	      /* record */[
	        /* key */":meat_on_bone:",
	        /* src */"images/emoticons/emojis/meat_on_bone.png",
	        /* css */"small",
	        /* title */"meat_on_bone"
	      ],
	      /* record */[
	        /* key */":spaghetti:",
	        /* src */"images/emoticons/emojis/spaghetti.png",
	        /* css */"small",
	        /* title */"spaghetti"
	      ],
	      /* record */[
	        /* key */":curry:",
	        /* src */"images/emoticons/emojis/curry.png",
	        /* css */"small",
	        /* title */"curry"
	      ],
	      /* record */[
	        /* key */":fried_shrimp:",
	        /* src */"images/emoticons/emojis/fried_shrimp.png",
	        /* css */"small",
	        /* title */"fried_shrimp"
	      ],
	      /* record */[
	        /* key */":bento:",
	        /* src */"images/emoticons/emojis/bento.png",
	        /* css */"small",
	        /* title */"bento"
	      ],
	      /* record */[
	        /* key */":sushi:",
	        /* src */"images/emoticons/emojis/sushi.png",
	        /* css */"small",
	        /* title */"sushi"
	      ],
	      /* record */[
	        /* key */":fish_cake:",
	        /* src */"images/emoticons/emojis/fish_cake.png",
	        /* css */"small",
	        /* title */"fish_cake"
	      ],
	      /* record */[
	        /* key */":rice_ball:",
	        /* src */"images/emoticons/emojis/rice_ball.png",
	        /* css */"small",
	        /* title */"rice_ball"
	      ],
	      /* record */[
	        /* key */":rice_cracker:",
	        /* src */"images/emoticons/emojis/rice_cracker.png",
	        /* css */"small",
	        /* title */"rice_cracker"
	      ],
	      /* record */[
	        /* key */":rice:",
	        /* src */"images/emoticons/emojis/rice.png",
	        /* css */"small",
	        /* title */"rice"
	      ],
	      /* record */[
	        /* key */":ramen:",
	        /* src */"images/emoticons/emojis/ramen.png",
	        /* css */"small",
	        /* title */"ramen"
	      ],
	      /* record */[
	        /* key */":stew:",
	        /* src */"images/emoticons/emojis/stew.png",
	        /* css */"small",
	        /* title */"stew"
	      ],
	      /* record */[
	        /* key */":oden:",
	        /* src */"images/emoticons/emojis/oden.png",
	        /* css */"small",
	        /* title */"oden"
	      ],
	      /* record */[
	        /* key */":dango:",
	        /* src */"images/emoticons/emojis/dango.png",
	        /* css */"small",
	        /* title */"dango"
	      ],
	      /* record */[
	        /* key */":egg:",
	        /* src */"images/emoticons/emojis/egg.png",
	        /* css */"small",
	        /* title */"egg"
	      ],
	      /* record */[
	        /* key */":bread:",
	        /* src */"images/emoticons/emojis/bread.png",
	        /* css */"small",
	        /* title */"bread"
	      ],
	      /* record */[
	        /* key */":doughnut:",
	        /* src */"images/emoticons/emojis/doughnut.png",
	        /* css */"small",
	        /* title */"doughnut"
	      ],
	      /* record */[
	        /* key */":custard:",
	        /* src */"images/emoticons/emojis/custard.png",
	        /* css */"small",
	        /* title */"custard"
	      ],
	      /* record */[
	        /* key */":icecream:",
	        /* src */"images/emoticons/emojis/icecream.png",
	        /* css */"small",
	        /* title */"icecream"
	      ],
	      /* record */[
	        /* key */":ice_cream:",
	        /* src */"images/emoticons/emojis/ice_cream.png",
	        /* css */"small",
	        /* title */"ice_cream"
	      ],
	      /* record */[
	        /* key */":shaved_ice:",
	        /* src */"images/emoticons/emojis/shaved_ice.png",
	        /* css */"small",
	        /* title */"shaved_ice"
	      ],
	      /* record */[
	        /* key */":birthday:",
	        /* src */"images/emoticons/emojis/birthday.png",
	        /* css */"small",
	        /* title */"birthday"
	      ],
	      /* record */[
	        /* key */":cake:",
	        /* src */"images/emoticons/emojis/cake.png",
	        /* css */"small",
	        /* title */"cake"
	      ],
	      /* record */[
	        /* key */":cookie:",
	        /* src */"images/emoticons/emojis/cookie.png",
	        /* css */"small",
	        /* title */"cookie"
	      ],
	      /* record */[
	        /* key */":chocolate_bar:",
	        /* src */"images/emoticons/emojis/chocolate_bar.png",
	        /* css */"small",
	        /* title */"chocolate_bar"
	      ],
	      /* record */[
	        /* key */":candy:",
	        /* src */"images/emoticons/emojis/candy.png",
	        /* css */"small",
	        /* title */"candy"
	      ],
	      /* record */[
	        /* key */":lollipop:",
	        /* src */"images/emoticons/emojis/lollipop.png",
	        /* css */"small",
	        /* title */"lollipop"
	      ],
	      /* record */[
	        /* key */":honey_pot:",
	        /* src */"images/emoticons/emojis/honey_pot.png",
	        /* css */"small",
	        /* title */"honey_pot"
	      ],
	      /* record */[
	        /* key */":apple:",
	        /* src */"images/emoticons/emojis/apple.png",
	        /* css */"small",
	        /* title */"apple"
	      ],
	      /* record */[
	        /* key */":green_apple:",
	        /* src */"images/emoticons/emojis/green_apple.png",
	        /* css */"small",
	        /* title */"green_apple"
	      ],
	      /* record */[
	        /* key */":tangerine:",
	        /* src */"images/emoticons/emojis/tangerine.png",
	        /* css */"small",
	        /* title */"tangerine"
	      ],
	      /* record */[
	        /* key */":lemon:",
	        /* src */"images/emoticons/emojis/lemon.png",
	        /* css */"small",
	        /* title */"lemon"
	      ],
	      /* record */[
	        /* key */":cherries:",
	        /* src */"images/emoticons/emojis/cherries.png",
	        /* css */"small",
	        /* title */"cherries"
	      ],
	      /* record */[
	        /* key */":grapes:",
	        /* src */"images/emoticons/emojis/grapes.png",
	        /* css */"small",
	        /* title */"grapes"
	      ],
	      /* record */[
	        /* key */":watermelon:",
	        /* src */"images/emoticons/emojis/watermelon.png",
	        /* css */"small",
	        /* title */"watermelon"
	      ],
	      /* record */[
	        /* key */":strawberry:",
	        /* src */"images/emoticons/emojis/strawberry.png",
	        /* css */"small",
	        /* title */"strawberry"
	      ],
	      /* record */[
	        /* key */":peach:",
	        /* src */"images/emoticons/emojis/peach.png",
	        /* css */"small",
	        /* title */"peach"
	      ],
	      /* record */[
	        /* key */":melon:",
	        /* src */"images/emoticons/emojis/melon.png",
	        /* css */"small",
	        /* title */"melon"
	      ],
	      /* record */[
	        /* key */":banana:",
	        /* src */"images/emoticons/emojis/banana.png",
	        /* css */"small",
	        /* title */"banana"
	      ],
	      /* record */[
	        /* key */":pear:",
	        /* src */"images/emoticons/emojis/pear.png",
	        /* css */"small",
	        /* title */"pear"
	      ],
	      /* record */[
	        /* key */":pineapple:",
	        /* src */"images/emoticons/emojis/pineapple.png",
	        /* css */"small",
	        /* title */"pineapple"
	      ],
	      /* record */[
	        /* key */":sweet_potato:",
	        /* src */"images/emoticons/emojis/sweet_potato.png",
	        /* css */"small",
	        /* title */"sweet_potato"
	      ],
	      /* record */[
	        /* key */":eggplant:",
	        /* src */"images/emoticons/emojis/eggplant.png",
	        /* css */"small",
	        /* title */"eggplant"
	      ],
	      /* record */[
	        /* key */":tomato:",
	        /* src */"images/emoticons/emojis/tomato.png",
	        /* css */"small",
	        /* title */"tomato"
	      ],
	      /* record */[
	        /* key */":corn:",
	        /* src */"images/emoticons/emojis/corn.png",
	        /* css */"small",
	        /* title */"corn"
	      ],
	      /* record */[
	        /* key */":house:",
	        /* src */"images/emoticons/emojis/house.png",
	        /* css */"small",
	        /* title */"house"
	      ],
	      /* record */[
	        /* key */":house_with_garden:",
	        /* src */"images/emoticons/emojis/house_with_garden.png",
	        /* css */"small",
	        /* title */"house_with_garden"
	      ],
	      /* record */[
	        /* key */":school:",
	        /* src */"images/emoticons/emojis/school.png",
	        /* css */"small",
	        /* title */"school"
	      ],
	      /* record */[
	        /* key */":office:",
	        /* src */"images/emoticons/emojis/office.png",
	        /* css */"small",
	        /* title */"office"
	      ],
	      /* record */[
	        /* key */":post_office:",
	        /* src */"images/emoticons/emojis/post_office.png",
	        /* css */"small",
	        /* title */"post_office"
	      ],
	      /* record */[
	        /* key */":hospital:",
	        /* src */"images/emoticons/emojis/hospital.png",
	        /* css */"small",
	        /* title */"hospital"
	      ],
	      /* record */[
	        /* key */":bank:",
	        /* src */"images/emoticons/emojis/bank.png",
	        /* css */"small",
	        /* title */"bank"
	      ],
	      /* record */[
	        /* key */":convenience_store:",
	        /* src */"images/emoticons/emojis/convenience_store.png",
	        /* css */"small",
	        /* title */"convenience_store"
	      ],
	      /* record */[
	        /* key */":love_hotel:",
	        /* src */"images/emoticons/emojis/love_hotel.png",
	        /* css */"small",
	        /* title */"love_hotel"
	      ],
	      /* record */[
	        /* key */":hotel:",
	        /* src */"images/emoticons/emojis/hotel.png",
	        /* css */"small",
	        /* title */"hotel"
	      ],
	      /* record */[
	        /* key */":wedding:",
	        /* src */"images/emoticons/emojis/wedding.png",
	        /* css */"small",
	        /* title */"wedding"
	      ],
	      /* record */[
	        /* key */":church:",
	        /* src */"images/emoticons/emojis/church.png",
	        /* css */"small",
	        /* title */"church"
	      ],
	      /* record */[
	        /* key */":department_store:",
	        /* src */"images/emoticons/emojis/department_store.png",
	        /* css */"small",
	        /* title */"department_store"
	      ],
	      /* record */[
	        /* key */":european_post_office:",
	        /* src */"images/emoticons/emojis/european_post_office.png",
	        /* css */"small",
	        /* title */"european_post_office"
	      ],
	      /* record */[
	        /* key */":city_sunrise:",
	        /* src */"images/emoticons/emojis/city_sunrise.png",
	        /* css */"small",
	        /* title */"city_sunrise"
	      ],
	      /* record */[
	        /* key */":city_sunset:",
	        /* src */"images/emoticons/emojis/city_sunset.png",
	        /* css */"small",
	        /* title */"city_sunset"
	      ],
	      /* record */[
	        /* key */":japanese_castle:",
	        /* src */"images/emoticons/emojis/japanese_castle.png",
	        /* css */"small",
	        /* title */"japanese_castle"
	      ],
	      /* record */[
	        /* key */":european_castle:",
	        /* src */"images/emoticons/emojis/european_castle.png",
	        /* css */"small",
	        /* title */"european_castle"
	      ],
	      /* record */[
	        /* key */":tent:",
	        /* src */"images/emoticons/emojis/tent.png",
	        /* css */"small",
	        /* title */"tent"
	      ],
	      /* record */[
	        /* key */":factory:",
	        /* src */"images/emoticons/emojis/factory.png",
	        /* css */"small",
	        /* title */"factory"
	      ],
	      /* record */[
	        /* key */":tokyo_tower:",
	        /* src */"images/emoticons/emojis/tokyo_tower.png",
	        /* css */"small",
	        /* title */"tokyo_tower"
	      ],
	      /* record */[
	        /* key */":japan:",
	        /* src */"images/emoticons/emojis/japan.png",
	        /* css */"small",
	        /* title */"japan"
	      ],
	      /* record */[
	        /* key */":mount_fuji:",
	        /* src */"images/emoticons/emojis/mount_fuji.png",
	        /* css */"small",
	        /* title */"mount_fuji"
	      ],
	      /* record */[
	        /* key */":sunrise_over_mountains:",
	        /* src */"images/emoticons/emojis/sunrise_over_mountains.png",
	        /* css */"small",
	        /* title */"sunrise_over_mountains"
	      ],
	      /* record */[
	        /* key */":sunrise:",
	        /* src */"images/emoticons/emojis/sunrise.png",
	        /* css */"small",
	        /* title */"sunrise"
	      ],
	      /* record */[
	        /* key */":stars:",
	        /* src */"images/emoticons/emojis/stars.png",
	        /* css */"small",
	        /* title */"stars"
	      ],
	      /* record */[
	        /* key */":statue_of_liberty:",
	        /* src */"images/emoticons/emojis/statue_of_liberty.png",
	        /* css */"small",
	        /* title */"statue_of_liberty"
	      ],
	      /* record */[
	        /* key */":bridge_at_night:",
	        /* src */"images/emoticons/emojis/bridge_at_night.png",
	        /* css */"small",
	        /* title */"bridge_at_night"
	      ],
	      /* record */[
	        /* key */":carousel_horse:",
	        /* src */"images/emoticons/emojis/carousel_horse.png",
	        /* css */"small",
	        /* title */"carousel_horse"
	      ],
	      /* record */[
	        /* key */":rainbow:",
	        /* src */"images/emoticons/emojis/rainbow.png",
	        /* css */"small",
	        /* title */"rainbow"
	      ],
	      /* record */[
	        /* key */":ferris_wheel:",
	        /* src */"images/emoticons/emojis/ferris_wheel.png",
	        /* css */"small",
	        /* title */"ferris_wheel"
	      ],
	      /* record */[
	        /* key */":fountain:",
	        /* src */"images/emoticons/emojis/fountain.png",
	        /* css */"small",
	        /* title */"fountain"
	      ],
	      /* record */[
	        /* key */":roller_coaster:",
	        /* src */"images/emoticons/emojis/roller_coaster.png",
	        /* css */"small",
	        /* title */"roller_coaster"
	      ],
	      /* record */[
	        /* key */":ship:",
	        /* src */"images/emoticons/emojis/ship.png",
	        /* css */"small",
	        /* title */"ship"
	      ],
	      /* record */[
	        /* key */":speedboat:",
	        /* src */"images/emoticons/emojis/speedboat.png",
	        /* css */"small",
	        /* title */"speedboat"
	      ],
	      /* record */[
	        /* key */":boat:",
	        /* src */"images/emoticons/emojis/boat.png",
	        /* css */"small",
	        /* title */"boat"
	      ],
	      /* record */[
	        /* key */":sailboat:",
	        /* src */"images/emoticons/emojis/sailboat.png",
	        /* css */"small",
	        /* title */"sailboat"
	      ],
	      /* record */[
	        /* key */":rowboat:",
	        /* src */"images/emoticons/emojis/rowboat.png",
	        /* css */"small",
	        /* title */"rowboat"
	      ],
	      /* record */[
	        /* key */":anchor:",
	        /* src */"images/emoticons/emojis/anchor.png",
	        /* css */"small",
	        /* title */"anchor"
	      ],
	      /* record */[
	        /* key */":rocket:",
	        /* src */"images/emoticons/emojis/rocket.png",
	        /* css */"small",
	        /* title */"rocket"
	      ],
	      /* record */[
	        /* key */":airplane:",
	        /* src */"images/emoticons/emojis/airplane.png",
	        /* css */"small",
	        /* title */"airplane"
	      ],
	      /* record */[
	        /* key */":helicopter:",
	        /* src */"images/emoticons/emojis/helicopter.png",
	        /* css */"small",
	        /* title */"helicopter"
	      ],
	      /* record */[
	        /* key */":steam_locomotive:",
	        /* src */"images/emoticons/emojis/steam_locomotive.png",
	        /* css */"small",
	        /* title */"steam_locomotive"
	      ],
	      /* record */[
	        /* key */":tram:",
	        /* src */"images/emoticons/emojis/tram.png",
	        /* css */"small",
	        /* title */"tram"
	      ],
	      /* record */[
	        /* key */":mountain_railway:",
	        /* src */"images/emoticons/emojis/mountain_railway.png",
	        /* css */"small",
	        /* title */"mountain_railway"
	      ],
	      /* record */[
	        /* key */":bike:",
	        /* src */"images/emoticons/emojis/bike.png",
	        /* css */"small",
	        /* title */"bike"
	      ],
	      /* record */[
	        /* key */":aerial_tramway:",
	        /* src */"images/emoticons/emojis/aerial_tramway.png",
	        /* css */"small",
	        /* title */"aerial_tramway"
	      ],
	      /* record */[
	        /* key */":suspension_railway:",
	        /* src */"images/emoticons/emojis/suspension_railway.png",
	        /* css */"small",
	        /* title */"suspension_railway"
	      ],
	      /* record */[
	        /* key */":mountain_cableway:",
	        /* src */"images/emoticons/emojis/mountain_cableway.png",
	        /* css */"small",
	        /* title */"mountain_cableway"
	      ],
	      /* record */[
	        /* key */":tractor:",
	        /* src */"images/emoticons/emojis/tractor.png",
	        /* css */"small",
	        /* title */"tractor"
	      ],
	      /* record */[
	        /* key */":blue_car:",
	        /* src */"images/emoticons/emojis/blue_car.png",
	        /* css */"small",
	        /* title */"blue_car"
	      ],
	      /* record */[
	        /* key */":oncoming_automobile:",
	        /* src */"images/emoticons/emojis/oncoming_automobile.png",
	        /* css */"small",
	        /* title */"oncoming_automobile"
	      ],
	      /* record */[
	        /* key */":car:",
	        /* src */"images/emoticons/emojis/car.png",
	        /* css */"small",
	        /* title */"car"
	      ],
	      /* record */[
	        /* key */":red_car:",
	        /* src */"images/emoticons/emojis/red_car.png",
	        /* css */"small",
	        /* title */"red_car"
	      ],
	      /* record */[
	        /* key */":taxi:",
	        /* src */"images/emoticons/emojis/taxi.png",
	        /* css */"small",
	        /* title */"taxi"
	      ],
	      /* record */[
	        /* key */":oncoming_taxi:",
	        /* src */"images/emoticons/emojis/oncoming_taxi.png",
	        /* css */"small",
	        /* title */"oncoming_taxi"
	      ],
	      /* record */[
	        /* key */":articulated_lorry:",
	        /* src */"images/emoticons/emojis/articulated_lorry.png",
	        /* css */"small",
	        /* title */"articulated_lorry"
	      ],
	      /* record */[
	        /* key */":bus:",
	        /* src */"images/emoticons/emojis/bus.png",
	        /* css */"small",
	        /* title */"bus"
	      ],
	      /* record */[
	        /* key */":oncoming_bus:",
	        /* src */"images/emoticons/emojis/oncoming_bus.png",
	        /* css */"small",
	        /* title */"oncoming_bus"
	      ],
	      /* record */[
	        /* key */":rotating_light:",
	        /* src */"images/emoticons/emojis/rotating_light.png",
	        /* css */"small",
	        /* title */"rotating_light"
	      ],
	      /* record */[
	        /* key */":police_car:",
	        /* src */"images/emoticons/emojis/police_car.png",
	        /* css */"small",
	        /* title */"police_car"
	      ],
	      /* record */[
	        /* key */":oncoming_police_car:",
	        /* src */"images/emoticons/emojis/oncoming_police_car.png",
	        /* css */"small",
	        /* title */"oncoming_police_car"
	      ],
	      /* record */[
	        /* key */":fire_engine:",
	        /* src */"images/emoticons/emojis/fire_engine.png",
	        /* css */"small",
	        /* title */"fire_engine"
	      ],
	      /* record */[
	        /* key */":ambulance:",
	        /* src */"images/emoticons/emojis/ambulance.png",
	        /* css */"small",
	        /* title */"ambulance"
	      ],
	      /* record */[
	        /* key */":minibus:",
	        /* src */"images/emoticons/emojis/minibus.png",
	        /* css */"small",
	        /* title */"minibus"
	      ],
	      /* record */[
	        /* key */":truck:",
	        /* src */"images/emoticons/emojis/truck.png",
	        /* css */"small",
	        /* title */"truck"
	      ],
	      /* record */[
	        /* key */":train:",
	        /* src */"images/emoticons/emojis/train.png",
	        /* css */"small",
	        /* title */"train"
	      ],
	      /* record */[
	        /* key */":station:",
	        /* src */"images/emoticons/emojis/station.png",
	        /* css */"small",
	        /* title */"station"
	      ],
	      /* record */[
	        /* key */":train2:",
	        /* src */"images/emoticons/emojis/train2.png",
	        /* css */"small",
	        /* title */"train2"
	      ],
	      /* record */[
	        /* key */":bullettrain_front:",
	        /* src */"images/emoticons/emojis/bullettrain_front.png",
	        /* css */"small",
	        /* title */"bullettrain_front"
	      ],
	      /* record */[
	        /* key */":bullettrain_side:",
	        /* src */"images/emoticons/emojis/bullettrain_side.png",
	        /* css */"small",
	        /* title */"bullettrain_side"
	      ],
	      /* record */[
	        /* key */":light_rail:",
	        /* src */"images/emoticons/emojis/light_rail.png",
	        /* css */"small",
	        /* title */"light_rail"
	      ],
	      /* record */[
	        /* key */":monorail:",
	        /* src */"images/emoticons/emojis/monorail.png",
	        /* css */"small",
	        /* title */"monorail"
	      ],
	      /* record */[
	        /* key */":railway_car:",
	        /* src */"images/emoticons/emojis/railway_car.png",
	        /* css */"small",
	        /* title */"railway_car"
	      ],
	      /* record */[
	        /* key */":trolleybus:",
	        /* src */"images/emoticons/emojis/trolleybus.png",
	        /* css */"small",
	        /* title */"trolleybus"
	      ],
	      /* record */[
	        /* key */":ticket:",
	        /* src */"images/emoticons/emojis/ticket.png",
	        /* css */"small",
	        /* title */"ticket"
	      ],
	      /* record */[
	        /* key */":fuelpump:",
	        /* src */"images/emoticons/emojis/fuelpump.png",
	        /* css */"small",
	        /* title */"fuelpump"
	      ],
	      /* record */[
	        /* key */":vertical_traffic_light:",
	        /* src */"images/emoticons/emojis/vertical_traffic_light.png",
	        /* css */"small",
	        /* title */"vertical_traffic_light"
	      ],
	      /* record */[
	        /* key */":traffic_light:",
	        /* src */"images/emoticons/emojis/traffic_light.png",
	        /* css */"small",
	        /* title */"traffic_light"
	      ],
	      /* record */[
	        /* key */":warning:",
	        /* src */"images/emoticons/emojis/warning.png",
	        /* css */"small",
	        /* title */"warning"
	      ],
	      /* record */[
	        /* key */":construction:",
	        /* src */"images/emoticons/emojis/construction.png",
	        /* css */"small",
	        /* title */"construction"
	      ],
	      /* record */[
	        /* key */":beginner:",
	        /* src */"images/emoticons/emojis/beginner.png",
	        /* css */"small",
	        /* title */"beginner"
	      ],
	      /* record */[
	        /* key */":atm:",
	        /* src */"images/emoticons/emojis/atm.png",
	        /* css */"small",
	        /* title */"atm"
	      ],
	      /* record */[
	        /* key */":slot_machine:",
	        /* src */"images/emoticons/emojis/slot_machine.png",
	        /* css */"small",
	        /* title */"slot_machine"
	      ],
	      /* record */[
	        /* key */":busstop:",
	        /* src */"images/emoticons/emojis/busstop.png",
	        /* css */"small",
	        /* title */"busstop"
	      ],
	      /* record */[
	        /* key */":barber:",
	        /* src */"images/emoticons/emojis/barber.png",
	        /* css */"small",
	        /* title */"barber"
	      ],
	      /* record */[
	        /* key */":hotsprings:",
	        /* src */"images/emoticons/emojis/hotsprings.png",
	        /* css */"small",
	        /* title */"hotsprings"
	      ],
	      /* record */[
	        /* key */":checkered_flag:",
	        /* src */"images/emoticons/emojis/checkered_flag.png",
	        /* css */"small",
	        /* title */"checkered_flag"
	      ],
	      /* record */[
	        /* key */":crossed_flags:",
	        /* src */"images/emoticons/emojis/crossed_flags.png",
	        /* css */"small",
	        /* title */"crossed_flags"
	      ],
	      /* record */[
	        /* key */":izakaya_lantern:",
	        /* src */"images/emoticons/emojis/izakaya_lantern.png",
	        /* css */"small",
	        /* title */"izakaya_lantern"
	      ],
	      /* record */[
	        /* key */":moyai:",
	        /* src */"images/emoticons/emojis/moyai.png",
	        /* css */"small",
	        /* title */"moyai"
	      ],
	      /* record */[
	        /* key */":circus_tent:",
	        /* src */"images/emoticons/emojis/circus_tent.png",
	        /* css */"small",
	        /* title */"circus_tent"
	      ],
	      /* record */[
	        /* key */":performing_arts:",
	        /* src */"images/emoticons/emojis/performing_arts.png",
	        /* css */"small",
	        /* title */"performing_arts"
	      ],
	      /* record */[
	        /* key */":round_pushpin:",
	        /* src */"images/emoticons/emojis/round_pushpin.png",
	        /* css */"small",
	        /* title */"round_pushpin"
	      ],
	      /* record */[
	        /* key */":triangular_flag_on_post:",
	        /* src */"images/emoticons/emojis/triangular_flag_on_post.png",
	        /* css */"small",
	        /* title */"triangular_flag_on_post"
	      ],
	      /* record */[
	        /* key */":jp:",
	        /* src */"images/emoticons/emojis/jp.png",
	        /* css */"small",
	        /* title */"jp"
	      ],
	      /* record */[
	        /* key */":kr:",
	        /* src */"images/emoticons/emojis/kr.png",
	        /* css */"small",
	        /* title */"kr"
	      ],
	      /* record */[
	        /* key */":cn:",
	        /* src */"images/emoticons/emojis/cn.png",
	        /* css */"small",
	        /* title */"cn"
	      ],
	      /* record */[
	        /* key */":us:",
	        /* src */"images/emoticons/emojis/us.png",
	        /* css */"small",
	        /* title */"us"
	      ],
	      /* record */[
	        /* key */":fr:",
	        /* src */"images/emoticons/emojis/fr.png",
	        /* css */"small",
	        /* title */"fr"
	      ],
	      /* record */[
	        /* key */":es:",
	        /* src */"images/emoticons/emojis/es.png",
	        /* css */"small",
	        /* title */"es"
	      ],
	      /* record */[
	        /* key */":it:",
	        /* src */"images/emoticons/emojis/it.png",
	        /* css */"small",
	        /* title */"it"
	      ],
	      /* record */[
	        /* key */":ru:",
	        /* src */"images/emoticons/emojis/ru.png",
	        /* css */"small",
	        /* title */"ru"
	      ],
	      /* record */[
	        /* key */":gb:",
	        /* src */"images/emoticons/emojis/gb.png",
	        /* css */"small",
	        /* title */"gb"
	      ],
	      /* record */[
	        /* key */":uk:",
	        /* src */"images/emoticons/emojis/uk.png",
	        /* css */"small",
	        /* title */"uk"
	      ],
	      /* record */[
	        /* key */":de:",
	        /* src */"images/emoticons/emojis/de.png",
	        /* css */"small",
	        /* title */"de"
	      ],
	      /* record */[
	        /* key */":one:",
	        /* src */"images/emoticons/emojis/one.png",
	        /* css */"small",
	        /* title */"one"
	      ],
	      /* record */[
	        /* key */":two:",
	        /* src */"images/emoticons/emojis/two.png",
	        /* css */"small",
	        /* title */"two"
	      ],
	      /* record */[
	        /* key */":three:",
	        /* src */"images/emoticons/emojis/three.png",
	        /* css */"small",
	        /* title */"three"
	      ],
	      /* record */[
	        /* key */":four:",
	        /* src */"images/emoticons/emojis/four.png",
	        /* css */"small",
	        /* title */"four"
	      ],
	      /* record */[
	        /* key */":five:",
	        /* src */"images/emoticons/emojis/five.png",
	        /* css */"small",
	        /* title */"five"
	      ],
	      /* record */[
	        /* key */":six:",
	        /* src */"images/emoticons/emojis/six.png",
	        /* css */"small",
	        /* title */"six"
	      ],
	      /* record */[
	        /* key */":seven:",
	        /* src */"images/emoticons/emojis/seven.png",
	        /* css */"small",
	        /* title */"seven"
	      ],
	      /* record */[
	        /* key */":eight:",
	        /* src */"images/emoticons/emojis/eight.png",
	        /* css */"small",
	        /* title */"eight"
	      ],
	      /* record */[
	        /* key */":nine:",
	        /* src */"images/emoticons/emojis/nine.png",
	        /* css */"small",
	        /* title */"nine"
	      ],
	      /* record */[
	        /* key */":keycap_ten:",
	        /* src */"images/emoticons/emojis/keycap_ten.png",
	        /* css */"small",
	        /* title */"keycap_ten"
	      ],
	      /* record */[
	        /* key */":1234:",
	        /* src */"images/emoticons/emojis/1234.png",
	        /* css */"small",
	        /* title */"1234"
	      ],
	      /* record */[
	        /* key */":zero:",
	        /* src */"images/emoticons/emojis/zero.png",
	        /* css */"small",
	        /* title */"zero"
	      ],
	      /* record */[
	        /* key */":hash:",
	        /* src */"images/emoticons/emojis/hash.png",
	        /* css */"small",
	        /* title */"hash"
	      ],
	      /* record */[
	        /* key */":symbols:",
	        /* src */"images/emoticons/emojis/symbols.png",
	        /* css */"small",
	        /* title */"symbols"
	      ],
	      /* record */[
	        /* key */":arrow_backward:",
	        /* src */"images/emoticons/emojis/arrow_backward.png",
	        /* css */"small",
	        /* title */"arrow_backward"
	      ],
	      /* record */[
	        /* key */":arrow_down:",
	        /* src */"images/emoticons/emojis/arrow_down.png",
	        /* css */"small",
	        /* title */"arrow_down"
	      ],
	      /* record */[
	        /* key */":arrow_forward:",
	        /* src */"images/emoticons/emojis/arrow_forward.png",
	        /* css */"small",
	        /* title */"arrow_forward"
	      ],
	      /* record */[
	        /* key */":arrow_left:",
	        /* src */"images/emoticons/emojis/arrow_left.png",
	        /* css */"small",
	        /* title */"arrow_left"
	      ],
	      /* record */[
	        /* key */":capital_abcd:",
	        /* src */"images/emoticons/emojis/capital_abcd.png",
	        /* css */"small",
	        /* title */"capital_abcd"
	      ],
	      /* record */[
	        /* key */":abcd:",
	        /* src */"images/emoticons/emojis/abcd.png",
	        /* css */"small",
	        /* title */"abcd"
	      ],
	      /* record */[
	        /* key */":abc:",
	        /* src */"images/emoticons/emojis/abc.png",
	        /* css */"small",
	        /* title */"abc"
	      ],
	      /* record */[
	        /* key */":arrow_lower_left:",
	        /* src */"images/emoticons/emojis/arrow_lower_left.png",
	        /* css */"small",
	        /* title */"arrow_lower_left"
	      ],
	      /* record */[
	        /* key */":arrow_lower_right:",
	        /* src */"images/emoticons/emojis/arrow_lower_right.png",
	        /* css */"small",
	        /* title */"arrow_lower_right"
	      ],
	      /* record */[
	        /* key */":arrow_right:",
	        /* src */"images/emoticons/emojis/arrow_right.png",
	        /* css */"small",
	        /* title */"arrow_right"
	      ],
	      /* record */[
	        /* key */":arrow_up:",
	        /* src */"images/emoticons/emojis/arrow_up.png",
	        /* css */"small",
	        /* title */"arrow_up"
	      ],
	      /* record */[
	        /* key */":arrow_upper_left:",
	        /* src */"images/emoticons/emojis/arrow_upper_left.png",
	        /* css */"small",
	        /* title */"arrow_upper_left"
	      ],
	      /* record */[
	        /* key */":arrow_upper_right:",
	        /* src */"images/emoticons/emojis/arrow_upper_right.png",
	        /* css */"small",
	        /* title */"arrow_upper_right"
	      ],
	      /* record */[
	        /* key */":arrow_double_down:",
	        /* src */"images/emoticons/emojis/arrow_double_down.png",
	        /* css */"small",
	        /* title */"arrow_double_down"
	      ],
	      /* record */[
	        /* key */":arrow_double_up:",
	        /* src */"images/emoticons/emojis/arrow_double_up.png",
	        /* css */"small",
	        /* title */"arrow_double_up"
	      ],
	      /* record */[
	        /* key */":arrow_down_small:",
	        /* src */"images/emoticons/emojis/arrow_down_small.png",
	        /* css */"small",
	        /* title */"arrow_down_small"
	      ],
	      /* record */[
	        /* key */":arrow_heading_down:",
	        /* src */"images/emoticons/emojis/arrow_heading_down.png",
	        /* css */"small",
	        /* title */"arrow_heading_down"
	      ],
	      /* record */[
	        /* key */":arrow_heading_up:",
	        /* src */"images/emoticons/emojis/arrow_heading_up.png",
	        /* css */"small",
	        /* title */"arrow_heading_up"
	      ],
	      /* record */[
	        /* key */":leftwards_arrow_with_hook:",
	        /* src */"images/emoticons/emojis/leftwards_arrow_with_hook.png",
	        /* css */"small",
	        /* title */"leftwards_arrow_with_hook"
	      ],
	      /* record */[
	        /* key */":arrow_right_hook:",
	        /* src */"images/emoticons/emojis/arrow_right_hook.png",
	        /* css */"small",
	        /* title */"arrow_right_hook"
	      ],
	      /* record */[
	        /* key */":left_right_arrow:",
	        /* src */"images/emoticons/emojis/left_right_arrow.png",
	        /* css */"small",
	        /* title */"left_right_arrow"
	      ],
	      /* record */[
	        /* key */":arrow_up_down:",
	        /* src */"images/emoticons/emojis/arrow_up_down.png",
	        /* css */"small",
	        /* title */"arrow_up_down"
	      ],
	      /* record */[
	        /* key */":arrow_up_small:",
	        /* src */"images/emoticons/emojis/arrow_up_small.png",
	        /* css */"small",
	        /* title */"arrow_up_small"
	      ],
	      /* record */[
	        /* key */":arrows_clockwise:",
	        /* src */"images/emoticons/emojis/arrows_clockwise.png",
	        /* css */"small",
	        /* title */"arrows_clockwise"
	      ],
	      /* record */[
	        /* key */":arrows_counterclockwise:",
	        /* src */"images/emoticons/emojis/arrows_counterclockwise.png",
	        /* css */"small",
	        /* title */"arrows_counterclockwise"
	      ],
	      /* record */[
	        /* key */":rewind:",
	        /* src */"images/emoticons/emojis/rewind.png",
	        /* css */"small",
	        /* title */"rewind"
	      ],
	      /* record */[
	        /* key */":fast_forward:",
	        /* src */"images/emoticons/emojis/fast_forward.png",
	        /* css */"small",
	        /* title */"fast_forward"
	      ],
	      /* record */[
	        /* key */":information_source:",
	        /* src */"images/emoticons/emojis/information_source.png",
	        /* css */"small",
	        /* title */"information_source"
	      ],
	      /* record */[
	        /* key */":ok:",
	        /* src */"images/emoticons/emojis/ok.png",
	        /* css */"small",
	        /* title */"ok"
	      ],
	      /* record */[
	        /* key */":twisted_rightwards_arrows:",
	        /* src */"images/emoticons/emojis/twisted_rightwards_arrows.png",
	        /* css */"small",
	        /* title */"twisted_rightwards_arrows"
	      ],
	      /* record */[
	        /* key */":repeat:",
	        /* src */"images/emoticons/emojis/repeat.png",
	        /* css */"small",
	        /* title */"repeat"
	      ],
	      /* record */[
	        /* key */":repeat_one:",
	        /* src */"images/emoticons/emojis/repeat_one.png",
	        /* css */"small",
	        /* title */"repeat_one"
	      ],
	      /* record */[
	        /* key */":new:",
	        /* src */"images/emoticons/emojis/new.png",
	        /* css */"small",
	        /* title */"new"
	      ],
	      /* record */[
	        /* key */":top:",
	        /* src */"images/emoticons/emojis/top.png",
	        /* css */"small",
	        /* title */"top"
	      ],
	      /* record */[
	        /* key */":up:",
	        /* src */"images/emoticons/emojis/up.png",
	        /* css */"small",
	        /* title */"up"
	      ],
	      /* record */[
	        /* key */":cool:",
	        /* src */"images/emoticons/emojis/cool.png",
	        /* css */"small",
	        /* title */"cool"
	      ],
	      /* record */[
	        /* key */":free:",
	        /* src */"images/emoticons/emojis/free.png",
	        /* css */"small",
	        /* title */"free"
	      ],
	      /* record */[
	        /* key */":ng:",
	        /* src */"images/emoticons/emojis/ng.png",
	        /* css */"small",
	        /* title */"ng"
	      ],
	      /* record */[
	        /* key */":cinema:",
	        /* src */"images/emoticons/emojis/cinema.png",
	        /* css */"small",
	        /* title */"cinema"
	      ],
	      /* record */[
	        /* key */":koko:",
	        /* src */"images/emoticons/emojis/koko.png",
	        /* css */"small",
	        /* title */"koko"
	      ],
	      /* record */[
	        /* key */":signal_strength:",
	        /* src */"images/emoticons/emojis/signal_strength.png",
	        /* css */"small",
	        /* title */"signal_strength"
	      ],
	      /* record */[
	        /* key */":u5272:",
	        /* src */"images/emoticons/emojis/u5272.png",
	        /* css */"small",
	        /* title */"u5272"
	      ],
	      /* record */[
	        /* key */":u5408:",
	        /* src */"images/emoticons/emojis/u5408.png",
	        /* css */"small",
	        /* title */"u5408"
	      ],
	      /* record */[
	        /* key */":u55b6:",
	        /* src */"images/emoticons/emojis/u55b6.png",
	        /* css */"small",
	        /* title */"u55b6"
	      ],
	      /* record */[
	        /* key */":u6307:",
	        /* src */"images/emoticons/emojis/u6307.png",
	        /* css */"small",
	        /* title */"u6307"
	      ],
	      /* record */[
	        /* key */":u6708:",
	        /* src */"images/emoticons/emojis/u6708.png",
	        /* css */"small",
	        /* title */"u6708"
	      ],
	      /* record */[
	        /* key */":u6709:",
	        /* src */"images/emoticons/emojis/u6709.png",
	        /* css */"small",
	        /* title */"u6709"
	      ],
	      /* record */[
	        /* key */":u6e80:",
	        /* src */"images/emoticons/emojis/u6e80.png",
	        /* css */"small",
	        /* title */"u6e80"
	      ],
	      /* record */[
	        /* key */":u7121:",
	        /* src */"images/emoticons/emojis/u7121.png",
	        /* css */"small",
	        /* title */"u7121"
	      ],
	      /* record */[
	        /* key */":u7533:",
	        /* src */"images/emoticons/emojis/u7533.png",
	        /* css */"small",
	        /* title */"u7533"
	      ],
	      /* record */[
	        /* key */":u7a7a:",
	        /* src */"images/emoticons/emojis/u7a7a.png",
	        /* css */"small",
	        /* title */"u7a7a"
	      ],
	      /* record */[
	        /* key */":u7981:",
	        /* src */"images/emoticons/emojis/u7981.png",
	        /* css */"small",
	        /* title */"u7981"
	      ],
	      /* record */[
	        /* key */":sa:",
	        /* src */"images/emoticons/emojis/sa.png",
	        /* css */"small",
	        /* title */"sa"
	      ],
	      /* record */[
	        /* key */":restroom:",
	        /* src */"images/emoticons/emojis/restroom.png",
	        /* css */"small",
	        /* title */"restroom"
	      ],
	      /* record */[
	        /* key */":mens:",
	        /* src */"images/emoticons/emojis/mens.png",
	        /* css */"small",
	        /* title */"mens"
	      ],
	      /* record */[
	        /* key */":womens:",
	        /* src */"images/emoticons/emojis/womens.png",
	        /* css */"small",
	        /* title */"womens"
	      ],
	      /* record */[
	        /* key */":baby_symbol:",
	        /* src */"images/emoticons/emojis/baby_symbol.png",
	        /* css */"small",
	        /* title */"baby_symbol"
	      ],
	      /* record */[
	        /* key */":no_smoking:",
	        /* src */"images/emoticons/emojis/no_smoking.png",
	        /* css */"small",
	        /* title */"no_smoking"
	      ],
	      /* record */[
	        /* key */":parking:",
	        /* src */"images/emoticons/emojis/parking.png",
	        /* css */"small",
	        /* title */"parking"
	      ],
	      /* record */[
	        /* key */":wheelchair:",
	        /* src */"images/emoticons/emojis/wheelchair.png",
	        /* css */"small",
	        /* title */"wheelchair"
	      ],
	      /* record */[
	        /* key */":metro:",
	        /* src */"images/emoticons/emojis/metro.png",
	        /* css */"small",
	        /* title */"metro"
	      ],
	      /* record */[
	        /* key */":baggage_claim:",
	        /* src */"images/emoticons/emojis/baggage_claim.png",
	        /* css */"small",
	        /* title */"baggage_claim"
	      ],
	      /* record */[
	        /* key */":accept:",
	        /* src */"images/emoticons/emojis/accept.png",
	        /* css */"small",
	        /* title */"accept"
	      ],
	      /* record */[
	        /* key */":wc:",
	        /* src */"images/emoticons/emojis/wc.png",
	        /* css */"small",
	        /* title */"wc"
	      ],
	      /* record */[
	        /* key */":potable_water:",
	        /* src */"images/emoticons/emojis/potable_water.png",
	        /* css */"small",
	        /* title */"potable_water"
	      ],
	      /* record */[
	        /* key */":put_litter_in_its_place:",
	        /* src */"images/emoticons/emojis/put_litter_in_its_place.png",
	        /* css */"small",
	        /* title */"put_litter_in_its_place"
	      ],
	      /* record */[
	        /* key */":secret:",
	        /* src */"images/emoticons/emojis/secret.png",
	        /* css */"small",
	        /* title */"secret"
	      ],
	      /* record */[
	        /* key */":congratulations:",
	        /* src */"images/emoticons/emojis/congratulations.png",
	        /* css */"small",
	        /* title */"congratulations"
	      ],
	      /* record */[
	        /* key */":m:",
	        /* src */"images/emoticons/emojis/m.png",
	        /* css */"small",
	        /* title */"m"
	      ],
	      /* record */[
	        /* key */":passport_control:",
	        /* src */"images/emoticons/emojis/passport_control.png",
	        /* css */"small",
	        /* title */"passport_control"
	      ],
	      /* record */[
	        /* key */":left_luggage:",
	        /* src */"images/emoticons/emojis/left_luggage.png",
	        /* css */"small",
	        /* title */"left_luggage"
	      ],
	      /* record */[
	        /* key */":customs:",
	        /* src */"images/emoticons/emojis/customs.png",
	        /* css */"small",
	        /* title */"customs"
	      ],
	      /* record */[
	        /* key */":ideograph_advantage:",
	        /* src */"images/emoticons/emojis/ideograph_advantage.png",
	        /* css */"small",
	        /* title */"ideograph_advantage"
	      ],
	      /* record */[
	        /* key */":cl:",
	        /* src */"images/emoticons/emojis/cl.png",
	        /* css */"small",
	        /* title */"cl"
	      ],
	      /* record */[
	        /* key */":sos:",
	        /* src */"images/emoticons/emojis/sos.png",
	        /* css */"small",
	        /* title */"sos"
	      ],
	      /* record */[
	        /* key */":id:",
	        /* src */"images/emoticons/emojis/id.png",
	        /* css */"small",
	        /* title */"id"
	      ],
	      /* record */[
	        /* key */":no_entry_sign:",
	        /* src */"images/emoticons/emojis/no_entry_sign.png",
	        /* css */"small",
	        /* title */"no_entry_sign"
	      ],
	      /* record */[
	        /* key */":underage:",
	        /* src */"images/emoticons/emojis/underage.png",
	        /* css */"small",
	        /* title */"underage"
	      ],
	      /* record */[
	        /* key */":no_mobile_phones:",
	        /* src */"images/emoticons/emojis/no_mobile_phones.png",
	        /* css */"small",
	        /* title */"no_mobile_phones"
	      ],
	      /* record */[
	        /* key */":do_not_litter:",
	        /* src */"images/emoticons/emojis/do_not_litter.png",
	        /* css */"small",
	        /* title */"do_not_litter"
	      ],
	      /* record */[
	        /* key */":non-potable_water:",
	        /* src */"images/emoticons/emojis/non-potable_water.png",
	        /* css */"small",
	        /* title */"non-potable_water"
	      ],
	      /* record */[
	        /* key */":no_bicycles:",
	        /* src */"images/emoticons/emojis/no_bicycles.png",
	        /* css */"small",
	        /* title */"no_bicycles"
	      ],
	      /* record */[
	        /* key */":no_pedestrians:",
	        /* src */"images/emoticons/emojis/no_pedestrians.png",
	        /* css */"small",
	        /* title */"no_pedestrians"
	      ],
	      /* record */[
	        /* key */":children_crossing:",
	        /* src */"images/emoticons/emojis/children_crossing.png",
	        /* css */"small",
	        /* title */"children_crossing"
	      ],
	      /* record */[
	        /* key */":no_entry:",
	        /* src */"images/emoticons/emojis/no_entry.png",
	        /* css */"small",
	        /* title */"no_entry"
	      ],
	      /* record */[
	        /* key */":eight_spoked_asterisk:",
	        /* src */"images/emoticons/emojis/eight_spoked_asterisk.png",
	        /* css */"small",
	        /* title */"eight_spoked_asterisk"
	      ],
	      /* record */[
	        /* key */":eight_pointed_black_star:",
	        /* src */"images/emoticons/emojis/eight_pointed_black_star.png",
	        /* css */"small",
	        /* title */"eight_pointed_black_star"
	      ],
	      /* record */[
	        /* key */":heart_decoration:",
	        /* src */"images/emoticons/emojis/heart_decoration.png",
	        /* css */"small",
	        /* title */"heart_decoration"
	      ],
	      /* record */[
	        /* key */":vs:",
	        /* src */"images/emoticons/emojis/vs.png",
	        /* css */"small",
	        /* title */"vs"
	      ],
	      /* record */[
	        /* key */":vibration_mode:",
	        /* src */"images/emoticons/emojis/vibration_mode.png",
	        /* css */"small",
	        /* title */"vibration_mode"
	      ],
	      /* record */[
	        /* key */":mobile_phone_off:",
	        /* src */"images/emoticons/emojis/mobile_phone_off.png",
	        /* css */"small",
	        /* title */"mobile_phone_off"
	      ],
	      /* record */[
	        /* key */":chart:",
	        /* src */"images/emoticons/emojis/chart.png",
	        /* css */"small",
	        /* title */"chart"
	      ],
	      /* record */[
	        /* key */":currency_exchange:",
	        /* src */"images/emoticons/emojis/currency_exchange.png",
	        /* css */"small",
	        /* title */"currency_exchange"
	      ],
	      /* record */[
	        /* key */":aries:",
	        /* src */"images/emoticons/emojis/aries.png",
	        /* css */"small",
	        /* title */"aries"
	      ],
	      /* record */[
	        /* key */":taurus:",
	        /* src */"images/emoticons/emojis/taurus.png",
	        /* css */"small",
	        /* title */"taurus"
	      ],
	      /* record */[
	        /* key */":gemini:",
	        /* src */"images/emoticons/emojis/gemini.png",
	        /* css */"small",
	        /* title */"gemini"
	      ],
	      /* record */[
	        /* key */":cancer:",
	        /* src */"images/emoticons/emojis/cancer.png",
	        /* css */"small",
	        /* title */"cancer"
	      ],
	      /* record */[
	        /* key */":leo:",
	        /* src */"images/emoticons/emojis/leo.png",
	        /* css */"small",
	        /* title */"leo"
	      ],
	      /* record */[
	        /* key */":virgo:",
	        /* src */"images/emoticons/emojis/virgo.png",
	        /* css */"small",
	        /* title */"virgo"
	      ],
	      /* record */[
	        /* key */":libra:",
	        /* src */"images/emoticons/emojis/libra.png",
	        /* css */"small",
	        /* title */"libra"
	      ],
	      /* record */[
	        /* key */":scorpius:",
	        /* src */"images/emoticons/emojis/scorpius.png",
	        /* css */"small",
	        /* title */"scorpius"
	      ],
	      /* record */[
	        /* key */":sagittarius:",
	        /* src */"images/emoticons/emojis/sagittarius.png",
	        /* css */"small",
	        /* title */"sagittarius"
	      ],
	      /* record */[
	        /* key */":capricorn:",
	        /* src */"images/emoticons/emojis/capricorn.png",
	        /* css */"small",
	        /* title */"capricorn"
	      ],
	      /* record */[
	        /* key */":aquarius:",
	        /* src */"images/emoticons/emojis/aquarius.png",
	        /* css */"small",
	        /* title */"aquarius"
	      ],
	      /* record */[
	        /* key */":pisces:",
	        /* src */"images/emoticons/emojis/pisces.png",
	        /* css */"small",
	        /* title */"pisces"
	      ],
	      /* record */[
	        /* key */":ophiuchus:",
	        /* src */"images/emoticons/emojis/ophiuchus.png",
	        /* css */"small",
	        /* title */"ophiuchus"
	      ],
	      /* record */[
	        /* key */":six_pointed_star:",
	        /* src */"images/emoticons/emojis/six_pointed_star.png",
	        /* css */"small",
	        /* title */"six_pointed_star"
	      ],
	      /* record */[
	        /* key */":negative_squared_cross_mark:",
	        /* src */"images/emoticons/emojis/negative_squared_cross_mark.png",
	        /* css */"small",
	        /* title */"negative_squared_cross_mark"
	      ],
	      /* record */[
	        /* key */":a:",
	        /* src */"images/emoticons/emojis/a.png",
	        /* css */"small",
	        /* title */"a"
	      ],
	      /* record */[
	        /* key */":b:",
	        /* src */"images/emoticons/emojis/b.png",
	        /* css */"small",
	        /* title */"b"
	      ],
	      /* record */[
	        /* key */":ab:",
	        /* src */"images/emoticons/emojis/ab.png",
	        /* css */"small",
	        /* title */"ab"
	      ],
	      /* record */[
	        /* key */":o2:",
	        /* src */"images/emoticons/emojis/o2.png",
	        /* css */"small",
	        /* title */"o2"
	      ],
	      /* record */[
	        /* key */":diamond_shape_with_a_dot_inside:",
	        /* src */"images/emoticons/emojis/diamond_shape_with_a_dot_inside.png",
	        /* css */"small",
	        /* title */"diamond_shape_with_a_dot_inside"
	      ],
	      /* record */[
	        /* key */":recycle:",
	        /* src */"images/emoticons/emojis/recycle.png",
	        /* css */"small",
	        /* title */"recycle"
	      ],
	      /* record */[
	        /* key */":end:",
	        /* src */"images/emoticons/emojis/end.png",
	        /* css */"small",
	        /* title */"end"
	      ],
	      /* record */[
	        /* key */":on:",
	        /* src */"images/emoticons/emojis/on.png",
	        /* css */"small",
	        /* title */"on"
	      ],
	      /* record */[
	        /* key */":soon:",
	        /* src */"images/emoticons/emojis/soon.png",
	        /* css */"small",
	        /* title */"soon"
	      ],
	      /* record */[
	        /* key */":clock1:",
	        /* src */"images/emoticons/emojis/clock1.png",
	        /* css */"small",
	        /* title */"clock1"
	      ],
	      /* record */[
	        /* key */":clock130:",
	        /* src */"images/emoticons/emojis/clock130.png",
	        /* css */"small",
	        /* title */"clock130"
	      ],
	      /* record */[
	        /* key */":clock10:",
	        /* src */"images/emoticons/emojis/clock10.png",
	        /* css */"small",
	        /* title */"clock10"
	      ],
	      /* record */[
	        /* key */":clock1030:",
	        /* src */"images/emoticons/emojis/clock1030.png",
	        /* css */"small",
	        /* title */"clock1030"
	      ],
	      /* record */[
	        /* key */":clock11:",
	        /* src */"images/emoticons/emojis/clock11.png",
	        /* css */"small",
	        /* title */"clock11"
	      ],
	      /* record */[
	        /* key */":clock1130:",
	        /* src */"images/emoticons/emojis/clock1130.png",
	        /* css */"small",
	        /* title */"clock1130"
	      ],
	      /* record */[
	        /* key */":clock12:",
	        /* src */"images/emoticons/emojis/clock12.png",
	        /* css */"small",
	        /* title */"clock12"
	      ],
	      /* record */[
	        /* key */":clock1230:",
	        /* src */"images/emoticons/emojis/clock1230.png",
	        /* css */"small",
	        /* title */"clock1230"
	      ],
	      /* record */[
	        /* key */":clock2:",
	        /* src */"images/emoticons/emojis/clock2.png",
	        /* css */"small",
	        /* title */"clock2"
	      ],
	      /* record */[
	        /* key */":clock230:",
	        /* src */"images/emoticons/emojis/clock230.png",
	        /* css */"small",
	        /* title */"clock230"
	      ],
	      /* record */[
	        /* key */":clock3:",
	        /* src */"images/emoticons/emojis/clock3.png",
	        /* css */"small",
	        /* title */"clock3"
	      ],
	      /* record */[
	        /* key */":clock330:",
	        /* src */"images/emoticons/emojis/clock330.png",
	        /* css */"small",
	        /* title */"clock330"
	      ],
	      /* record */[
	        /* key */":clock4:",
	        /* src */"images/emoticons/emojis/clock4.png",
	        /* css */"small",
	        /* title */"clock4"
	      ],
	      /* record */[
	        /* key */":clock430:",
	        /* src */"images/emoticons/emojis/clock430.png",
	        /* css */"small",
	        /* title */"clock430"
	      ],
	      /* record */[
	        /* key */":clock5:",
	        /* src */"images/emoticons/emojis/clock5.png",
	        /* css */"small",
	        /* title */"clock5"
	      ],
	      /* record */[
	        /* key */":clock530:",
	        /* src */"images/emoticons/emojis/clock530.png",
	        /* css */"small",
	        /* title */"clock530"
	      ],
	      /* record */[
	        /* key */":clock6:",
	        /* src */"images/emoticons/emojis/clock6.png",
	        /* css */"small",
	        /* title */"clock6"
	      ],
	      /* record */[
	        /* key */":clock630:",
	        /* src */"images/emoticons/emojis/clock630.png",
	        /* css */"small",
	        /* title */"clock630"
	      ],
	      /* record */[
	        /* key */":clock7:",
	        /* src */"images/emoticons/emojis/clock7.png",
	        /* css */"small",
	        /* title */"clock7"
	      ],
	      /* record */[
	        /* key */":clock730:",
	        /* src */"images/emoticons/emojis/clock730.png",
	        /* css */"small",
	        /* title */"clock730"
	      ],
	      /* record */[
	        /* key */":clock8:",
	        /* src */"images/emoticons/emojis/clock8.png",
	        /* css */"small",
	        /* title */"clock8"
	      ],
	      /* record */[
	        /* key */":clock830:",
	        /* src */"images/emoticons/emojis/clock830.png",
	        /* css */"small",
	        /* title */"clock830"
	      ],
	      /* record */[
	        /* key */":clock9:",
	        /* src */"images/emoticons/emojis/clock9.png",
	        /* css */"small",
	        /* title */"clock9"
	      ],
	      /* record */[
	        /* key */":clock930:",
	        /* src */"images/emoticons/emojis/clock930.png",
	        /* css */"small",
	        /* title */"clock930"
	      ],
	      /* record */[
	        /* key */":heavy_dollar_sign:",
	        /* src */"images/emoticons/emojis/heavy_dollar_sign.png",
	        /* css */"small",
	        /* title */"heavy_dollar_sign"
	      ],
	      /* record */[
	        /* key */":copyright:",
	        /* src */"images/emoticons/emojis/copyright.png",
	        /* css */"small",
	        /* title */"copyright"
	      ],
	      /* record */[
	        /* key */":registered:",
	        /* src */"images/emoticons/emojis/registered.png",
	        /* css */"small",
	        /* title */"registered"
	      ],
	      /* record */[
	        /* key */":tm:",
	        /* src */"images/emoticons/emojis/tm.png",
	        /* css */"small",
	        /* title */"tm"
	      ],
	      /* record */[
	        /* key */":x:",
	        /* src */"images/emoticons/emojis/x.png",
	        /* css */"small",
	        /* title */"x"
	      ],
	      /* record */[
	        /* key */":heavy_exclamation_mark:",
	        /* src */"images/emoticons/emojis/heavy_exclamation_mark.png",
	        /* css */"small",
	        /* title */"heavy_exclamation_mark"
	      ],
	      /* record */[
	        /* key */":bangbang:",
	        /* src */"images/emoticons/emojis/bangbang.png",
	        /* css */"small",
	        /* title */"bangbang"
	      ],
	      /* record */[
	        /* key */":interrobang:",
	        /* src */"images/emoticons/emojis/interrobang.png",
	        /* css */"small",
	        /* title */"interrobang"
	      ],
	      /* record */[
	        /* key */":o:",
	        /* src */"images/emoticons/emojis/o.png",
	        /* css */"small",
	        /* title */"o"
	      ],
	      /* record */[
	        /* key */":heavy_multiplication_x:",
	        /* src */"images/emoticons/emojis/heavy_multiplication_x.png",
	        /* css */"small",
	        /* title */"heavy_multiplication_x"
	      ],
	      /* record */[
	        /* key */":heavy_plus_sign:",
	        /* src */"images/emoticons/emojis/heavy_plus_sign.png",
	        /* css */"small",
	        /* title */"heavy_plus_sign"
	      ],
	      /* record */[
	        /* key */":heavy_minus_sign:",
	        /* src */"images/emoticons/emojis/heavy_minus_sign.png",
	        /* css */"small",
	        /* title */"heavy_minus_sign"
	      ],
	      /* record */[
	        /* key */":heavy_division_sign:",
	        /* src */"images/emoticons/emojis/heavy_division_sign.png",
	        /* css */"small",
	        /* title */"heavy_division_sign"
	      ],
	      /* record */[
	        /* key */":white_flower:",
	        /* src */"images/emoticons/emojis/white_flower.png",
	        /* css */"small",
	        /* title */"white_flower"
	      ],
	      /* record */[
	        /* key */":100:",
	        /* src */"images/emoticons/emojis/100.png",
	        /* css */"small",
	        /* title */"100"
	      ],
	      /* record */[
	        /* key */":heavy_check_mark:",
	        /* src */"images/emoticons/emojis/heavy_check_mark.png",
	        /* css */"small",
	        /* title */"heavy_check_mark"
	      ],
	      /* record */[
	        /* key */":ballot_box_with_check:",
	        /* src */"images/emoticons/emojis/ballot_box_with_check.png",
	        /* css */"small",
	        /* title */"ballot_box_with_check"
	      ],
	      /* record */[
	        /* key */":radio_button:",
	        /* src */"images/emoticons/emojis/radio_button.png",
	        /* css */"small",
	        /* title */"radio_button"
	      ],
	      /* record */[
	        /* key */":link:",
	        /* src */"images/emoticons/emojis/link.png",
	        /* css */"small",
	        /* title */"link"
	      ],
	      /* record */[
	        /* key */":curly_loop:",
	        /* src */"images/emoticons/emojis/curly_loop.png",
	        /* css */"small",
	        /* title */"curly_loop"
	      ],
	      /* record */[
	        /* key */":wavy_dash:",
	        /* src */"images/emoticons/emojis/wavy_dash.png",
	        /* css */"small",
	        /* title */"wavy_dash"
	      ],
	      /* record */[
	        /* key */":part_alternation_mark:",
	        /* src */"images/emoticons/emojis/part_alternation_mark.png",
	        /* css */"small",
	        /* title */"part_alternation_mark"
	      ],
	      /* record */[
	        /* key */":trident:",
	        /* src */"images/emoticons/emojis/trident.png",
	        /* css */"small",
	        /* title */"trident"
	      ],
	      /* record */[
	        /* key */":black_square:",
	        /* src */"images/emoticons/emojis/black_square.png",
	        /* css */"small",
	        /* title */"black_square"
	      ],
	      /* record */[
	        /* key */":white_square:",
	        /* src */"images/emoticons/emojis/white_square.png",
	        /* css */"small",
	        /* title */"white_square"
	      ],
	      /* record */[
	        /* key */":white_check_mark:",
	        /* src */"images/emoticons/emojis/white_check_mark.png",
	        /* css */"small",
	        /* title */"white_check_mark"
	      ],
	      /* record */[
	        /* key */":black_square_button:",
	        /* src */"images/emoticons/emojis/black_square_button.png",
	        /* css */"small",
	        /* title */"black_square_button"
	      ],
	      /* record */[
	        /* key */":white_square_button:",
	        /* src */"images/emoticons/emojis/white_square_button.png",
	        /* css */"small",
	        /* title */"white_square_button"
	      ],
	      /* record */[
	        /* key */":black_circle:",
	        /* src */"images/emoticons/emojis/black_circle.png",
	        /* css */"small",
	        /* title */"black_circle"
	      ],
	      /* record */[
	        /* key */":white_circle:",
	        /* src */"images/emoticons/emojis/white_circle.png",
	        /* css */"small",
	        /* title */"white_circle"
	      ],
	      /* record */[
	        /* key */":red_circle:",
	        /* src */"images/emoticons/emojis/red_circle.png",
	        /* css */"small",
	        /* title */"red_circle"
	      ],
	      /* record */[
	        /* key */":large_blue_circle:",
	        /* src */"images/emoticons/emojis/large_blue_circle.png",
	        /* css */"small",
	        /* title */"large_blue_circle"
	      ],
	      /* record */[
	        /* key */":large_blue_diamond:",
	        /* src */"images/emoticons/emojis/large_blue_diamond.png",
	        /* css */"small",
	        /* title */"large_blue_diamond"
	      ],
	      /* record */[
	        /* key */":large_orange_diamond:",
	        /* src */"images/emoticons/emojis/large_orange_diamond.png",
	        /* css */"small",
	        /* title */"large_orange_diamond"
	      ],
	      /* record */[
	        /* key */":small_blue_diamond:",
	        /* src */"images/emoticons/emojis/small_blue_diamond.png",
	        /* css */"small",
	        /* title */"small_blue_diamond"
	      ],
	      /* record */[
	        /* key */":small_orange_diamond:",
	        /* src */"images/emoticons/emojis/small_orange_diamond.png",
	        /* css */"small",
	        /* title */"small_orange_diamond"
	      ],
	      /* record */[
	        /* key */":small_red_triangle:",
	        /* src */"images/emoticons/emojis/small_red_triangle.png",
	        /* css */"small",
	        /* title */"small_red_triangle"
	      ],
	      /* record */[
	        /* key */":small_red_triangle_down:",
	        /* src */"images/emoticons/emojis/small_red_triangle_down.png",
	        /* css */"small",
	        /* title */"small_red_triangle_down"
	      ],
	      /* record */[
	        /* key */":shipit:",
	        /* src */"images/emoticons/emojis/shipit.png",
	        /* css */"small",
	        /* title */"shipit"
	      ]
	    ]);

	var emojiMap = $$Array.fold_left(function (run, emoji) {
	      return Curry._3(State.EmojiPairs[/* add */3], emoji[/* key */0], emoji, run);
	    }, State.EmojiPairs[/* empty */0], emoticons);

	var emoji = /* record */[
	  /* key */"(alone)",
	  /* src */"images/emoticons/alone.jpg",
	  /* css */"big",
	  /* title */"alone"
	];

	exports.emoji     = emoji;
	exports.emoticons = emoticons;
	exports.emojiMap  = emojiMap;
	/* emojiMap Not a pure module */


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Js_primitive = __webpack_require__(35);

	function matchRegex(string, regex) {
	  return Js_primitive.null_to_opt(string.match(regex));
	}

	function matchString(s1, s2) {
	  return Js_primitive.null_to_opt(s1.match(s2));
	}

	exports.matchRegex  = matchRegex;
	exports.matchString = matchString;
	/* No side effect */


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by BUCKLESCRIPT VERSION 1.6.0+dev, PLEASE EDIT WITH CARE
	'use strict';

	var Curry    = __webpack_require__(1);
	var React    = __webpack_require__(41);
	var $$String = __webpack_require__(20);
	var ReactRe  = __webpack_require__(71);

	var include = ReactRe.Component[/* Stateful */8];

	var componentDidMount = include[0];

	var componentWillUpdate = include[1];

	var componentDidUpdate = include[2];

	var componentWillReceiveProps = include[3];

	var componentWillUnmount = include[4];

	var getInstanceVars = include[5];

	var jsPropsToReasonProps = include[6];

	var name = "MainArea";

	function getInitialState() {
	  return /* record */[/* editText */""];
	}

	function handleSubmit(param) {
	  var props = param[/* props */1];
	  var state = param[/* state */0];
	  var match = $$String.trim(state[/* editText */0]);
	  if (match === "") {
	    return /* None */0;
	  } else {
	    Curry._2(props[/* onMessageSubmitted */4], props[/* channel */0], /* record */[
	          /* content */state[/* editText */0],
	          /* userId */props[/* me */1][/* id */0],
	          /* createdAt */Date.now()
	        ]);
	    return /* Some */[/* record */[/* editText */""]];
	  }
	}

	function handleButtonSubmit(componentBag, _) {
	  return handleSubmit(componentBag);
	}

	function handleKeyUp(componentBag, $$event) {
	  if ($$event.which === 13 && !$$event.shiftKey) {
	    return handleSubmit(componentBag);
	  } else {
	    return /* None */0;
	  }
	}

	function handleChange(_, $$event) {
	  return /* Some */[/* record */[/* editText */$$event.target.value]];
	}

	function render(param) {
	  var updater = param[/* updater */2];
	  var props = param[/* props */1];
	  return React.createElement("textarea", {
	              className: "chat-input",
	              placeholder: "Chat in #" + props[/* channel */0][/* title */1].toLowerCase(),
	              value: param[/* state */0][/* editText */0],
	              onKeyUp: Curry._1(updater, handleKeyUp),
	              onFocus: function () {
	                return Curry._1(props[/* onFocus */3], /* true */1);
	              },
	              onBlur: function () {
	                return Curry._1(props[/* onFocus */3], /* false */0);
	              },
	              onChange: Curry._1(updater, handleChange)
	            });
	}

	var Chatbox_007 = /* JsProps */include[7];

	var Chatbox_008 = /* InstanceVars */include[8];

	var Chatbox = /* module */[
	  /* componentDidMount */componentDidMount,
	  /* componentWillUpdate */componentWillUpdate,
	  /* componentDidUpdate */componentDidUpdate,
	  /* componentWillReceiveProps */componentWillReceiveProps,
	  /* componentWillUnmount */componentWillUnmount,
	  /* getInstanceVars */getInstanceVars,
	  /* jsPropsToReasonProps */jsPropsToReasonProps,
	  Chatbox_007,
	  Chatbox_008,
	  /* name */name,
	  /* getInitialState */getInitialState,
	  /* handleSubmit */handleSubmit,
	  /* handleButtonSubmit */handleButtonSubmit,
	  /* handleKeyUp */handleKeyUp,
	  /* handleChange */handleChange,
	  /* render */render
	];

	var include$1 = ReactRe.CreateComponent([
	      name,
	      getInstanceVars,
	      getInitialState,
	      componentDidMount,
	      componentWillReceiveProps,
	      componentWillUpdate,
	      componentDidUpdate,
	      componentWillUnmount,
	      jsPropsToReasonProps,
	      render
	    ]);

	var wrapProps = include$1[1];

	function createElement(channel, users, onMessageSubmitted, me, onFocus) {
	  return Curry._1(wrapProps, /* record */[
	              /* channel */channel,
	              /* me */me,
	              /* users */users,
	              /* onFocus */onFocus,
	              /* onMessageSubmitted */onMessageSubmitted
	            ]);
	}

	var escapeKey = 27;

	var enterKey = 13;

	var comp = include$1[0];

	exports.escapeKey     = escapeKey;
	exports.enterKey      = enterKey;
	exports.Chatbox       = Chatbox;
	exports.comp          = comp;
	exports.wrapProps     = wrapProps;
	exports.createElement = createElement;
	/* include Not a pure module */


/***/ }
/******/ ]);